<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>诸子百家</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://uteric.github.io/"/>
  <updated>2020-06-04T15:05:59.000Z</updated>
  <id>http://uteric.github.io/</id>
  
  <author>
    <name>括囊无誉</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在R中使用dnorm()作正态分布曲线</title>
    <link href="http://uteric.github.io/R/R_dnorm/"/>
    <id>http://uteric.github.io/R/R_dnorm/</id>
    <published>2020-06-04T15:05:59.000Z</published>
    <updated>2020-06-04T15:05:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>在R中，dnorm()是正态分布的概率密度函数，d代表density，norm代表正态分布，返回给定x在标准正态分布下的概率密度。</p><p>对于一个给定的正态分布，X ∼ N(μ,σ2)，μ代表均值，σ2代表方差，dnorm()可以计算给定x下的概率密度，即P(X&lt;=x|μ=a,σ=b)，比如，对于标准正态分布 X ∼ N(0,1)，要计算x=1时的概率密度，即dnorm(1)=P(X&lt;=1|μ=0,σ=1)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; dnorm(1) <span class="comment"># 默认为标准正态分布，故亦可以写作下面这种形式</span></span><br><span class="line">[1] 0.2419707</span><br><span class="line">&gt; dnorm(1,mean=0,sd=1)</span><br><span class="line">[1] 0.2419707</span><br></pre></td></tr></table></figure><p>根据dnorm()的性质，我们可以利用dnorm()来绘制正态分布曲线。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- rnorm(100)</span><br><span class="line">&gt; x</span><br><span class="line">  [1]  0.067624027  0.446922747 -0.779610273  1.019910795 -0.611558691 -0.042208614  1.057542821</span><br><span class="line">  [8]  0.168769225  0.292759062  0.069769967 -1.884478653  0.210965341  0.487999663  0.079415785</span><br><span class="line"> [15]  0.547819110  1.218320307 -0.829277733 -0.180677502 -0.722302587 -0.275027962  1.147344053</span><br><span class="line"> [22]  0.057776822  0.620030502 -0.006237543  0.150433226  1.259527763 -0.828779833 -1.581627780</span><br><span class="line"> [29] -0.291715425 -0.275497338 -0.531884989 -0.022351625 -0.213368332 -0.661274484  1.052272355</span><br><span class="line"> [36] -1.491285952 -0.490500385 -0.289660378 -1.223280167 -0.407513962 -0.951917561  0.880820238</span><br><span class="line"> [43]  0.193889773 -1.401977549 -0.571268441 -0.680519505 -0.593670209  1.149960529 -0.366887812</span><br><span class="line"> [50] -1.401057013  0.520541718 -1.871404951 -1.529649961  0.380110232 -0.646800728 -1.745816661</span><br><span class="line"> [57] -1.658797701 -0.809181810 -1.228480576 -0.228532084  1.529535839  0.064914455  0.243817469</span><br><span class="line"> [64]  0.623980927 -1.621383762 -1.790768314  0.816892971 -0.278317894 -0.090169109  0.350612752</span><br><span class="line"> [71]  2.134799802 -0.105936765 -0.606534781 -1.037662539 -0.956454603 -1.271927292 -0.787623941</span><br><span class="line"> [78] -0.001952851 -0.906800210  2.335462375 -0.778546226  0.520102904 -1.076871213  2.310164950</span><br><span class="line"> [85]  0.001740659 -0.808784690  0.750435109 -0.453002059  2.304120907  0.192156923  0.659194960</span><br><span class="line"> [92] -0.807322096 -0.976952123 -0.392610629 -1.173103468  2.769663266 -0.085446868  2.340928468</span><br><span class="line"> [99]  0.309876876 -1.262045807</span><br><span class="line">&gt; x &lt;- x[order(x)]</span><br><span class="line">&gt; x</span><br><span class="line">  [1] -1.884478653 -1.871404951 -1.790768314 -1.745816661 -1.658797701 -1.621383762 -1.581627780</span><br><span class="line">  [8] -1.529649961 -1.491285952 -1.401977549 -1.401057013 -1.271927292 -1.262045807 -1.228480576</span><br><span class="line"> [15] -1.223280167 -1.173103468 -1.076871213 -1.037662539 -0.976952123 -0.956454603 -0.951917561</span><br><span class="line"> [22] -0.906800210 -0.829277733 -0.828779833 -0.809181810 -0.808784690 -0.807322096 -0.787623941</span><br><span class="line"> [29] -0.779610273 -0.778546226 -0.722302587 -0.680519505 -0.661274484 -0.646800728 -0.611558691</span><br><span class="line"> [36] -0.606534781 -0.593670209 -0.571268441 -0.531884989 -0.490500385 -0.453002059 -0.407513962</span><br><span class="line"> [43] -0.392610629 -0.366887812 -0.291715425 -0.289660378 -0.278317894 -0.275497338 -0.275027962</span><br><span class="line"> [50] -0.228532084 -0.213368332 -0.180677502 -0.105936765 -0.090169109 -0.085446868 -0.042208614</span><br><span class="line"> [57] -0.022351625 -0.006237543 -0.001952851  0.001740659  0.057776822  0.064914455  0.067624027</span><br><span class="line"> [64]  0.069769967  0.079415785  0.150433226  0.168769225  0.192156923  0.193889773  0.210965341</span><br><span class="line"> [71]  0.243817469  0.292759062  0.309876876  0.350612752  0.380110232  0.446922747  0.487999663</span><br><span class="line"> [78]  0.520102904  0.520541718  0.547819110  0.620030502  0.623980927  0.659194960  0.750435109</span><br><span class="line"> [85]  0.816892971  0.880820238  1.019910795  1.052272355  1.057542821  1.147344053  1.149960529</span><br><span class="line"> [92]  1.218320307  1.259527763  1.529535839  2.134799802  2.304120907  2.310164950  2.335462375</span><br><span class="line"> [99]  2.340928468  2.769663266</span><br><span class="line">&gt; y &lt;- dnorm(x)</span><br><span class="line">&gt; y</span><br><span class="line">  [1] 0.06757154 0.06925106 0.08026962 0.08691050 0.10078725 0.10716547 0.11421053 0.12382908 0.13121666</span><br><span class="line"> [10] 0.14931322 0.14950598 0.17766810 0.17990644 0.18758545 0.18878514 0.20048328 0.22340604 0.23286176</span><br><span class="line"> [19] 0.24754664 0.25250071 0.25359620 0.26445562 0.28286393 0.28298071 0.28755931 0.28765171 0.28799187</span><br><span class="line"> [28] 0.29255158 0.29439449 0.29463863 0.30734049 0.31648104 0.32059376 0.32364303 0.33089951 0.33191354</span><br><span class="line"> [37] 0.33448585 0.33887894 0.34632094 0.35372559 0.36003862 0.36715457 0.36935018 0.37297575 0.38232376</span><br><span class="line"> [46] 0.38255222 0.38378647 0.38408633 0.38413596 0.38865936 0.38996373 0.39248353 0.39670996 0.39732378</span><br><span class="line"> [55] 0.39748856 0.39858707 0.39884264 0.39893452 0.39894152 0.39894168 0.39827697 0.39810262 0.39803114</span><br><span class="line"> [64] 0.39797247 0.39768622 0.39445366 0.39330100 0.39164452 0.39151355 0.39016259 0.38725882 0.38220718</span><br><span class="line"> [73] 0.38024086 0.37515981 0.37113833 0.36102484 0.35415863 0.34847386 0.34839431 0.34335464 0.32917774</span><br><span class="line"> [82] 0.32836988 0.32103423 0.30103915 0.28576211 0.27066844 0.23715353 0.22933371 0.22806219 0.20656550</span><br><span class="line"> [91] 0.20594562 0.18993171 0.18047850 0.12385070 0.04085919 0.02805958 0.02767102 0.02609189 0.02576054</span><br><span class="line">[100] 0.00861323</span><br><span class="line"></span><br><span class="line">plot(x,y,<span class="built_in">type</span>=<span class="string">"l"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/dnorm01.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在R中，dnorm()是正态分布的概率密度函数，d代表density，norm代表正态分布，返回给定x在标准正态分布下的概率密度。&lt;/p&gt;
&lt;p&gt;对于一个给定的正态分布，X ∼ N(μ,σ2)，μ代表均值，σ2代表方差，dnorm()可以计算给定x下的概率密度，即P(X&amp;l
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>在R中绘制正态分布曲线</title>
    <link href="http://uteric.github.io/R/R_rnorm/"/>
    <id>http://uteric.github.io/R/R_rnorm/</id>
    <published>2020-06-03T03:27:19.000Z</published>
    <updated>2020-06-03T03:27:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>在R中，绘制正态分布曲线方法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- rnorm(1000000,mean=0,sd=1)</span><br><span class="line">plot(density(x),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>,col=<span class="string">"blue"</span>,lwd=2,main=<span class="string">""</span>,bty=<span class="string">"n"</span>,yaxt=<span class="string">"n"</span>,xaxt=<span class="string">"n"</span>,ylim=c(0,0.42),xlim=c(-5,5))</span><br><span class="line">axis(2,at=c(0.0,0.1,0.2,0.3,0.4))</span><br><span class="line">axis(1,at=c(-4,-2,0,2,4))</span><br><span class="line">abline(v=0,lty=2)</span><br></pre></td></tr></table></figure><p><img src="/images/R/rnorm01.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在R中，绘制正态分布曲线方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>在R中使用runif()生成随机数</title>
    <link href="http://uteric.github.io/R/R_runif/"/>
    <id>http://uteric.github.io/R/R_runif/</id>
    <published>2020-06-02T17:31:44.000Z</published>
    <updated>2020-06-02T17:31:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>在R中，可以使用runif()来生成随机数，并且，可以通过使用set.seed()设置随机数种子来生成相同的随机数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt; runif(10)</span><br><span class="line"> [1] 0.88128755 0.05515884 0.49174723 0.58947710 0.26055370 0.42419775 0.91291115 0.53224161 0.59857483</span><br><span class="line">[10] 0.45912772</span><br><span class="line">&gt; runif(10)</span><br><span class="line"> [1] 0.11450970 0.43747334 0.42295942 0.97372512 0.08007066 0.42114884 0.65166254 0.63352907 0.46452289</span><br><span class="line">[10] 0.55470857</span><br><span class="line"></span><br><span class="line">&gt; set.seed(25)</span><br><span class="line">&gt; runif(10)</span><br><span class="line"> [1] 0.41611843 0.69476365 0.14880064 0.89738505 0.12439208 0.98511572 0.62609617 0.33753837 0.06679038</span><br><span class="line">[10] 0.28214161</span><br><span class="line"></span><br><span class="line">&gt; set.seed(25)</span><br><span class="line">&gt; runif(10)</span><br><span class="line"> [1] 0.41611843 0.69476365 0.14880064 0.89738505 0.12439208 0.98511572 0.62609617 0.33753837 0.06679038</span><br><span class="line">[10] 0.28214161</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在R中，可以使用runif()来生成随机数，并且，可以通过使用set.seed()设置随机数种子来生成相同的随机数。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>在R中计算四分位数</title>
    <link href="http://uteric.github.io/R/R_quantile/"/>
    <id>http://uteric.github.io/R/R_quantile/</id>
    <published>2020-06-02T16:41:48.000Z</published>
    <updated>2020-06-02T16:41:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>在统计中，方差或标准差是最常使用的衡量数据离散程度的指标，但是方差或标准差有其固有缺陷，当数据中存在离群值（outlier）时，即使outlier数量极少，也会使方差或标准差极度偏移，因此，我们需要一种统计工具来反映大部分数据分布在哪里，最常用的方法是计算75%与25%之间的差别，这称为四分位间距（interquartile range）。在R中，可以使用IQR()计算四分位间距，使用quantile()来计算向量的所有分位数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- rnorm(100,mean=5,sd=1.2)</span><br><span class="line">&gt; x</span><br><span class="line">  [1] 3.344860 4.314303 5.259742 6.642526 6.458214 5.030996 5.526538 3.866030 5.152883 5.135912 6.010579</span><br><span class="line"> [12] 5.199178 4.673258 5.563149 5.663807 2.268774 3.974171 7.570706 5.354230 3.441178 5.336142 5.397549</span><br><span class="line"> [23] 6.295206 5.978662 5.389794 5.133840 5.752089 4.971203 5.146819 4.765819 7.122367 5.416928 5.400580</span><br><span class="line"> [34] 2.070468 4.243874 6.995033 5.854267 6.015518 5.375023 5.161929 2.867692 4.602293 4.931720 3.562440</span><br><span class="line"> [45] 5.203235 5.592098 5.646586 7.694937 4.820110 6.684675 4.165650 5.176470 5.430320 5.406880 6.836335</span><br><span class="line"> [56] 5.699121 6.424420 3.639120 6.670612 3.697681 2.813417 3.199165 4.858059 6.516864 4.165146 5.899056</span><br><span class="line"> [67] 4.145372 5.538209 5.269511 6.678199 4.815026 4.617706 4.923228 4.281446 4.346960 6.630204 4.452420</span><br><span class="line"> [78] 4.746863 4.586939 4.630323 4.922966 5.327350 3.658732 5.610512 3.980912 6.549318 7.398793 6.176837</span><br><span class="line"> [89] 4.913479 4.437707 6.204448 4.120004 5.745570 4.143726 3.151242 4.422654 5.892240 5.678614 3.890303</span><br><span class="line">[100] 5.226019</span><br><span class="line"></span><br><span class="line">&gt; IQR(x)</span><br><span class="line">[1] 1.343469</span><br><span class="line"></span><br><span class="line">&gt; quantile(x)</span><br><span class="line">      0%      25%      50%      75%     100% </span><br><span class="line">2.070468 4.403730 5.187824 5.747200 7.694937</span><br><span class="line"></span><br><span class="line">&gt; boxplot(x,horizontal = T)</span><br></pre></td></tr></table></figure><p><img src="/images/R/quantile01.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在统计中，方差或标准差是最常使用的衡量数据离散程度的指标，但是方差或标准差有其固有缺陷，当数据中存在离群值（outlier）时，即使outlier数量极少，也会使方差或标准差极度偏移，因此，我们需要一种统计工具来反映大部分数据分布在哪里，最常用的方法是计算75%与25%之间
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>在R中使用wilcox.test做非正态分布检验</title>
    <link href="http://uteric.github.io/R/R_wilcoxtest/"/>
    <id>http://uteric.github.io/R/R_wilcoxtest/</id>
    <published>2020-06-01T03:03:00.000Z</published>
    <updated>2020-06-01T03:03:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>对于符合正态分布的两个样本进行显著性检验时，可以使用t.test()；若是不确定两个样本是否符合正态分布假设时，可以执行Mann-Whitney-Wilcoxon Test，函数为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wilcox.test(x,y,paired = TRUE, alternative = <span class="string">"two.sided"</span>)</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; wilcox.test(mtcars<span class="variable">$gear</span>,mtcars<span class="variable">$carb</span>,paired = TRUE, alternative = <span class="string">"two.sided"</span>)</span><br><span class="line"></span><br><span class="line">Wilcoxon signed rank <span class="built_in">test</span> with continuity correction</span><br><span class="line"></span><br><span class="line">data:  mtcars<span class="variable">$gear</span> and mtcars<span class="variable">$carb</span></span><br><span class="line">V = 267, p-value = 0.004493</span><br><span class="line">alternative hypothesis: <span class="literal">true</span> location <span class="built_in">shift</span> is not equal to 0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;对于符合正态分布的两个样本进行显著性检验时，可以使用t.test()；若是不确定两个样本是否符合正态分布假设时，可以执行Mann-Whitney-Wilcoxon Test，函数为&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>在R中计算标准差与方差</title>
    <link href="http://uteric.github.io/R/R_variance/"/>
    <id>http://uteric.github.io/R/R_variance/</id>
    <published>2020-05-31T21:41:13.000Z</published>
    <updated>2020-05-31T21:41:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>标准差（standard deviation）和方差（variance），都是表示数据点的离散程度，它们的值越接近0表示离散程度越小，值越大表示离散程度越大。</p><p>对方差进行开平方运算，得到的就是标准差。标准差的优势在于，其单位与数据本身单位一致，所以更加直观。</p><p>在R中，计算方差的函数为var()，计算标准差的函数为sd()，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; x=rnorm(10,mean=3,sd=0.5)</span><br><span class="line">&gt; x</span><br><span class="line"> [1] 3.459304 3.176322 3.417269 3.477847 3.458249 2.290683 3.087733 2.796081 3.147183 3.164584</span><br><span class="line">&gt; var(x)</span><br><span class="line">[1] 0.1375574</span><br><span class="line">&gt; sd(x)</span><br><span class="line">[1] 0.3708872</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;标准差（standard deviation）和方差（variance），都是表示数据点的离散程度，它们的值越接近0表示离散程度越小，值越大表示离散程度越大。&lt;/p&gt;
&lt;p&gt;对方差进行开平方运算，得到的就是标准差。标准差的优势在于，其单位与数据本身单位一致，所以更加直观。&lt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>在R中使用查看数据范围</title>
    <link href="http://uteric.github.io/R/R_range/"/>
    <id>http://uteric.github.io/R/R_range/</id>
    <published>2020-05-31T21:14:52.000Z</published>
    <updated>2020-05-31T21:14:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>方法一：range()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- c(23,12,3,45,25,31,17)</span><br><span class="line">&gt; range(x)</span><br><span class="line">[1]  3 45</span><br><span class="line"></span><br><span class="line">&gt; x &lt;- c(23,12,3,45,25,31,17,NA) <span class="comment"># 若数据中含有NA，则会报错</span></span><br><span class="line">&gt; range(x)</span><br><span class="line">[1] NA NA</span><br></pre></td></tr></table></figure><p>方法二：min()与max()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; min(x)</span><br><span class="line">[1] 3</span><br><span class="line">&gt; max(x)</span><br><span class="line">[1] 45</span><br><span class="line"></span><br><span class="line">&gt; x &lt;- c(23,12,3,45,25,31,17,NA) <span class="comment"># 若数据中含有NA，则会报错</span></span><br><span class="line">&gt; min(x)</span><br><span class="line">[1] NA</span><br><span class="line">&gt; max(x)</span><br><span class="line">[1] NA</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;方法一：range()&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>使用na.omit()删除缺失值</title>
    <link href="http://uteric.github.io/R/R_naomit/"/>
    <id>http://uteric.github.io/R/R_naomit/</id>
    <published>2020-05-31T20:21:40.000Z</published>
    <updated>2020-05-31T20:21:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>在R中，如果数据中存在缺失值（NA），在进行数值计算或统计时会报错，因此，需要将NA去掉，可以使用na.omit()，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- c(23,12,3,45,25,31,17,NA)</span><br><span class="line">&gt; mean(x)</span><br><span class="line">[1] NA</span><br><span class="line"></span><br><span class="line">&gt; x &lt;- na.omit(x)</span><br><span class="line">&gt; x</span><br><span class="line">[1] 23 12  3 45 25 31 17</span><br><span class="line">attr(,<span class="string">"na.action"</span>)</span><br><span class="line">[1] 8</span><br><span class="line">attr(,<span class="string">"class"</span>)</span><br><span class="line">[1] <span class="string">"omit"</span></span><br><span class="line"></span><br><span class="line">&gt; x &lt;- as.vector(x)</span><br><span class="line">&gt; x</span><br><span class="line">[1] 23 12  3 45 25 31 17</span><br><span class="line"></span><br><span class="line">&gt; mean(x)</span><br><span class="line">[1] 22.28571</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在R中，如果数据中存在缺失值（NA），在进行数值计算或统计时会报错，因此，需要将NA去掉，可以使用na.omit()，例如：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>在R中求平均数与中位数</title>
    <link href="http://uteric.github.io/R/R_mean/"/>
    <id>http://uteric.github.io/R/R_mean/</id>
    <published>2020-05-31T20:04:01.000Z</published>
    <updated>2020-05-31T20:04:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>mean()用于求平均数，语法：mean(x, na.rm = FALSE)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- c(12,3,45,23,25,31,17)</span><br><span class="line">&gt; mean(x)</span><br><span class="line">[1] 22.28571</span><br><span class="line"></span><br><span class="line">&gt; x &lt;- c(12,3,45,23,25,31,17,NA) <span class="comment"># 这个向量中含NA，计算平均数会产生NA;</span></span><br><span class="line">&gt; mean(x)</span><br><span class="line">[1] NA</span><br><span class="line">&gt; mean(x,na.rm=TRUE) <span class="comment"># na.rm=TRUE，去除缺失值（missing values）</span></span><br><span class="line">[1] 22.28571</span><br></pre></td></tr></table></figure><p>median()用于求中位数，语法：median(x, na.rm = FALSE)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- c(23,12,3,45,25,31,17,NA)</span><br><span class="line">&gt; median(x,na.rm=TRUE)</span><br><span class="line">[1] 23</span><br></pre></td></tr></table></figure><p>注意，在这两个例子当中，中位数与平均数接近，这是个特例，一般情况下，这两个数据可能差别极大。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;mean()用于求平均数，语法：mean(x, na.rm = FALSE)&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="中位数" scheme="http://uteric.github.io/tags/%E4%B8%AD%E4%BD%8D%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>利用透明度绘制高密度图</title>
    <link href="http://uteric.github.io/R/R_highdensity/"/>
    <id>http://uteric.github.io/R/R_highdensity/</id>
    <published>2020-05-31T04:17:14.000Z</published>
    <updated>2020-05-31T04:17:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>在对大样本绘制密度图时，重叠的点往往无法有效展示，此时，可以通过设置透明度来强调重叠的点。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">par(pin=c(3,3))</span><br><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,col=rgb(8,81,156,80,maxColorValue=255),pch=20,cex=0.8,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xaxt=<span class="string">"n"</span>,yaxt=<span class="string">"n"</span>,xlim=c(-1,1),ylim=c(-1,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">axis(1,at=c(-1,0,1))</span><br><span class="line">axis(2,at=c(-1,0,1))</span><br><span class="line">abline(h=0,col=<span class="string">"black"</span>)</span><br><span class="line">abline(v=0,col=<span class="string">"black"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/density01.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在对大样本绘制密度图时，重叠的点往往无法有效展示，此时，可以通过设置透明度来强调重叠的点。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="density" scheme="http://uteric.github.io/tags/density/"/>
    
  </entry>
  
  <entry>
    <title>使用layout定义图形排版</title>
    <link href="http://uteric.github.io/R/R_layout/"/>
    <id>http://uteric.github.io/R/R_layout/</id>
    <published>2020-05-30T22:54:57.000Z</published>
    <updated>2020-05-30T22:54:57.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layout(matrix(c(1,1,2,3),2,2,byrow=T))</span><br><span class="line">layout.show(3)</span><br></pre></td></tr></table></figure><p><img src="/images/R/layout01.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layout(matrix(c(1,0,2,2,3,4),3,2,byrow=T))</span><br><span class="line">layout.show(4)</span><br></pre></td></tr></table></figure><p><img src="/images/R/layout02.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="layout" scheme="http://uteric.github.io/tags/layout/"/>
    
  </entry>
  
  <entry>
    <title>使用mfrow和mfcol实现R的图形排版</title>
    <link href="http://uteric.github.io/R/R_mfrow/"/>
    <id>http://uteric.github.io/R/R_mfrow/</id>
    <published>2020-05-30T19:36:02.000Z</published>
    <updated>2020-05-30T19:36:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>在R绘图中，可以使用mfrow=c(nrows, ncols)或mfcol=c(nrows, ncols)配合par()来实现图形排版。mfrow=c(nrows, ncols)是按行排列，mfcol=c(nrows, ncols)是按列排列。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; attach(mtcars)</span><br><span class="line">&gt; par(mfrow=c(2,2))</span><br><span class="line">&gt; hist(wt)</span><br><span class="line">&gt; hist(cyl)</span><br><span class="line">&gt; hist(disp)</span><br><span class="line">&gt; hist(hp)</span><br></pre></td></tr></table></figure><p><img src="/images/R/mfrow01.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">par(mfcol=c(2,2))</span><br><span class="line">hist(wt)</span><br><span class="line">hist(cyl)</span><br><span class="line">hist(disp)</span><br><span class="line">hist(hp)</span><br></pre></td></tr></table></figure><p><img src="/images/R/mfrow02.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在R绘图中，可以使用mfrow=c(nrows, ncols)或mfcol=c(nrows, ncols)配合par()来实现图形排版。mfrow=c(nrows, ncols)是按行排列，mfcol=c(nrows, ncols)是按列排列。&lt;/p&gt;
&lt;figure cl
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="mfrow" scheme="http://uteric.github.io/tags/mfrow/"/>
    
  </entry>
  
  <entry>
    <title>R绘图使用pin控制图形大小</title>
    <link href="http://uteric.github.io/R/R_pinsize/"/>
    <id>http://uteric.github.io/R/R_pinsize/</id>
    <published>2020-05-30T19:23:34.000Z</published>
    <updated>2020-05-30T19:23:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用R绘图时，可以使用pin控制图形大小，语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">par(pin=c(3,3))</span><br><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/pin01.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">par(pin=c(5,3))</span><br><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/pin02.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">par(pin=c(2,3))</span><br><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/pin03.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用R绘图时，可以使用pin控制图形大小，语法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="pin" scheme="http://uteric.github.io/tags/pin/"/>
    
  </entry>
  
  <entry>
    <title>R中的点样式pch</title>
    <link href="http://uteric.github.io/R/R_pch/"/>
    <id>http://uteric.github.io/R/R_pch/</id>
    <published>2020-05-30T18:44:31.000Z</published>
    <updated>2020-05-30T18:44:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>R中使用pch来控制点的样式，可以使用help(pch)来查看其用法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">help</span>(pch)</span><br></pre></td></tr></table></figure><p><img src="/images/R/pch.png" alt></p><p>如上图，pch共25种，默认为1，其中，15:18是fill形状，但无border；19：25既有fill又有border；比如，pch=16和pch=19，区别在于，19有border，所以比16大。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;R中使用pch来控制点的样式，可以使用help(pch)来查看其用法&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="pch" scheme="http://uteric.github.io/tags/pch/"/>
    
  </entry>
  
  <entry>
    <title>R绘图使用abline添加直线</title>
    <link href="http://uteric.github.io/R/R_abline/"/>
    <id>http://uteric.github.io/R/R_abline/</id>
    <published>2020-05-30T17:49:22.000Z</published>
    <updated>2020-05-30T17:49:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>一、水平线</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">abline(h=0.5,col=<span class="string">"black"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/abline01.png" alt></p><p>二、垂直线</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">abline(v=0.5,col=<span class="string">"blue"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/abline02.png" alt></p><p>三、水平线与垂直线</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">abline(h=0.5,v=0.5,col=c(<span class="string">"black"</span>,<span class="string">"blue"</span>))</span><br></pre></td></tr></table></figure><p><img src="/images/R/abline03.png" alt></p><p>四、斜线</p><p>斜线是由两个参数定义的，参数a代表斜线与Y轴的交战，参数b代表斜率</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">abline(a=0.2，b=1)</span><br></pre></td></tr></table></figure><p><img src="/images/R/abline04.png" alt></p><p>另外，可以控制线的颜色，宽度和线型，参数为col，lwd，lty，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">abline(a=0.8，b=-1,col=<span class="string">"red"</span>,lwd=2,lty=2)</span><br></pre></td></tr></table></figure><p><img src="/images/R/abline05.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、水平线&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="abline" scheme="http://uteric.github.io/tags/abline/"/>
    
  </entry>
  
  <entry>
    <title>R设置坐标轴原点</title>
    <link href="http://uteric.github.io/R/plot_origin/"/>
    <id>http://uteric.github.io/R/plot_origin/</id>
    <published>2020-05-30T17:33:28.000Z</published>
    <updated>2020-05-30T17:33:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用R绘图时，默认的坐标轴交点并不是X和Y的最小值，我们可以通过xaxs=”i”和yaxs=”i”来进行设置。</p><p>使用默认设置，生成图形如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1))</span><br></pre></td></tr></table></figure><p><img src="/images/R/origin01.png" alt></p><p>设置之后，图形如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/origin02.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用R绘图时，默认的坐标轴交点并不是X和Y的最小值，我们可以通过xaxs=”i”和yaxs=”i”来进行设置。&lt;/p&gt;
&lt;p&gt;使用默认设置，生成图形如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>从BAM文件中提取指定区域的READS数</title>
    <link href="http://uteric.github.io/CHIPSEQ/bamreads/"/>
    <id>http://uteric.github.io/CHIPSEQ/bamreads/</id>
    <published>2020-05-28T19:59:29.000Z</published>
    <updated>2020-05-28T19:59:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过序列比对得到BAM文件后，常常需要对READS数进行统计，以便进行下游分析与作图，可以说，这是对BAM数据可视化的关键步骤。</p><p>一、全局统计</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; samtools view -c targetc.bam</span><br><span class="line">6</span><br></pre></td></tr></table></figure><p>二、指定区域统计</p><p>对于指定区域进行统计，需要用到bedtools multicov，BAM文件可以是一个或多个，语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; bedtools multicov -bams targetc.bam -bed chr19d.bed </span><br><span class="line">chr19   3100000 3100100 1</span><br><span class="line">chr19   3100100 3100300 5</span><br><span class="line"></span><br><span class="line">&gt; multiBamCov -bams targetc.bam -bed chr19d.bed <span class="comment"># bedtools multicov与multiBamCov效果一致</span></span><br><span class="line">chr19   3100000 3100100 1</span><br><span class="line">chr19   3100100 3100300 5</span><br><span class="line"></span><br><span class="line">&gt; bedtools multicov -bams targetc.bam -bed chr19d.bed &gt; result.bed <span class="comment"># 可以输出到文件</span></span><br><span class="line">&gt; less result.bed</span><br><span class="line"></span><br><span class="line">chr19   3100000 3100100 1</span><br><span class="line">chr19   3100100 3100300 5</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过序列比对得到BAM文件后，常常需要对READS数进行统计，以便进行下游分析与作图，可以说，这是对BAM数据可视化的关键步骤。&lt;/p&gt;
&lt;p&gt;一、全局统计&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g
      
    
    </summary>
    
      <category term="生物信息" scheme="http://uteric.github.io/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="BAM" scheme="http://uteric.github.io/tags/BAM/"/>
    
  </entry>
  
  <entry>
    <title>BAM文件转BED文件</title>
    <link href="http://uteric.github.io/CHIPSEQ/bamtobed/"/>
    <id>http://uteric.github.io/CHIPSEQ/bamtobed/</id>
    <published>2020-05-28T17:37:47.000Z</published>
    <updated>2020-05-28T17:37:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>有多种方法可以实现从BAM文件到BED文件的转换，比较简单的一种，是使用bedtools bamtobed，语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bedtools bamtobed -i ***.bam &gt; ***.bed</span><br></pre></td></tr></table></figure><p>实例如下：</p><p>准备一个BAM文件，targetc.bam</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; samtools view targetc.bam | head</span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:1116:8464:18014      16      chr19   3100027 31      36M     *       0       0       AGGGCAATGGGCCACTGCCTCAGCCAGCTTTTTAGG     JJIJJJIJIJJJGGIJJJJJJJJHHHHHFFFFFCCC     AS:i:0  XS:i:-5 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:1205:1404:46284      0       chr19   3100235 23      36M     *       0       0       ACATATGTCTTGTGAGTGACTCTCTTTCCTTCCCTT     CCCFFFFFHHHHHIJJHG?&lt;CEFFEHHCEHHIHJIJ     AS:i:-10        XN:i:0  XM:i:2  XO:i:0  XG:i:0  NM:i:2  MD:Z:2G5G27     YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2216:8268:81593      16      chr19   3100237 23      36M     *       0       0       ATATGTCTTGTGAGTGACTCTCTTTCCTTCCCTTTG     JJIJIIGJJIIIGIIHHIJJIHHFHDBHFFDDFC@@     AS:i:-11        XN:i:0  XM:i:2  XO:i:0  XG:i:0  NM:i:2  MD:Z:0G5G29     YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1210:11323:25283     16      chr19   3100240 23      36M     *       0       0       TGTCTTGTGAGTGACTCTCTTTCCTTCCCTTTGCCC     IJJJJJJIJIJJJIJIGIJJJJJHHHHHFFFFFCCC     AS:i:-11        XN:i:0  XM:i:2  XO:i:0  XG:i:0  NM:i:2  MD:Z:3G29T2     YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:1206:10953:35815     16      chr19   3100246 40      36M     *       0       0       GTGAGTGACTCTCTTTCCTTCCCTTTGCCCTTCCAT     JJJIJIHHJJIJJJJJJJJJJJJHHHHHFFFFFCCC     AS:i:-5 XN:i:0  XM:i:1  XO:i:0  XG:i:0  NM:i:1  MD:Z:27T8       YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:2216:12650:100608    16      chr19   3100250 40      36M     *       0       0       GTGACTCTCTTTCCTTCCCTTTGCCCTTCCATCTTT     JJIHJIJJJJJJJJJJJJJJJJJHHHHHFFFFFCCC     AS:i:-5 XN:i:0  XM:i:1  XO:i:0  XG:i:0  NM:i:1  MD:Z:23T12      YT:Z:UU</span><br></pre></td></tr></table></figure><p>转换为bed文件，targetc.bed</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; bedtools bamtobed -i targetc.bam &gt; targetc.bed</span><br><span class="line">&gt; less targetc.bed</span><br><span class="line"></span><br><span class="line">chr19   3100026 3100062 HWI-ST1113:280:H7KE6ADXX:1:1116:8464:18014      31      -</span><br><span class="line">chr19   3100234 3100270 HWI-ST1113:280:H7KE6ADXX:1:1205:1404:46284      23      +</span><br><span class="line">chr19   3100236 3100272 HWI-ST1113:280:H7KE6ADXX:1:2216:8268:81593      23      -</span><br><span class="line">chr19   3100239 3100275 HWI-ST1113:280:H7KE6ADXX:2:1210:11323:25283     23      -</span><br><span class="line">chr19   3100245 3100281 HWI-ST1113:280:H7KE6ADXX:1:1206:10953:35815     40      -</span><br><span class="line">chr19   3100249 3100285 HWI-ST1113:280:H7KE6ADXX:2:2216:12650:100608    40      -</span><br></pre></td></tr></table></figure><p>两两比较，就会发现BAM文件与BED文件的区别，BED文件有6列：</p><p>第一列：染色体位置<br>第二列：start<br>第三列：end<br>第四列：对应BAM文件的QNAME，包含测序平台，read name等信息<br>第五列：对应BAM文件的MAPQ，即比对质量<br>第六列：正负链</p><p><img src="/images/CHIP/bam01.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有多种方法可以实现从BAM文件到BED文件的转换，比较简单的一种，是使用bedtools bamtobed，语法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c
      
    
    </summary>
    
      <category term="生物信息" scheme="http://uteric.github.io/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="BED" scheme="http://uteric.github.io/tags/BED/"/>
    
  </entry>
  
  <entry>
    <title>从BAM文件中提取指定区域</title>
    <link href="http://uteric.github.io/CHIPSEQ/intersectbam/"/>
    <id>http://uteric.github.io/CHIPSEQ/intersectbam/</id>
    <published>2020-05-28T15:41:55.000Z</published>
    <updated>2020-05-28T15:41:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>首先，看一下BAM文件的内容，BAM文件名为heart.bam</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; samtools view heart.bam | head</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1201:2203:75105      16      chr19   3079081 35      36M     *       0       0       AGTCCATTTATTCTTTGTGTAGAGAAAGACTACTGA     JIIJJJJJJJJJIIGJJIJJJIJGHGHHFFFDFCC@     AS:i:0  XS:i:-12        XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG     @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2214:19987:44958     16      chr19   3080044 30      36M     *       0       0       ACCAGAGAAACAGACAGCTTCTGGGACAGGTGGAAG     <span class="comment">####AC&gt;C?&lt;+,BC?7=7CBABBB@7BA7AA+A;==     AS:i:0  XS:i:-4 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:2214:13543:99477     16      chr19   3082639 31      36M     *       0       0       GCTCTAGAAAAAATGGAAGCAAATTCAGCCAAGAGG     IJIJJJIJJJJJJIJIJJJJJJJHHHHHFFFFFCCC     AS:i:0  XS:i:-5 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1115:6716:37571      0       chr19   3083875 31      36M     *       0       0       TACCCCAACTCGGTGCTGGTTTGGGTTTCTTTTTGG     CCCFFFFFHHHHHFGHJJJFHIGJJEHIIJJJJJJJ     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:1216:1670:96735      0       chr19   3085742 31      36M     *       0       0       TCACTACTGCCTGAGACTTCGCCTACTCATCATTGT     CCCFFFFFHHHHHIIJJIJJJJIIJJJIJJJIJJIG     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:1202:4496:44872      16      chr19   3087466 42      36M     *       0       0       TCCCTTTGGGGATCTTTCATTAGAAGCAGTTATAGT     JJJJIJJJJJJIJHJJJJJJJJJHHHHHFFFFFCCC     AS:i:0  XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:1111:11809:31419     16      chr19   3088647 31      36M     *       0       0       ATTCATATGGAATAACAAAAAACTGAGGATAGCAAA     JIIHJJIIGIJJIJJIJJIIIEIHHGHHFFFFD@CC     AS:i:0  XS:i:-5 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1113:1925:16628      16      chr19   3090618 42      36M     *       0       0       TATTGTCAAGTATATTTTAGGACAATTTTCTTGATT     JIIIIGJJIIIGIIIJIIGHEEJGGHGHFFFFF@CC     AS:i:0  XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2205:2262:65371      0       chr19   3090666 35      36M     *       0       0       CAATCATTTTGATAACAGGAATCAGGAGAACTAACT     CCCFFFFFHHHHHJJJJJJJJJJJJJJJJJJJJJJJ     AS:i:0  XS:i:-11        XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br></pre></td></tr></table></figure><p>下面，准备一个区域信息文件，即BED文件，命名为chr19.bed，查看一下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; less chr19.bed</span><br><span class="line">chr19   3079000 3080000</span><br></pre></td></tr></table></figure><p>使用bedtools intersect取交集，并查看生成的target.bam文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bedtools intersect -a heart.bam -b chr19.bed &gt; target.bam</span><br><span class="line">&gt; samtools view target.bam | head</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1201:2203:75105      16      chr19   3079081 35      36M     *       0       0       AGTCCATTTATTCTTTGTGTAGAGAAAGACTACTGA    JIIJJJJJJJJJIIGJJIJJJIJGHGHHFFFDFCC@    AS:i:0  XS:i:-12        XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG    @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI    AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br></pre></td></tr></table></figure><p>在目标范围chr19:3079000-3080000之间，共有两个reads，即3079081-3079116和3079310-3079345，读长皆为36 bp，这是最简单的情形，容易理解，因为两段读长都完全位于目标范围之内。</p><p>假设，读长只有一部分位于目标区域之内，结果如何？修改chr19.bed为chr19b.bed，并更改目标范围，看看结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">chr19   3079081 3079310 <span class="comment"># [1]第一段完全覆盖，第二段只覆盖第一个碱基</span></span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1201:2203:75105      16      chr19   3079081 35      36M     *       0       0       AGTCCATTTATTCTTTGTGTAGAGAAAGACTACTGA     JIIJJJJJJJJJIIGJJIJJJIJGHGHHFFFDFCC@     AS:i:0  XS:i:-12        XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG     @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line"></span><br><span class="line">chr19   3079081 3079345 <span class="comment"># [2]两段完全覆盖</span></span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1201:2203:75105      16      chr19   3079081 35      36M     *       0       0       AGTCCATTTATTCTTTGTGTAGAGAAAGACTACTGA     JIIJJJJJJJJJIIGJJIJJJIJGHGHHFFFDFCC@     AS:i:0  XS:i:-12        XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG     @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line"></span><br><span class="line">chr19   3079116 3079310 <span class="comment"># [3]第一段只覆盖最后一个碱基，第二段只覆盖第一个碱基</span></span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG     @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line"></span><br><span class="line">chr19   3079116 3079345 <span class="comment"># [4]第一段只覆盖最后一个碱基，第二段完全覆盖</span></span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG     @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line"></span><br><span class="line">chr19   3079081 3079309 <span class="comment"># [5]第一段完全覆盖，第二段无覆盖</span></span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1201:2203:75105      16      chr19   3079081 35      36M     *       0       0       AGTCCATTTATTCTTTGTGTAGAGAAAGACTACTGA     JIIJJJJJJJJJIIGJJIJJJIJGHGHHFFFDFCC@     AS:i:0  XS:i:-12        XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line"></span><br><span class="line">chr19   3079116 3079344 <span class="comment"># [6]第一段只覆盖最后一个碱基，第二段覆盖绝大部分</span></span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG     @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line"></span><br><span class="line">chr19   3079090 3079330 <span class="comment"># [7]两段部分覆盖</span></span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1201:2203:75105      16      chr19   3079081 35      36M     *       0       0       AGTCCATTTATTCTTTGTGTAGAGAAAGACTACTGA     JIIJJJJJJJJJIIGJJIJJJIJGHGHHFFFDFCC@     AS:i:0  XS:i:-12        XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG     @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br></pre></td></tr></table></figure><p>综上可见，对于一个read而言，只要其中一个碱基（最后一个例外）落入目的范围，则会被认为是与此目的区域有交集并保留。</p><p><img src="/images/CHIP/intersect01.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先，看一下BAM文件的内容，BAM文件名为heart.bam&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;spa
      
    
    </summary>
    
      <category term="生物信息" scheme="http://uteric.github.io/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="BAM" scheme="http://uteric.github.io/tags/BAM/"/>
    
  </entry>
  
  <entry>
    <title>在R中做T.TEST检验</title>
    <link href="http://uteric.github.io/R/R_ttest/"/>
    <id>http://uteric.github.io/R/R_ttest/</id>
    <published>2020-05-25T16:31:49.000Z</published>
    <updated>2020-05-25T16:31:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>t.test是统计学中最常用的检验方法，用来检验两种数据的均值是否相等，用于对正态分布的整体估值，通常应用于小样本(n &lt; 30)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&gt; x = rnorm(100,mean=20,sd=2)</span><br><span class="line">&gt; y = rnorm(80,mean=17,sd=0.5)</span><br><span class="line">&gt; x</span><br><span class="line">  [1] 20.10501 19.57169 20.22245 21.28158 22.79906 20.51546 14.67365 17.04364</span><br><span class="line">  [9] 25.95344 19.31148 20.43485 17.98477 19.74916 19.26762 21.72743 20.11575</span><br><span class="line"> [17] 21.89669 20.80891 19.20210 23.74879 20.86405 18.60392 19.64830 20.93985</span><br><span class="line"> [25] 20.06913 19.31531 19.51718 14.83523 17.86656 23.17153 23.24995 18.28544</span><br><span class="line"> [33] 16.90067 18.18929 19.24018 23.06328 19.89651 20.65407 21.44609 19.09518</span><br><span class="line"> [41] 19.93449 20.50547 18.71952 20.53826 16.79557 16.36828 18.46189 21.87571</span><br><span class="line"> [49] 20.23504 22.98625 20.57800 20.25816 22.77162 19.65173 18.93720 20.96241</span><br><span class="line"> [57] 22.07938 20.84764 15.96894 20.95383 22.98853 18.52296 22.12153 19.24400</span><br><span class="line"> [65] 17.60788 21.69468 19.72411 18.76660 20.39496 20.03006 21.53487 21.54606</span><br><span class="line"> [73] 23.51990 22.38181 22.53281 20.71092 26.15736 19.86159 24.47946 21.85552</span><br><span class="line"> [81] 19.16387 16.26043 21.92526 18.09403 18.98212 18.78348 19.75857 20.55351</span><br><span class="line"> [89] 19.89423 21.28345 17.95772 20.36063 24.53150 18.56979 18.97283 20.20293</span><br><span class="line"> [97] 19.52201 20.56878 18.66845 19.60917</span><br><span class="line"></span><br><span class="line"> &gt; y</span><br><span class="line"> [1] 16.88846 16.71937 16.89191 17.11247 17.15868 17.02920 16.98368 17.17061</span><br><span class="line"> [9] 16.75688 16.63579 17.24011 17.03478 17.10650 16.72028 16.34144 16.76368</span><br><span class="line">[17] 17.22986 17.35607 17.70713 16.36813 16.83038 16.50520 16.76058 16.09259</span><br><span class="line">[25] 16.70426 16.38888 16.47690 15.72234 17.51965 17.27447 16.83134 17.28090</span><br><span class="line">[33] 16.92229 16.49557 17.17620 17.00118 17.69339 17.61332 16.40824 16.01501</span><br><span class="line">[41] 16.89645 16.51672 16.31224 17.22569 16.72381 16.60916 17.52845 16.65373</span><br><span class="line">[49] 17.23515 16.70682 16.81280 16.60288 16.47891 17.14051 17.21594 17.34832</span><br><span class="line">[57] 16.95022 16.43481 17.06931 16.42438 17.15994 16.89638 16.86685 16.72054</span><br><span class="line">[65] 18.01892 16.76284 17.09799 16.83591 16.14628 16.02412 16.37865 16.69834</span><br><span class="line">[73] 16.87643 16.55011 17.43718 16.12465 17.52974 16.85233 16.85341 16.32574</span><br><span class="line"></span><br><span class="line">&gt; ttest = t.test(x,y)</span><br><span class="line">&gt; ttest</span><br><span class="line">Welch Two Sample t-test</span><br><span class="line"></span><br><span class="line">data:  x and y</span><br><span class="line">t = 15.506, df = 109.45, p-value &lt; 2.2e-16</span><br><span class="line">alternative hypothesis: <span class="literal">true</span> difference <span class="keyword">in</span> means is not equal to 0</span><br><span class="line">95 percent confidence interval:</span><br><span class="line"> 2.922444 3.778957</span><br><span class="line">sample estimates:</span><br><span class="line">mean of x mean of y </span><br><span class="line"> 20.20033  16.84963</span><br><span class="line"></span><br><span class="line">&gt; names(ttest)</span><br><span class="line"> [1] <span class="string">"statistic"</span>   <span class="string">"parameter"</span>   <span class="string">"p.value"</span>     <span class="string">"conf.int"</span>    <span class="string">"estimate"</span>   </span><br><span class="line"> [6] <span class="string">"null.value"</span>  <span class="string">"stderr"</span>      <span class="string">"alternative"</span> <span class="string">"method"</span>      <span class="string">"data.name"</span></span><br><span class="line"></span><br><span class="line"> &gt; ttest<span class="variable">$p</span>.value <span class="comment"># p-value</span></span><br><span class="line">[1] 2.189551e-29</span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$conf</span>.int <span class="comment">#  置信度</span></span><br><span class="line">[1] 2.922444 3.778957</span><br><span class="line">attr(,<span class="string">"conf.level"</span>)</span><br><span class="line">[1] 0.95</span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$estimate</span> <span class="comment"># 均值</span></span><br><span class="line">mean of x mean of y </span><br><span class="line"> 20.20033  16.84963 </span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$null</span>.value</span><br><span class="line">difference <span class="keyword">in</span> means </span><br><span class="line">                  0 </span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$alternative</span></span><br><span class="line">[1] <span class="string">"two.sided"</span></span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$method</span> <span class="comment"># 检验方法</span></span><br><span class="line">[1] <span class="string">"Welch Two Sample t-test"</span></span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$parameter</span> <span class="comment"># degree of freedom，自由度</span></span><br><span class="line">      df </span><br><span class="line">109.4474 </span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$statistic</span> <span class="comment"># t, ratio of difference between two groups with difference within groups，即组间差异与组内差异的比值；</span></span><br><span class="line">       t <span class="comment"># t=(mean of x - mean of y)/stderr = (20.20033-16.84963)/0.2160862 = 15.50631</span></span><br><span class="line">15.50631 </span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$data</span>.name <span class="comment"># data</span></span><br><span class="line">[1] <span class="string">"x and y"</span></span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$stderr</span> <span class="comment"># standard error of the difference，均值差的标准误（均值标准误的差）</span></span><br><span class="line">[1] 0.2160862</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;t.test是统计学中最常用的检验方法，用来检验两种数据的均值是否相等，用于对正态分布的整体估值，通常应用于小样本(n &amp;lt; 30)。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="T.TEST" scheme="http://uteric.github.io/tags/T-TEST/"/>
    
  </entry>
  
</feed>
