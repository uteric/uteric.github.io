<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>诸子百家</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://uteric.github.io/"/>
  <updated>2020-05-30T19:36:02.000Z</updated>
  <id>http://uteric.github.io/</id>
  
  <author>
    <name>括囊无誉</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用mfrow和mfcol实现R的图形排版</title>
    <link href="http://uteric.github.io/R/R_mfrow/"/>
    <id>http://uteric.github.io/R/R_mfrow/</id>
    <published>2020-05-30T19:36:02.000Z</published>
    <updated>2020-05-30T19:36:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>在R绘图中，可以使用mfrow=c(nrows, ncols)或mfcol=c(nrows, ncols)配合par()来实现图形排版。mfrow=c(nrows, ncols)是按行排列，mfcol=c(nrows, ncols)是按列排列。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; attach(mtcars)</span><br><span class="line">&gt; par(mfrow=c(2,2))</span><br><span class="line">&gt; hist(wt)</span><br><span class="line">&gt; hist(cyl)</span><br><span class="line">&gt; hist(disp)</span><br><span class="line">&gt; hist(hp)</span><br></pre></td></tr></table></figure><p><img src="/images/R/mfrow01.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">par(mfcol=c(2,2))</span><br><span class="line">hist(wt)</span><br><span class="line">hist(cyl)</span><br><span class="line">hist(disp)</span><br><span class="line">hist(hp)</span><br></pre></td></tr></table></figure><p><img src="/images/R/mfrow02.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在R绘图中，可以使用mfrow=c(nrows, ncols)或mfcol=c(nrows, ncols)配合par()来实现图形排版。mfrow=c(nrows, ncols)是按行排列，mfcol=c(nrows, ncols)是按列排列。&lt;/p&gt;
&lt;figure cl
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="mfrow" scheme="http://uteric.github.io/tags/mfrow/"/>
    
  </entry>
  
  <entry>
    <title>R绘图使用pin控制图形大小</title>
    <link href="http://uteric.github.io/R/R_pinsize/"/>
    <id>http://uteric.github.io/R/R_pinsize/</id>
    <published>2020-05-30T19:23:34.000Z</published>
    <updated>2020-05-30T19:23:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用R绘图时，可以使用pin控制图形大小，语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">par(pin=c(3,3))</span><br><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/pin01.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">par(pin=c(5,3))</span><br><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/pin02.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">par(pin=c(2,3))</span><br><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/pin03.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用R绘图时，可以使用pin控制图形大小，语法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="pin" scheme="http://uteric.github.io/tags/pin/"/>
    
  </entry>
  
  <entry>
    <title>R中的点样式pch</title>
    <link href="http://uteric.github.io/R/R_pch/"/>
    <id>http://uteric.github.io/R/R_pch/</id>
    <published>2020-05-30T18:44:31.000Z</published>
    <updated>2020-05-30T18:44:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>R中使用pch来控制点的样式，可以使用help(pch)来查看其用法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">help</span>(pch)</span><br></pre></td></tr></table></figure><p><img src="/images/R/pch.png" alt></p><p>如上图，pch共25种，默认为1，其中，15:18是fill形状，但无border；19：25既有fill又有border；比如，pch=16和pch=19，区别在于，19有border，所以比16大。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;R中使用pch来控制点的样式，可以使用help(pch)来查看其用法&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="pch" scheme="http://uteric.github.io/tags/pch/"/>
    
  </entry>
  
  <entry>
    <title>R绘图使用abline添加直线</title>
    <link href="http://uteric.github.io/R/R_abline/"/>
    <id>http://uteric.github.io/R/R_abline/</id>
    <published>2020-05-30T17:49:22.000Z</published>
    <updated>2020-05-30T17:49:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>一、水平线</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">abline(h=0.5,col=<span class="string">"black"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/abline01.png" alt></p><p>二、垂直线</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">abline(v=0.5,col=<span class="string">"blue"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/abline02.png" alt></p><p>三、水平线与垂直线</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">abline(h=0.5,v=0.5,col=c(<span class="string">"black"</span>,<span class="string">"blue"</span>))</span><br></pre></td></tr></table></figure><p><img src="/images/R/abline03.png" alt></p><p>四、斜线</p><p>斜线是由两个参数定义的，参数a代表斜线与Y轴的交战，参数b代表斜率</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">abline(a=0.2，b=1)</span><br></pre></td></tr></table></figure><p><img src="/images/R/abline04.png" alt></p><p>另外，可以控制线的颜色，宽度和线型，参数为col，lwd，lty，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">abline(a=0.8，b=-1,col=<span class="string">"red"</span>,lwd=2,lty=2)</span><br></pre></td></tr></table></figure><p><img src="/images/R/abline05.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、水平线&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="abline" scheme="http://uteric.github.io/tags/abline/"/>
    
  </entry>
  
  <entry>
    <title>R设置坐标轴原点</title>
    <link href="http://uteric.github.io/R/plot_origin/"/>
    <id>http://uteric.github.io/R/plot_origin/</id>
    <published>2020-05-30T17:33:28.000Z</published>
    <updated>2020-05-30T17:33:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用R绘图时，默认的坐标轴交点并不是X和Y的最小值，我们可以通过xaxs=”i”和yaxs=”i”来进行设置。</p><p>使用默认设置，生成图形如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1))</span><br></pre></td></tr></table></figure><p><img src="/images/R/origin01.png" alt></p><p>设置之后，图形如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/origin02.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用R绘图时，默认的坐标轴交点并不是X和Y的最小值，我们可以通过xaxs=”i”和yaxs=”i”来进行设置。&lt;/p&gt;
&lt;p&gt;使用默认设置，生成图形如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>从BAM文件中提取指定区域的READS数</title>
    <link href="http://uteric.github.io/CHIPSEQ/bamreads/"/>
    <id>http://uteric.github.io/CHIPSEQ/bamreads/</id>
    <published>2020-05-28T19:59:29.000Z</published>
    <updated>2020-05-28T19:59:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过序列比对得到BAM文件后，常常需要对READS数进行统计，以便进行下游分析与作图，可以说，这是对BAM数据可视化的关键步骤。</p><p>一、全局统计</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; samtools view -c targetc.bam</span><br><span class="line">6</span><br></pre></td></tr></table></figure><p>二、指定区域统计</p><p>对于指定区域进行统计，需要用到bedtools multicov，BAM文件可以是一个或多个，语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; bedtools multicov -bams targetc.bam -bed chr19d.bed </span><br><span class="line">chr19   3100000 3100100 1</span><br><span class="line">chr19   3100100 3100300 5</span><br><span class="line"></span><br><span class="line">&gt; multiBamCov -bams targetc.bam -bed chr19d.bed <span class="comment"># bedtools multicov与multiBamCov效果一致</span></span><br><span class="line">chr19   3100000 3100100 1</span><br><span class="line">chr19   3100100 3100300 5</span><br><span class="line"></span><br><span class="line">&gt; bedtools multicov -bams targetc.bam -bed chr19d.bed &gt; result.bed <span class="comment"># 可以输出到文件</span></span><br><span class="line">&gt; less result.bed</span><br><span class="line"></span><br><span class="line">chr19   3100000 3100100 1</span><br><span class="line">chr19   3100100 3100300 5</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过序列比对得到BAM文件后，常常需要对READS数进行统计，以便进行下游分析与作图，可以说，这是对BAM数据可视化的关键步骤。&lt;/p&gt;
&lt;p&gt;一、全局统计&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g
      
    
    </summary>
    
      <category term="生物信息" scheme="http://uteric.github.io/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="BAM" scheme="http://uteric.github.io/tags/BAM/"/>
    
  </entry>
  
  <entry>
    <title>BAM文件转BED文件</title>
    <link href="http://uteric.github.io/CHIPSEQ/bamtobed/"/>
    <id>http://uteric.github.io/CHIPSEQ/bamtobed/</id>
    <published>2020-05-28T17:37:47.000Z</published>
    <updated>2020-05-28T17:37:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>有多种方法可以实现从BAM文件到BED文件的转换，比较简单的一种，是使用bedtools bamtobed，语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bedtools bamtobed -i ***.bam &gt; ***.bed</span><br></pre></td></tr></table></figure><p>实例如下：</p><p>准备一个BAM文件，targetc.bam</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; samtools view targetc.bam | head</span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:1116:8464:18014      16      chr19   3100027 31      36M     *       0       0       AGGGCAATGGGCCACTGCCTCAGCCAGCTTTTTAGG     JJIJJJIJIJJJGGIJJJJJJJJHHHHHFFFFFCCC     AS:i:0  XS:i:-5 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:1205:1404:46284      0       chr19   3100235 23      36M     *       0       0       ACATATGTCTTGTGAGTGACTCTCTTTCCTTCCCTT     CCCFFFFFHHHHHIJJHG?&lt;CEFFEHHCEHHIHJIJ     AS:i:-10        XN:i:0  XM:i:2  XO:i:0  XG:i:0  NM:i:2  MD:Z:2G5G27     YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2216:8268:81593      16      chr19   3100237 23      36M     *       0       0       ATATGTCTTGTGAGTGACTCTCTTTCCTTCCCTTTG     JJIJIIGJJIIIGIIHHIJJIHHFHDBHFFDDFC@@     AS:i:-11        XN:i:0  XM:i:2  XO:i:0  XG:i:0  NM:i:2  MD:Z:0G5G29     YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1210:11323:25283     16      chr19   3100240 23      36M     *       0       0       TGTCTTGTGAGTGACTCTCTTTCCTTCCCTTTGCCC     IJJJJJJIJIJJJIJIGIJJJJJHHHHHFFFFFCCC     AS:i:-11        XN:i:0  XM:i:2  XO:i:0  XG:i:0  NM:i:2  MD:Z:3G29T2     YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:1206:10953:35815     16      chr19   3100246 40      36M     *       0       0       GTGAGTGACTCTCTTTCCTTCCCTTTGCCCTTCCAT     JJJIJIHHJJIJJJJJJJJJJJJHHHHHFFFFFCCC     AS:i:-5 XN:i:0  XM:i:1  XO:i:0  XG:i:0  NM:i:1  MD:Z:27T8       YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:2216:12650:100608    16      chr19   3100250 40      36M     *       0       0       GTGACTCTCTTTCCTTCCCTTTGCCCTTCCATCTTT     JJIHJIJJJJJJJJJJJJJJJJJHHHHHFFFFFCCC     AS:i:-5 XN:i:0  XM:i:1  XO:i:0  XG:i:0  NM:i:1  MD:Z:23T12      YT:Z:UU</span><br></pre></td></tr></table></figure><p>转换为bed文件，targetc.bed</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; bedtools bamtobed -i targetc.bam &gt; targetc.bed</span><br><span class="line">&gt; less targetc.bed</span><br><span class="line"></span><br><span class="line">chr19   3100026 3100062 HWI-ST1113:280:H7KE6ADXX:1:1116:8464:18014      31      -</span><br><span class="line">chr19   3100234 3100270 HWI-ST1113:280:H7KE6ADXX:1:1205:1404:46284      23      +</span><br><span class="line">chr19   3100236 3100272 HWI-ST1113:280:H7KE6ADXX:1:2216:8268:81593      23      -</span><br><span class="line">chr19   3100239 3100275 HWI-ST1113:280:H7KE6ADXX:2:1210:11323:25283     23      -</span><br><span class="line">chr19   3100245 3100281 HWI-ST1113:280:H7KE6ADXX:1:1206:10953:35815     40      -</span><br><span class="line">chr19   3100249 3100285 HWI-ST1113:280:H7KE6ADXX:2:2216:12650:100608    40      -</span><br></pre></td></tr></table></figure><p>两两比较，就会发现BAM文件与BED文件的区别，BED文件有6列：</p><p>第一列：染色体位置<br>第二列：start<br>第三列：end<br>第四列：对应BAM文件的QNAME，包含测序平台，read name等信息<br>第五列：对应BAM文件的MAPQ，即比对质量<br>第六列：正负链</p><p><img src="/images/CHIP/bam01.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有多种方法可以实现从BAM文件到BED文件的转换，比较简单的一种，是使用bedtools bamtobed，语法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c
      
    
    </summary>
    
      <category term="生物信息" scheme="http://uteric.github.io/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="BED" scheme="http://uteric.github.io/tags/BED/"/>
    
  </entry>
  
  <entry>
    <title>从BAM文件中提取指定区域</title>
    <link href="http://uteric.github.io/CHIPSEQ/intersectbam/"/>
    <id>http://uteric.github.io/CHIPSEQ/intersectbam/</id>
    <published>2020-05-28T15:41:55.000Z</published>
    <updated>2020-05-28T15:41:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>首先，看一下BAM文件的内容，BAM文件名为heart.bam</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; samtools view heart.bam | head</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1201:2203:75105      16      chr19   3079081 35      36M     *       0       0       AGTCCATTTATTCTTTGTGTAGAGAAAGACTACTGA     JIIJJJJJJJJJIIGJJIJJJIJGHGHHFFFDFCC@     AS:i:0  XS:i:-12        XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG     @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2214:19987:44958     16      chr19   3080044 30      36M     *       0       0       ACCAGAGAAACAGACAGCTTCTGGGACAGGTGGAAG     <span class="comment">####AC&gt;C?&lt;+,BC?7=7CBABBB@7BA7AA+A;==     AS:i:0  XS:i:-4 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:2214:13543:99477     16      chr19   3082639 31      36M     *       0       0       GCTCTAGAAAAAATGGAAGCAAATTCAGCCAAGAGG     IJIJJJIJJJJJJIJIJJJJJJJHHHHHFFFFFCCC     AS:i:0  XS:i:-5 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1115:6716:37571      0       chr19   3083875 31      36M     *       0       0       TACCCCAACTCGGTGCTGGTTTGGGTTTCTTTTTGG     CCCFFFFFHHHHHFGHJJJFHIGJJEHIIJJJJJJJ     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:1216:1670:96735      0       chr19   3085742 31      36M     *       0       0       TCACTACTGCCTGAGACTTCGCCTACTCATCATTGT     CCCFFFFFHHHHHIIJJIJJJJIIJJJIJJJIJJIG     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:1202:4496:44872      16      chr19   3087466 42      36M     *       0       0       TCCCTTTGGGGATCTTTCATTAGAAGCAGTTATAGT     JJJJIJJJJJJIJHJJJJJJJJJHHHHHFFFFFCCC     AS:i:0  XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:1111:11809:31419     16      chr19   3088647 31      36M     *       0       0       ATTCATATGGAATAACAAAAAACTGAGGATAGCAAA     JIIHJJIIGIJJIJJIJJIIIEIHHGHHFFFFD@CC     AS:i:0  XS:i:-5 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1113:1925:16628      16      chr19   3090618 42      36M     *       0       0       TATTGTCAAGTATATTTTAGGACAATTTTCTTGATT     JIIIIGJJIIIGIIIJIIGHEEJGGHGHFFFFF@CC     AS:i:0  XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2205:2262:65371      0       chr19   3090666 35      36M     *       0       0       CAATCATTTTGATAACAGGAATCAGGAGAACTAACT     CCCFFFFFHHHHHJJJJJJJJJJJJJJJJJJJJJJJ     AS:i:0  XS:i:-11        XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br></pre></td></tr></table></figure><p>下面，准备一个区域信息文件，即BED文件，命名为chr19.bed，查看一下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; less chr19.bed</span><br><span class="line">chr19   3079000 3080000</span><br></pre></td></tr></table></figure><p>使用bedtools intersect取交集，并查看生成的target.bam文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bedtools intersect -a heart.bam -b chr19.bed &gt; target.bam</span><br><span class="line">&gt; samtools view target.bam | head</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1201:2203:75105      16      chr19   3079081 35      36M     *       0       0       AGTCCATTTATTCTTTGTGTAGAGAAAGACTACTGA    JIIJJJJJJJJJIIGJJIJJJIJGHGHHFFFDFCC@    AS:i:0  XS:i:-12        XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG    @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI    AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br></pre></td></tr></table></figure><p>在目标范围chr19:3079000-3080000之间，共有两个reads，即3079081-3079116和3079310-3079345，读长皆为36 bp，这是最简单的情形，容易理解，因为两段读长都完全位于目标范围之内。</p><p>假设，读长只有一部分位于目标区域之内，结果如何？修改chr19.bed为chr19b.bed，并更改目标范围，看看结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">chr19   3079081 3079310 <span class="comment"># [1]第一段完全覆盖，第二段只覆盖第一个碱基</span></span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1201:2203:75105      16      chr19   3079081 35      36M     *       0       0       AGTCCATTTATTCTTTGTGTAGAGAAAGACTACTGA     JIIJJJJJJJJJIIGJJIJJJIJGHGHHFFFDFCC@     AS:i:0  XS:i:-12        XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG     @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line"></span><br><span class="line">chr19   3079081 3079345 <span class="comment"># [2]两段完全覆盖</span></span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1201:2203:75105      16      chr19   3079081 35      36M     *       0       0       AGTCCATTTATTCTTTGTGTAGAGAAAGACTACTGA     JIIJJJJJJJJJIIGJJIJJJIJGHGHHFFFDFCC@     AS:i:0  XS:i:-12        XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG     @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line"></span><br><span class="line">chr19   3079116 3079310 <span class="comment"># [3]第一段只覆盖最后一个碱基，第二段只覆盖第一个碱基</span></span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG     @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line"></span><br><span class="line">chr19   3079116 3079345 <span class="comment"># [4]第一段只覆盖最后一个碱基，第二段完全覆盖</span></span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG     @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line"></span><br><span class="line">chr19   3079081 3079309 <span class="comment"># [5]第一段完全覆盖，第二段无覆盖</span></span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1201:2203:75105      16      chr19   3079081 35      36M     *       0       0       AGTCCATTTATTCTTTGTGTAGAGAAAGACTACTGA     JIIJJJJJJJJJIIGJJIJJJIJGHGHHFFFDFCC@     AS:i:0  XS:i:-12        XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line"></span><br><span class="line">chr19   3079116 3079344 <span class="comment"># [6]第一段只覆盖最后一个碱基，第二段覆盖绝大部分</span></span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG     @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line"></span><br><span class="line">chr19   3079090 3079330 <span class="comment"># [7]两段部分覆盖</span></span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1201:2203:75105      16      chr19   3079081 35      36M     *       0       0       AGTCCATTTATTCTTTGTGTAGAGAAAGACTACTGA     JIIJJJJJJJJJIIGJJIJJJIJGHGHHFFFDFCC@     AS:i:0  XS:i:-12        XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2206:14516:57404     0       chr19   3079310 31      36M     *       0       0       CCACAAGATGACTCCAGACCTGAGTGATGCAAACAG     @@@FFFFFGHFHHJJGIJJEHJJJEEHIJJJJJJJI     AS:i:0  XS:i:-6 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br></pre></td></tr></table></figure><p>综上可见，对于一个read而言，只要其中一个碱基（最后一个例外）落入目的范围，则会被认为是与此目的区域有交集并保留。</p><p><img src="/images/CHIP/intersect01.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先，看一下BAM文件的内容，BAM文件名为heart.bam&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;spa
      
    
    </summary>
    
      <category term="生物信息" scheme="http://uteric.github.io/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="BAM" scheme="http://uteric.github.io/tags/BAM/"/>
    
  </entry>
  
  <entry>
    <title>T.TEST in R</title>
    <link href="http://uteric.github.io/R/R_ttest/"/>
    <id>http://uteric.github.io/R/R_ttest/</id>
    <published>2020-05-25T16:31:49.000Z</published>
    <updated>2020-05-25T16:31:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>t.test是统计学中最常用的检验方法，用来检验两种数据的均值是否相等，用于对正态分布的整体估值，通常应用于小样本(n &lt; 30)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&gt; x = rnorm(100,mean=20,sd=2)</span><br><span class="line">&gt; y = rnorm(80,mean=17,sd=0.5)</span><br><span class="line">&gt; x</span><br><span class="line">  [1] 20.10501 19.57169 20.22245 21.28158 22.79906 20.51546 14.67365 17.04364</span><br><span class="line">  [9] 25.95344 19.31148 20.43485 17.98477 19.74916 19.26762 21.72743 20.11575</span><br><span class="line"> [17] 21.89669 20.80891 19.20210 23.74879 20.86405 18.60392 19.64830 20.93985</span><br><span class="line"> [25] 20.06913 19.31531 19.51718 14.83523 17.86656 23.17153 23.24995 18.28544</span><br><span class="line"> [33] 16.90067 18.18929 19.24018 23.06328 19.89651 20.65407 21.44609 19.09518</span><br><span class="line"> [41] 19.93449 20.50547 18.71952 20.53826 16.79557 16.36828 18.46189 21.87571</span><br><span class="line"> [49] 20.23504 22.98625 20.57800 20.25816 22.77162 19.65173 18.93720 20.96241</span><br><span class="line"> [57] 22.07938 20.84764 15.96894 20.95383 22.98853 18.52296 22.12153 19.24400</span><br><span class="line"> [65] 17.60788 21.69468 19.72411 18.76660 20.39496 20.03006 21.53487 21.54606</span><br><span class="line"> [73] 23.51990 22.38181 22.53281 20.71092 26.15736 19.86159 24.47946 21.85552</span><br><span class="line"> [81] 19.16387 16.26043 21.92526 18.09403 18.98212 18.78348 19.75857 20.55351</span><br><span class="line"> [89] 19.89423 21.28345 17.95772 20.36063 24.53150 18.56979 18.97283 20.20293</span><br><span class="line"> [97] 19.52201 20.56878 18.66845 19.60917</span><br><span class="line"></span><br><span class="line"> &gt; y</span><br><span class="line"> [1] 16.88846 16.71937 16.89191 17.11247 17.15868 17.02920 16.98368 17.17061</span><br><span class="line"> [9] 16.75688 16.63579 17.24011 17.03478 17.10650 16.72028 16.34144 16.76368</span><br><span class="line">[17] 17.22986 17.35607 17.70713 16.36813 16.83038 16.50520 16.76058 16.09259</span><br><span class="line">[25] 16.70426 16.38888 16.47690 15.72234 17.51965 17.27447 16.83134 17.28090</span><br><span class="line">[33] 16.92229 16.49557 17.17620 17.00118 17.69339 17.61332 16.40824 16.01501</span><br><span class="line">[41] 16.89645 16.51672 16.31224 17.22569 16.72381 16.60916 17.52845 16.65373</span><br><span class="line">[49] 17.23515 16.70682 16.81280 16.60288 16.47891 17.14051 17.21594 17.34832</span><br><span class="line">[57] 16.95022 16.43481 17.06931 16.42438 17.15994 16.89638 16.86685 16.72054</span><br><span class="line">[65] 18.01892 16.76284 17.09799 16.83591 16.14628 16.02412 16.37865 16.69834</span><br><span class="line">[73] 16.87643 16.55011 17.43718 16.12465 17.52974 16.85233 16.85341 16.32574</span><br><span class="line"></span><br><span class="line">&gt; ttest = t.test(x,y)</span><br><span class="line">&gt; ttest</span><br><span class="line">Welch Two Sample t-test</span><br><span class="line"></span><br><span class="line">data:  x and y</span><br><span class="line">t = 15.506, df = 109.45, p-value &lt; 2.2e-16</span><br><span class="line">alternative hypothesis: <span class="literal">true</span> difference <span class="keyword">in</span> means is not equal to 0</span><br><span class="line">95 percent confidence interval:</span><br><span class="line"> 2.922444 3.778957</span><br><span class="line">sample estimates:</span><br><span class="line">mean of x mean of y </span><br><span class="line"> 20.20033  16.84963</span><br><span class="line"></span><br><span class="line">&gt; names(ttest)</span><br><span class="line"> [1] <span class="string">"statistic"</span>   <span class="string">"parameter"</span>   <span class="string">"p.value"</span>     <span class="string">"conf.int"</span>    <span class="string">"estimate"</span>   </span><br><span class="line"> [6] <span class="string">"null.value"</span>  <span class="string">"stderr"</span>      <span class="string">"alternative"</span> <span class="string">"method"</span>      <span class="string">"data.name"</span></span><br><span class="line"></span><br><span class="line"> &gt; ttest<span class="variable">$p</span>.value <span class="comment"># p-value</span></span><br><span class="line">[1] 2.189551e-29</span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$conf</span>.int <span class="comment">#  置信度</span></span><br><span class="line">[1] 2.922444 3.778957</span><br><span class="line">attr(,<span class="string">"conf.level"</span>)</span><br><span class="line">[1] 0.95</span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$estimate</span> <span class="comment"># 均值</span></span><br><span class="line">mean of x mean of y </span><br><span class="line"> 20.20033  16.84963 </span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$null</span>.value</span><br><span class="line">difference <span class="keyword">in</span> means </span><br><span class="line">                  0 </span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$alternative</span></span><br><span class="line">[1] <span class="string">"two.sided"</span></span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$method</span> <span class="comment"># 检验方法</span></span><br><span class="line">[1] <span class="string">"Welch Two Sample t-test"</span></span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$parameter</span> <span class="comment"># degree of freedom，自由度</span></span><br><span class="line">      df </span><br><span class="line">109.4474 </span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$statistic</span> <span class="comment"># t, ratio of difference between two groups with difference within groups，即组间差异与组内差异的比值；</span></span><br><span class="line">       t <span class="comment"># t=(mean of x - mean of y)/stderr = (20.20033-16.84963)/0.2160862 = 15.50631</span></span><br><span class="line">15.50631 </span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$data</span>.name <span class="comment"># data</span></span><br><span class="line">[1] <span class="string">"x and y"</span></span><br><span class="line"></span><br><span class="line">&gt; ttest<span class="variable">$stderr</span> <span class="comment"># standard error of the difference，均值差的标准误（均值标准误的差）</span></span><br><span class="line">[1] 0.2160862</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;t.test是统计学中最常用的检验方法，用来检验两种数据的均值是否相等，用于对正态分布的整体估值，通常应用于小样本(n &amp;lt; 30)。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="T.TEST" scheme="http://uteric.github.io/tags/T-TEST/"/>
    
  </entry>
  
  <entry>
    <title>配色网站COLORBREWER</title>
    <link href="http://uteric.github.io/R/R_palette/"/>
    <id>http://uteric.github.io/R/R_palette/</id>
    <published>2020-05-25T16:13:29.000Z</published>
    <updated>2020-05-25T16:13:29.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://colorbrewer2.org/" target="_blank" rel="noopener">COLORBREWER</a>，是一个配色网站，其配色方案简约大方，是作图配色的首选。</p><p><img src="/images/R/palette01.png" alt></p><p>常用的配色方案如下：</p><p>五种蓝色的配色方案：”#eff3ff”,”#bdd7e7”,”#6baed6”,”#3182bd”,”#08519c”</p><p>五种绿色的配色方案：”#edf8e9”,”#bae4b3”,”#74c476”,”#31a354”,”#006d2c”</p><p>五种灰色的配色方案：”#f7f7f7”,”#cccccc”,”#969696”,”#636363”,”#252525”</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://colorbrewer2.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;COLORBREWER&lt;/a&gt;，是一个配色网站，其配色方案简约大方，是作图配色的首选。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/R
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="配色" scheme="http://uteric.github.io/tags/%E9%85%8D%E8%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>Data Frame常用操作</title>
    <link href="http://uteric.github.io/Linux/dataframe/"/>
    <id>http://uteric.github.io/Linux/dataframe/</id>
    <published>2020-05-25T04:03:02.000Z</published>
    <updated>2020-05-25T04:03:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>subset可以用来筛选data.frame的子集，语法如下：</p><p>一、创建数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; name &lt;- c(<span class="string">"Layton"</span>,<span class="string">"Ben"</span>,<span class="string">"Paul"</span>,<span class="string">"Peter"</span>,<span class="string">"Haley"</span>,<span class="string">"Jump"</span>)</span><br><span class="line">&gt; age &lt;- c(25,18,45,60,24,35)</span><br><span class="line">&gt; sex &lt;- c(<span class="string">"M"</span>,<span class="string">"M"</span>,<span class="string">"M"</span>,<span class="string">"M"</span>,<span class="string">"F"</span>,<span class="string">"M"</span>)</span><br><span class="line">&gt; weight &lt;- c(120,150,125,140,115,110)</span><br><span class="line">&gt; data &lt;- data.frame(name,age,sex,weight)</span><br><span class="line">&gt; data</span><br><span class="line">    name age sex weight</span><br><span class="line">1 Layton  25   M    120</span><br><span class="line">2    Ben  18   M    150</span><br><span class="line">3   Paul  45   M    125</span><br><span class="line">4  Peter  60   M    140</span><br><span class="line">5  Haley  24   F    115</span><br><span class="line">6   Jump  35   M    110</span><br></pre></td></tr></table></figure><p>二、判断类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; class(data)</span><br><span class="line">[1] <span class="string">"data.frame"</span></span><br><span class="line"></span><br><span class="line">&gt; str(data)</span><br><span class="line"><span class="string">'data.frame'</span>:6 obs. of  4 variables:</span><br><span class="line"> $ name  : Factor w/ 6 levels <span class="string">"Ben"</span>,<span class="string">"Haley"</span>,..: 4 1 5 6 2 3</span><br><span class="line"> $ age   : num  25 18 45 60 24 35</span><br><span class="line"> $ sex   : Factor w/ 2 levels <span class="string">"F"</span>,<span class="string">"M"</span>: 2 2 2 2 1 2</span><br><span class="line"> $ weight: num  120 150 125 140 115 110</span><br></pre></td></tr></table></figure><p>三、行数列数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; nrow(data)</span><br><span class="line">[1] 6</span><br><span class="line">&gt; ncol(data)</span><br><span class="line">[1] 4</span><br></pre></td></tr></table></figure><p>四、查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&gt; data[<span class="built_in">which</span>(data<span class="variable">$sex</span>==<span class="string">"M"</span>),]</span><br><span class="line">    name age sex weight height</span><br><span class="line">1 Layton  25   M    120   1.70</span><br><span class="line">2    Ben  18   M    150   1.65</span><br><span class="line">3   Paul  45   M    125   1.60</span><br><span class="line">4  Peter  60   M    140   1.72</span><br><span class="line">6   Jump  35   M    110   1.66</span><br><span class="line"></span><br><span class="line">&gt; data[<span class="built_in">which</span>(data<span class="variable">$sex</span>==<span class="string">"M"</span>),<span class="string">"age"</span>]</span><br><span class="line">[1] 25 18 45 60 35</span><br><span class="line"></span><br><span class="line">&gt; data[<span class="built_in">which</span>(data<span class="variable">$sex</span>==<span class="string">"M"</span>),c(<span class="string">"age"</span>,<span class="string">"weight"</span>)]</span><br><span class="line">  age weight</span><br><span class="line">1  25    120</span><br><span class="line">2  18    150</span><br><span class="line">3  45    125</span><br><span class="line">4  60    140</span><br><span class="line">6  35    110</span><br></pre></td></tr></table></figure><p>五、子集</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt; subset(data,age&lt;30)</span><br><span class="line">    name age sex weight</span><br><span class="line">1 Layton  25   M    120</span><br><span class="line">2    Ben  18   M    150</span><br><span class="line">5  Haley  24   F    115</span><br><span class="line"></span><br><span class="line">&gt; subset(data,age&lt;30&amp;sex==<span class="string">"F"</span>)</span><br><span class="line">   name age sex weight</span><br><span class="line">5 Haley  24   F    115</span><br><span class="line"></span><br><span class="line">&gt; subset(data,age&lt;30,select=name)</span><br><span class="line">    name</span><br><span class="line">1 Layton</span><br><span class="line">2    Ben</span><br><span class="line">5  Haley</span><br><span class="line"></span><br><span class="line">&gt; subset(data,age&gt;20&amp;sex==<span class="string">"M"</span>&amp;weight&gt;120,select=c(<span class="string">"name"</span>,<span class="string">"height"</span>))</span><br><span class="line">   name height</span><br><span class="line">3  Paul   1.60</span><br><span class="line">4 Peter   1.72</span><br></pre></td></tr></table></figure><p>六、打印行列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="built_in">print</span>(name)</span><br><span class="line">[1] <span class="string">"Layton"</span> <span class="string">"Ben"</span>    <span class="string">"Paul"</span>   <span class="string">"Peter"</span>  <span class="string">"Haley"</span>  <span class="string">"Jump"</span> </span><br><span class="line">&gt; data[2,]</span><br><span class="line">  name age sex weight height</span><br><span class="line">2  Ben  18   M    150   1.65</span><br><span class="line">&gt; data[,2]</span><br><span class="line">[1] 25 18 45 60 24 35</span><br></pre></td></tr></table></figure><p>七、添加列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; data<span class="variable">$height</span> &lt;- c(1.7,1.65,1.6,1.72,1.74,1.66)</span><br><span class="line">&gt; data</span><br><span class="line">    name age sex weight height</span><br><span class="line">1 Layton  25   M    120   1.70</span><br><span class="line">2    Ben  18   M    150   1.65</span><br><span class="line">3   Paul  45   M    125   1.60</span><br><span class="line">4  Peter  60   M    140   1.72</span><br><span class="line">5  Haley  24   F    115   1.74</span><br><span class="line">6   Jump  35   M    110   1.66</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;subset可以用来筛选data.frame的子集，语法如下：&lt;/p&gt;
&lt;p&gt;一、创建数据&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="data frame" scheme="http://uteric.github.io/tags/data-frame/"/>
    
  </entry>
  
  <entry>
    <title>定义并提取基因间区域-INTERGENIC REGION</title>
    <link href="http://uteric.github.io/CHIPSEQ/intergenic/"/>
    <id>http://uteric.github.io/CHIPSEQ/intergenic/</id>
    <published>2020-05-24T21:26:05.000Z</published>
    <updated>2020-05-24T21:26:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>一、定义intergenic </p><p>基因间区域，即intergenic region，可以简单定义为两个相邻基因A和B之间的区域；对于某个基因而言，TSS和TES可以看作是基因的上下边界，但是，由于promoter往往在TSS上游，而TES附近可能有调控元件存在，因此，我们也需要把promoter区域和TES下游也考虑在内。如果我们定义，promoter区域为“TSS-2Kb至TSS+0.5Kb”，下游调控区域为“TES-0.5Kb至TES+0.5Kb”，那么，intergenic region就可以认为是[A]{TES+0.5Kb}至[B]{TSS-2Kb}之间的区域。当然，这样定义intergenic有个根本的缺陷，即如果A与B之间不足2.5Kb，则这两个基因之间的区域会被忽略掉，但是，通盘考虑，由于目前对于基因的调控区域还不精确清楚，可以说，没有任何一种在基因组水平上的操作是绝对准确的。</p><p>二、提取intergenic</p><p>根据上面的定义，如果从全基因组中扣除已知的基因区域”[A]{TES+0.5Kb}-[B]{TSS-2Kb}”，剩下的区域就是intergenic，我们利用bedtools来提取intergenic，以mm10为例，方法如下：</p><p>2.1 创建文件mm10，内容是所有染色体的长度</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&gt; cat mm10</span><br><span class="line">chr1    195471971</span><br><span class="line">chr2    182113224</span><br><span class="line">chr3    160039680</span><br><span class="line">chr4    156508116</span><br><span class="line">chr5    151834684</span><br><span class="line">chr6    149736546</span><br><span class="line">chr7    145441459</span><br><span class="line">chr8    129401213</span><br><span class="line">chr9    124595110</span><br><span class="line">chr10   130694993</span><br><span class="line">chr11   122082543</span><br><span class="line">chr12   120129022</span><br><span class="line">chr13   120421639</span><br><span class="line">chr14   124902244</span><br><span class="line">chr15   104043685</span><br><span class="line">chr16   98207768</span><br><span class="line">chr17   94987271</span><br><span class="line">chr18   90702639</span><br><span class="line">chr19   61431566</span><br><span class="line">chrX    171031299</span><br><span class="line">chrY    91744698</span><br></pre></td></tr></table></figure><p>2.2 将染色体重新排序，若不排序，后面取补集时会报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&gt; sort -k1,1 -k2,2n mm10 &gt; mm10_sorted</span><br><span class="line">&gt; cat mm10_sorted</span><br><span class="line">chr1    195471971</span><br><span class="line">chr10   130694993</span><br><span class="line">chr11   122082543</span><br><span class="line">chr12   120129022</span><br><span class="line">chr13   120421639</span><br><span class="line">chr14   124902244</span><br><span class="line">chr15   104043685</span><br><span class="line">chr16   98207768</span><br><span class="line">chr17   94987271</span><br><span class="line">chr18   90702639</span><br><span class="line">chr19   61431566</span><br><span class="line">chr2    182113224</span><br><span class="line">chr3    160039680</span><br><span class="line">chr4    156508116</span><br><span class="line">chr5    151834684</span><br><span class="line">chr6    149736546</span><br><span class="line">chr7    145441459</span><br><span class="line">chr8    129401213</span><br><span class="line">chr9    124595110</span><br><span class="line">chrX    171031299</span><br><span class="line">chrY    91744698</span><br></pre></td></tr></table></figure><p>2.3 创建mm10_all_genes.bed，如上定义，基因间区域为”[A]{TES+0.5Kb}-[B]{TSS-2Kb}”，并重新排序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&gt; sort -k1,1 -k2,2n mm10_all_genes.bed &gt; mm10_all_sorted.bed</span><br><span class="line">&gt; less mm10_all_sorted.bed</span><br><span class="line">chr1    3071253 3074822 3570    *       4933401J01Rik</span><br><span class="line">chr1    3100016 3102625 2610    *       Gm26206</span><br><span class="line">chr1    3203901 3671998 468098  *       Xkr4</span><br><span class="line">chr1    3250757 3253736 2980    *       Gm18956</span><br><span class="line">chr1    3363731 3369049 5319    *       Gm37180</span><br><span class="line">chr1    3373556 3378288 4733    *       Gm37363</span><br><span class="line">chr1    3462977 3467785 4809    *       Gm37686</span><br><span class="line">chr1    3464587 3514053 49467   *       Gm1992</span><br><span class="line">chr1    3510451 3515007 4557    *       Gm37329</span><br><span class="line">chr1    3529795 3533220 3426    *       Gm7341</span><br><span class="line">chr1    3590892 3596403 5512    *       Gm38148</span><br><span class="line">chr1    3645309 3659404 14096   *       Gm19938</span><br><span class="line">chr1    3678155 3682288 4134    *       Gm10568</span><br><span class="line">chr1    3750010 3754860 4851    *       Gm38385</span><br><span class="line">chr1    3781876 3784433 2558    *       Gm27396</span><br><span class="line">chr1    3903739 3986715 82977   *       Gm37381</span><br><span class="line">chr1    3997557 4409741 412185  *       Rp1</span><br><span class="line">chr1    4254234 4261019 6786    *       Gm6101</span><br><span class="line">chr1    4361346 4365329 3984    *       Gm37483</span><br><span class="line">chr1    4488931 4497854 8924    *       Sox17</span><br><span class="line">chr1    4494551 4500058 5508    *       Gm37587</span><br><span class="line">chr1    4520905 4527237 6333    *       Gm7357</span><br><span class="line">chr1    4527017 4529623 2607    *       Gm22307</span><br><span class="line">chr1    4532837 4535786 2950    *       Gm38076</span><br><span class="line">chr1    4581129 4586752 5624    *       Gm37323</span><br><span class="line">chr1    4608471 4611906 3436    *       Gm7369</span><br></pre></td></tr></table></figure><p>2.4 用bedtoos提取补集，即intergenic</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&gt; bedtools complement -i mm10_all_sorted.bed -g mm10_sorted &gt; intergenic.bed</span><br><span class="line">&gt; less intergenic.bed</span><br><span class="line">chr1    0       3071253</span><br><span class="line">chr1    3074822 3100016</span><br><span class="line">chr1    3102625 3203901</span><br><span class="line">chr1    3671998 3678155</span><br><span class="line">chr1    3682288 3750010</span><br><span class="line">chr1    3754860 3781876</span><br><span class="line">chr1    3784433 3903739</span><br><span class="line">chr1    3986715 3997557</span><br><span class="line">chr1    4409741 4488931</span><br><span class="line">chr1    4500058 4520905</span><br><span class="line">chr1    4529623 4532837</span><br><span class="line">chr1    4535786 4581129</span><br><span class="line">chr1    4586752 4608471</span><br><span class="line">chr1    4611906 4685934</span><br><span class="line">chr1    4689903 4690219</span><br><span class="line">chr1    4693924 4721277</span><br><span class="line">chr1    4723879 4733046</span><br><span class="line">chr1    4736176 4769131</span><br><span class="line">chr1    4786239 4805788</span><br><span class="line">chr1    4898409 4903751</span><br><span class="line">chr1    4907361 4907576</span><br><span class="line">chr1    5163029 5274106</span><br><span class="line">chr1    5277837 5305739</span><br><span class="line">chr1    5310517 5401547</span><br><span class="line">chr1    5406078 5586466</span><br><span class="line">chr1    5606631 5615837</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、定义intergenic &lt;/p&gt;
&lt;p&gt;基因间区域，即intergenic region，可以简单定义为两个相邻基因A和B之间的区域；对于某个基因而言，TSS和TES可以看作是基因的上下边界，但是，由于promoter往往在TSS上游，而TES附近可能有调控元件存在，
      
    
    </summary>
    
      <category term="生物信息" scheme="http://uteric.github.io/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="Intergenic" scheme="http://uteric.github.io/tags/Intergenic/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://uteric.github.io/CHIPSEQ/promoter/"/>
    <id>http://uteric.github.io/CHIPSEQ/promoter/</id>
    <published>2020-05-23T16:58:40.857Z</published>
    <updated>2020-05-24T21:28:39.190Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Load-Packages"><a href="#1-Load-Packages" class="headerlink" title="1.Load Packages"></a>1.Load Packages</h1><p>library(GenomicRanges)<br>library(rtracklayer)<br>library(IRanges)<br>library(DiffBind)<br>library(tidyverse)<br>library(chipseq)<br>library(Gviz)<br>library(VennDiagram)<br>library(BSgenome.Mmusculus.UCSC.mm10)<br>library(biomaRt)<br>library(ggplot2)<br>setwd(“D:/CHIP/promoter”)</p><p>##########################################################################</p><h1 id="Prepare-Mm10-gene-Annotation-file"><a href="#Prepare-Mm10-gene-Annotation-file" class="headerlink" title="Prepare Mm10 gene Annotation file"></a>Prepare Mm10 gene Annotation file</h1><p>mart = useMart(biomart = “ensembl”,<br>               dataset = “mmusculus_gene_ensembl”,<br>               host=”uswest.ensembl.org”)<br>listAttributes(mart)[1:30,1]<br>chroms=c(1:19,’X’,’Y’)<br>Mm10Annot &lt;- getBM(attributes = c(‘ensembl_gene_id’,’external_gene_name’,<br>                                  ‘chromosome_name’,’start_position’,<br>                                  ‘end_position’,’strand’),<br>                   filters=’chromosome_name’,<br>                   values=chroms,<br>                   mart=mart)<br>save(Mm10Annot,file=”Mm10Annot.RData”)</p><p>#####################################################################</p><h1 id="Load-Mm10Annot"><a href="#Load-Mm10Annot" class="headerlink" title="Load Mm10Annot"></a>Load Mm10Annot</h1><p>load(“./Mm10Annot.RData”)<br>head(Mm10Annot)<br>Mm10Annot$TSS = ifelse(Mm10Annot$strand == “1”,Mm10Annot$start_position,Mm10Annot$end_position )<br>head(Mm10Annot)<br>promoter_regions = GRanges(seqnames = Rle( paste0(‘chr’, Mm10Annot$chromosome_name) ),<br>                           ranges = IRanges( start = Mm10Annot$TSS -2000,<br>                                             end = Mm10Annot$TSS + 500),<br>                           strand = Rle( rep(“*”, nrow(Mm10Annot)) ),<br>                           gene = Mm10Annot$external_gene_name)<br>promoter_regions<br>save(Mm10Annot,file=”promoter_regions.RData”)</p><p>#####################################################################</p><h1 id="Load-promoter-regions"><a href="#Load-promoter-regions" class="headerlink" title="Load promoter_regions"></a>Load promoter_regions</h1><p>load(“./promoter_regions.RData”)<br>head(promoter_regions)</p><p>#####################################################################</p><h1 id="Load-bed-files"><a href="#Load-bed-files" class="headerlink" title="Load bed files"></a>Load bed files</h1><p>flag_wt_rep1 &lt;- import.bed(“./WT_FLAG.core1.bed”)<br>flag_wt_rep2 &lt;- import.bed(“./WT_FLAG.core2.bed”)</p><p>#####################################################################<br>target &lt;- import.bed(“./core.region.5k.bed”)<br>target</p><p>#####################################################################<br>load(“./siMm10.RData”)<br>siMm10</p><p>#####################################################################<br>center &lt;- (start(target)+end(target))/2<br>name &lt;- rep(paste0(‘S’, 1:length(target)))<br>chr &lt;- seqnames(target)<br>value &lt;- rep(1,length(target))<br>pos.center &lt;- data.frame(name,center,value,chr)<br>pos.center[1:3,]<br>tiles = sapply( 1:nrow(pos.center), function(i)<br>  if( pos.center$value[i] == “1” )<br>    pos.center$center[i] + seq( -10000, 9900, length.out=200 )<br>  else<br>    pos.center$center[i] + seq( 9900, -10000, length.out=200 ) )<br>tiles = GRanges(tilename = paste(rep(pos.center$name, each=200), 1:200, sep=”_” ),<br>                seqnames = Rle(rep(pos.center$chr,each=200)),<br>                ranges = IRanges(start = as.vector(tiles),<br>                                 width = 100),<br>                strand = Rle(rep(“*”, length(as.vector(tiles)))),<br>                seqinfo = siMm10)<br>tiles</p><p>#####################################################################<br>flag.WT.p = countOverlaps(tiles,flag_wt_rep1) +<br>  countOverlaps(tiles,flag_wt_rep2)<br>flag.WT.p.matrix = matrix(flag.WT.p, nrow=nrow(pos.center),<br>                          ncol=200, byrow=TRUE )<br>x &lt;- flag.WT.p.matrix<br>rowSums(x)</p><p>#####################################################################<br>library(tidyverse)<br>library(hrbrthemes)<br>library(viridis)</p><p>#####################################################################<br>name &lt;- c(rep(“A”,4537),rep(“B”,4537))<br>value &lt;- c(x,x)<br>data &lt;- data.frame(name,value)<br>pbox &lt;- ggplot(data,aes(x=name,y=value,fill=name))+<br>  geom_boxplot()<br>pbox</p><p>#####################################################################</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-Load-Packages&quot;&gt;&lt;a href=&quot;#1-Load-Packages&quot; class=&quot;headerlink&quot; title=&quot;1.Load Packages&quot;&gt;&lt;/a&gt;1.Load Packages&lt;/h1&gt;&lt;p&gt;library(GenomicRan
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>用DiffBind自带数据包做ChIP SEQ差异分析</title>
    <link href="http://uteric.github.io/CHIPSEQ/chip_diffBind/"/>
    <id>http://uteric.github.io/CHIPSEQ/chip_diffBind/</id>
    <published>2020-05-22T03:29:22.000Z</published>
    <updated>2020-05-22T03:29:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>在做完peak calling之后，我们就可以做样品间的差异分析了，常用的包是DiffBind，现在，先用自带的数据包做一个差异分析。</p><p>一、加载软件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">library(DiffBind)</span><br><span class="line">library(tidyverse)</span><br></pre></td></tr></table></figure></p><p>二、工作路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">setwd(system.file(<span class="string">"extra"</span>, package=<span class="string">"DiffBind"</span>)) <span class="comment"># 设置工作路径，在软件包DiffBind下的extra文件夹；</span></span><br><span class="line">list.files() <span class="comment"># 这是工作目录，其中，peaks和testdata是文件夹； </span></span><br><span class="line">[1] <span class="string">"config.csv"</span>              <span class="string">"peaks"</span>                   <span class="string">"tamoxifen.csv"</span>          </span><br><span class="line">[4] <span class="string">"tamoxifen_allfields.csv"</span> <span class="string">"tamoxifen_GEO.csv"</span>       <span class="string">"tamoxifen_GEO.R"</span>        </span><br><span class="line">[7] <span class="string">"testdata"</span></span><br><span class="line">getwd()</span><br><span class="line">[1] <span class="string">"C:/Users/***/Documents/R/win-library/3.6/DiffBind/extra"</span></span><br></pre></td></tr></table></figure><p>三、样品信息与文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&gt; read.csv(<span class="string">"tamoxifen.csv"</span>)</span><br><span class="line">   SampleID Tissue Factor  Condition  Treatment Replicate                     bamReads ControlID                  bamControl</span><br><span class="line">1    BT4741  BT474     ER  Resistant Full-Media         1  reads/Chr18_BT474_ER_1.bam    BT474c reads/Chr18_BT474_input.bam</span><br><span class="line">2    BT4742  BT474     ER  Resistant Full-Media         2  reads/Chr18_BT474_ER_2.bam    BT474c reads/Chr18_BT474_input.bam</span><br><span class="line">3     MCF71   MCF7     ER Responsive Full-Media         1   reads/Chr18_MCF7_ER_1.bam     MCF7c  reads/Chr18_MCF7_input.bam</span><br><span class="line">4     MCF72   MCF7     ER Responsive Full-Media         2   reads/Chr18_MCF7_ER_2.bam     MCF7c  reads/Chr18_MCF7_input.bam</span><br><span class="line">5     MCF73   MCF7     ER Responsive Full-Media         3   reads/Chr18_MCF7_ER_3.bam     MCF7c  reads/Chr18_MCF7_input.bam</span><br><span class="line">6     T47D1   T47D     ER Responsive Full-Media         1   reads/Chr18_T47D_ER_1.bam     T47Dc  reads/Chr18_T47D_input.bam</span><br><span class="line">7     T47D2   T47D     ER Responsive Full-Media         2   reads/Chr18_T47D_ER_2.bam     T47Dc  reads/Chr18_T47D_input.bam</span><br><span class="line">8    MCF7r1   MCF7     ER  Resistant Full-Media         1   reads/Chr18_TAMR_ER_1.bam     TAMRc  reads/Chr18_TAMR_input.bam</span><br><span class="line">9    MCF7r2   MCF7     ER  Resistant Full-Media         2   reads/Chr18_TAMR_ER_2.bam     TAMRc  reads/Chr18_TAMR_input.bam</span><br><span class="line">10    ZR751   ZR75     ER Responsive Full-Media         1  reads/Chr18_ZR75_ER_1.bam     ZR75c  reads/Chr18_ZR75_input.bam</span><br><span class="line">11    ZR752   ZR75     ER Responsive Full-Media         2  reads/Chr18_ZR75_ER_2.bam     ZR75c  reads/Chr18_ZR75_input.bam</span><br><span class="line">                     Peaks PeakCaller</span><br><span class="line">1  peaks/BT474_ER_1.bed.gz        bed</span><br><span class="line">2  peaks/BT474_ER_2.bed.gz        bed</span><br><span class="line">3   peaks/MCF7_ER_1.bed.gz        bed</span><br><span class="line">4   peaks/MCF7_ER_2.bed.gz        bed</span><br><span class="line">5   peaks/MCF7_ER_3.bed.gz        bed</span><br><span class="line">6   peaks/T47D_ER_1.bed.gz        bed</span><br><span class="line">7   peaks/T47D_ER_2.bed.gz        bed</span><br><span class="line">8   peaks/TAMR_ER_1.bed.gz        bed</span><br><span class="line">9   peaks/TAMR_ER_2.bed.gz        bed</span><br><span class="line">10  peaks/ZR75_ER_1.bed.gz        bed</span><br><span class="line">11  peaks/ZR75_ER_2.bed.gz        bed</span><br><span class="line"></span><br><span class="line">&gt; list.files(<span class="string">"peaks"</span>)</span><br><span class="line"> [1] <span class="string">"BT474_ER_1.bed.gz"</span> <span class="string">"BT474_ER_2.bed.gz"</span> <span class="string">"MCF7_ER_1.bed.gz"</span> </span><br><span class="line"> [4] <span class="string">"MCF7_ER_2.bed.gz"</span>  <span class="string">"MCF7_ER_3.bed.gz"</span>  <span class="string">"T47D_ER_1.bed.gz"</span> </span><br><span class="line"> [7] <span class="string">"T47D_ER_2.bed.gz"</span>  <span class="string">"TAMR_ER_1.bed.gz"</span>  <span class="string">"TAMR_ER_2.bed.gz"</span> </span><br><span class="line">[10] <span class="string">"ZR75_ER_1.bed.gz"</span>  <span class="string">"ZR75_ER_2.bed.gz"</span></span><br></pre></td></tr></table></figure><p>dba函数用于创建DBA（Differential Binding Affinity）对象</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&gt; ta &lt;- dba(sampleSheet=<span class="string">"tamoxifen.csv"</span>)</span><br><span class="line">BT4741 BT474 ER Resistant Full-Media 1 bed</span><br><span class="line">BT4742 BT474 ER Resistant Full-Media 2 bed</span><br><span class="line">MCF71 MCF7 ER Responsive Full-Media 1 bed</span><br><span class="line">MCF72 MCF7 ER Responsive Full-Media 2 bed</span><br><span class="line">MCF73 MCF7 ER Responsive Full-Media 3 bed</span><br><span class="line">T47D1 T47D ER Responsive Full-Media 1 bed</span><br><span class="line">T47D2 T47D ER Responsive Full-Media 2 bed</span><br><span class="line">MCF7r1 MCF7 ER Resistant Full-Media 1 bed</span><br><span class="line">MCF7r2 MCF7 ER Resistant Full-Media 2 bed</span><br><span class="line">ZR751 ZR75 ER Responsive Full-Media 1 bed</span><br><span class="line">ZR752 ZR75 ER Responsive Full-Media 2 bed</span><br><span class="line"></span><br><span class="line">&gt; ta</span><br><span class="line">11 Samples, 2845 sites <span class="keyword">in</span> matrix (3795 total): <span class="comment"># 在11个样品中，总计3795个unique peaks，其中，2602个sites overlap in at least two of the samples</span></span><br><span class="line">       ID Tissue Factor  Condition  Treatment Replicate Caller Intervals</span><br><span class="line">1  BT4741  BT474     ER  Resistant Full-Media         1    bed      1080</span><br><span class="line">2  BT4742  BT474     ER  Resistant Full-Media         2    bed      1122</span><br><span class="line">3   MCF71   MCF7     ER Responsive Full-Media         1    bed      1556</span><br><span class="line">4   MCF72   MCF7     ER Responsive Full-Media         2    bed      1046</span><br><span class="line">5   MCF73   MCF7     ER Responsive Full-Media         3    bed      1339</span><br><span class="line">6   T47D1   T47D     ER Responsive Full-Media         1    bed       527</span><br><span class="line">7   T47D2   T47D     ER Responsive Full-Media         2    bed       373</span><br><span class="line">8  MCF7r1   MCF7     ER  Resistant Full-Media         1    bed      1438</span><br><span class="line">9  MCF7r2   MCF7     ER  Resistant Full-Media         2    bed       930</span><br><span class="line">10  ZR751   ZR75     ER Responsive Full-Media         1    bed      2346</span><br><span class="line">11  ZR752   ZR75     ER Responsive Full-Media         2    bed      2345</span><br><span class="line"></span><br><span class="line">&gt; names(ta)</span><br><span class="line"> [1] <span class="string">"config"</span>      <span class="string">"chrmap"</span>      <span class="string">"peaks"</span>       <span class="string">"class"</span>       <span class="string">"masks"</span>      </span><br><span class="line"> [6] <span class="string">"samples"</span>     <span class="string">"called"</span>      <span class="string">"totalMerged"</span> <span class="string">"merged"</span>      <span class="string">"binding"</span>    </span><br><span class="line">[11] <span class="string">"attributes"</span>  <span class="string">"minOverlap"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在做完peak calling之后，我们就可以做样品间的差异分析了，常用的包是DiffBind，现在，先用自带的数据包做一个差异分析。&lt;/p&gt;
&lt;p&gt;一、加载软件&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>理解CpG Islands</title>
    <link href="http://uteric.github.io/CHIPSEQ/CpG_Islands/"/>
    <id>http://uteric.github.io/CHIPSEQ/CpG_Islands/</id>
    <published>2020-05-22T03:05:49.000Z</published>
    <updated>2020-05-22T03:05:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>CpG Islands是指CG组合明显高于全基因组平均水平的DNA片段，通常靠近基因的转录起始位点，可以调节基因的转录活性。</p><p>在哺乳动物的DNA中，CG这样的组合十分稀少，原因在于，CG中的C易被甲基化，而甲基化的C由于脱氨作用会转变成T，即CG有转化为TG的倾向，除非因某种原因，CG中的C不被甲基化，CG组合才得以保留。</p><p>一般，CpG Islands有如下特征：</p><p>1）GC含量高于50%；<br>2）片段长度大于200 bp;<br>3）CG组合观测值/预测值 &gt; 0.6；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;CpG Islands是指CG组合明显高于全基因组平均水平的DNA片段，通常靠近基因的转录起始位点，可以调节基因的转录活性。&lt;/p&gt;
&lt;p&gt;在哺乳动物的DNA中，CG这样的组合十分稀少，原因在于，CG中的C易被甲基化，而甲基化的C由于脱氨作用会转变成T，即CG有转化为TG的
      
    
    </summary>
    
      <category term="生物信息" scheme="http://uteric.github.io/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="CpG Islands" scheme="http://uteric.github.io/tags/CpG-Islands/"/>
    
  </entry>
  
  <entry>
    <title>如何从UCSC下载CpG Island数据</title>
    <link href="http://uteric.github.io/CHIPSEQ/chip_download_cpg/"/>
    <id>http://uteric.github.io/CHIPSEQ/chip_download_cpg/</id>
    <published>2020-05-21T18:30:16.000Z</published>
    <updated>2020-05-21T18:30:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>进入<a href="https://genome.ucsc.edu/" target="_blank" rel="noopener">UCSC</a>主页，点击Tools &gt; Table Brower, 以mouse为例，选择如下：</p><p>genome: Mouse<br>group: Expression and Regulation<br>track: CpG Islands<br>region: genome<br>output format: BED - browser extensible data<br>file type returned: plain text</p><p>点击，get output，即可下载到小鼠全基因组上的CpG Islands数据。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;进入&lt;a href=&quot;https://genome.ucsc.edu/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;UCSC&lt;/a&gt;主页，点击Tools &amp;gt; Table Brower, 以mouse为例，选择如下：&lt;/p&gt;
&lt;p&gt;genome: M
      
    
    </summary>
    
      <category term="生物信息" scheme="http://uteric.github.io/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="CpG Island" scheme="http://uteric.github.io/tags/CpG-Island/"/>
    
  </entry>
  
  <entry>
    <title>使用WGET命令下载整个FTP目录</title>
    <link href="http://uteric.github.io/Linux/wget_download/"/>
    <id>http://uteric.github.io/Linux/wget_download/</id>
    <published>2020-05-19T19:05:24.000Z</published>
    <updated>2020-05-19T19:05:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>一、从FTP上下载整个目录，可以使用WGET命令，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c -r -np -nH --ftp-password=<span class="string">'password'</span> ftp://username@hostname/directory/ -P ./download/</span><br></pre></td></tr></table></figure><p>解释：<br>-c 表示断点续传，如果下载中断，下次再运行相同的命令可以接着下载；<br>-r 递归，遍历所有子目录；<br>-np 不到上一层子目录；<br>-nH 不将文件保存到主机名文件夹；<br>–ftp-password=’password’ 密码，将password替换为相应的密码；<br><a href="ftp://username@hostname/directory/" target="_blank" rel="noopener">ftp://username@hostname/directory/</a> 用户名，主机名，以及下载目录；<br>-P 目标目录，这里注意，如果下载到当前目录下的某个目录，比如我这里是当前目录下的downtest，需要加./，表示当前目录下；如果要引用绝对目录，就是/<em>/</em>/*/这种格式，最前面没有”.”；</p><p>二、从HTTP网站上下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c -r -np -nH http://*/*/ -P ./download/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、从FTP上下载整个目录，可以使用WGET命令，命令如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="wget" scheme="http://uteric.github.io/tags/wget/"/>
    
  </entry>
  
  <entry>
    <title>解决Linux报错 module command not found</title>
    <link href="http://uteric.github.io/Linux/linux_module/"/>
    <id>http://uteric.github.io/Linux/linux_module/</id>
    <published>2020-05-19T16:43:45.000Z</published>
    <updated>2020-05-19T16:43:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>我的系统是Ubuntu 18.04，在终端中输入module，出现错误信息：module: command not found</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ module</span><br><span class="line">module: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>尝试了各种方法皆不管用，最后发现了个简单的激活方法，原文网址如下：</p><p><a href="https://www.oden.utexas.edu/sysdocs/linux/ubuntu18.html" target="_blank" rel="noopener">https://www.oden.utexas.edu/sysdocs/linux/ubuntu18.html</a></p><p>方法很简单，直接在终端中输入如下命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p>此时，再在终端中输入module –version，会出现版本信息，说明激活成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Modules Release 4.1.1 (2018-02-17)</span><br></pre></td></tr></table></figure><p>输入module avail，则列出可使用的module，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-------------------------------------------- /usr/share/modules/modulefiles --------------------------------------------</span><br><span class="line">dot  module-git  module-info  modules  null  use.own</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我的系统是Ubuntu 18.04，在终端中输入module，出现错误信息：module: command not found&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="Linux" scheme="http://uteric.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>ChIP SEQ分析笔记1-软件安装</title>
    <link href="http://uteric.github.io/CHIPSEQ/chip_note2_install/"/>
    <id>http://uteric.github.io/CHIPSEQ/chip_note2_install/</id>
    <published>2020-05-18T04:26:46.000Z</published>
    <updated>2020-05-18T04:26:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>ChIP SEQ分析过程中要用到诸多的软件包，在分析之前，确保软件成功地安装，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install bowtie2</span></span><br><span class="line">sudo apt-get update -y</span><br><span class="line">sudo apt-get install -y bowtie2</span><br><span class="line"></span><br><span class="line"><span class="comment"># install samtools</span></span><br><span class="line">sudo apt install samtools</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ChIP SEQ分析过程中要用到诸多的软件包，在分析之前，确保软件成功地安装，命令如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/
      
    
    </summary>
    
      <category term="生物信息" scheme="http://uteric.github.io/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="ChIP" scheme="http://uteric.github.io/tags/ChIP/"/>
    
  </entry>
  
  <entry>
    <title>CHIPSEQ分析流程总结</title>
    <link href="http://uteric.github.io/CHIPSEQ/chip_overview/"/>
    <id>http://uteric.github.io/CHIPSEQ/chip_overview/</id>
    <published>2020-05-16T03:20:58.000Z</published>
    <updated>2020-05-16T03:20:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>CHIPSEQ的分析流程总结如下:</p><p><img src="/images/CHIP/chip01.png" alt></p><p>在以后的文章中，我会对整个分析过程作详细的解释，所谓“他山之石，可以攻玉”，作为后来者攀登的阶梯，不要像我一样走弯路。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;CHIPSEQ的分析流程总结如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/CHIP/chip01.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;在以后的文章中，我会对整个分析过程作详细的解释，所谓“他山之石，可以攻玉”，作为后来者攀登的阶梯，不要像我一样走弯路。&lt;/p&gt;

      
    
    </summary>
    
      <category term="生物信息" scheme="http://uteric.github.io/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="CHIPSEQ" scheme="http://uteric.github.io/tags/CHIPSEQ/"/>
    
  </entry>
  
</feed>
