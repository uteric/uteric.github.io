<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>诸子百家</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://uteric.github.io/"/>
  <updated>2022-03-15T19:37:30.000Z</updated>
  <id>http://uteric.github.io/</id>
  
  <author>
    <name>括囊无誉</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PYTHON笔记十二：通过yfinance获取股票信息并写入EXCEL文件中</title>
    <link href="http://uteric.github.io/python-12-yfinance-download/"/>
    <id>http://uteric.github.io/python-12-yfinance-download/</id>
    <published>2022-03-15T19:37:30.000Z</published>
    <updated>2022-03-15T19:37:30.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import pandas as pd</span><br><span class="line">import yfinance as yf</span><br><span class="line">import time as tm</span><br><span class="line"></span><br><span class="line">url = <span class="string">'https://www.slickcharts.com/sp500'</span></span><br><span class="line">headers = &#123;<span class="string">"User-Agent"</span> : <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36'</span>&#125;</span><br><span class="line">request = requests.get(url, headers = headers)</span><br><span class="line">data = pd.read_html(request.text)[0]</span><br><span class="line"><span class="comment">#stk_list = data.Symbol</span></span><br><span class="line">stk_list = data.Symbol.apply(lambda x: x.replace(<span class="string">'.'</span>, <span class="string">'-'</span>))</span><br><span class="line"><span class="comment">#print(stk_list)</span></span><br><span class="line"></span><br><span class="line">stk_basic_data = yf.Ticker(<span class="string">'AAPL'</span>).info</span><br><span class="line"><span class="comment">#print(stk_basic_data)</span></span><br><span class="line">info_columns = list(stk_basic_data.keys())</span><br><span class="line"></span><br><span class="line">stk_info_df = pd.DataFrame(index = stk_list.sort_values(), columns = info_columns)</span><br><span class="line"><span class="comment">#stk_info_df = stk_info_df.head(3)</span></span><br><span class="line"><span class="comment">#print(stk_info_df)</span></span><br><span class="line"></span><br><span class="line">failed_list = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> stk_info_df.index:</span><br><span class="line">    try:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'processing: '</span> + i)</span><br><span class="line">        info_dict = yf.Ticker(i).info</span><br><span class="line">        columns_included = list(info_dict.keys())</span><br><span class="line">        <span class="comment">#print(columns_included)</span></span><br><span class="line">        intersect_columns = [x <span class="keyword">for</span> x <span class="keyword">in</span> info_columns <span class="keyword">if</span> x <span class="keyword">in</span> columns_included]</span><br><span class="line">        <span class="comment">#print(intersect_columns)</span></span><br><span class="line">        stk_info_df.loc[i,intersect_columns] = list(pd.Series(info_dict)[intersect_columns].values)</span><br><span class="line">        tm.sleep(2)</span><br><span class="line">    except:</span><br><span class="line">        failed_list.append(i)</span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line"><span class="built_in">print</span>(failed_list)</span><br><span class="line">stk_info_df.to_csv(<span class="string">'sp500.csv'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="PYTHON" scheme="http://uteric.github.io/tags/PYTHON/"/>
    
  </entry>
  
  <entry>
    <title>PYTHON笔记十一：使用yfinance查看股票信息</title>
    <link href="http://uteric.github.io/python-11-yfinance-info/"/>
    <id>http://uteric.github.io/python-11-yfinance-info/</id>
    <published>2022-03-11T18:12:48.000Z</published>
    <updated>2022-03-11T18:12:48.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">import yfinance as yf</span><br><span class="line"></span><br><span class="line">aapl= yf.Ticker(<span class="string">"aapl"</span>)</span><br><span class="line">aapl</span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'symbol'</span>]) <span class="comment">#股票代码</span></span><br><span class="line"><span class="comment">#AAPL</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'trailingPE'</span>]) <span class="comment">#历史市盈率(P/E)=每股价格/每股收益（同行业内越低越好，每股收益可能为负，而且容易被操纵）</span></span><br><span class="line"><span class="comment">#26.029095</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'forwardPE'</span>]) <span class="comment">#远期市盈率</span></span><br><span class="line"><span class="comment">#23.818598</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'priceToBook'</span>]) <span class="comment">#市净率(P/B)=每股价格/每股净资产（同行业内越低越好，P/E为负时作重要参考，但要考虑杠杆）</span></span><br><span class="line"><span class="comment">#35.330532</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'currentPrice'</span>]/aapl.info[<span class="string">'totalCashPerShare'</span>]) <span class="comment">#市现率=每股价格/每股现金流（同行业内越低越好，很难操纵）</span></span><br><span class="line"><span class="comment">#39.51225740551583</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'priceToSalesTrailing12Months'</span>]) <span class="comment">#市销率(P/S)=每股价格/每股销售额（同行业内越低越好，很难操纵）</span></span><br><span class="line"><span class="comment">#6.674457</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'dividendRate'</span>]) <span class="comment">#股息率=每年总派息额/每年市价</span></span><br><span class="line"><span class="comment">#0.88</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'dividendYield'</span>]) <span class="comment">#现金殖利率=每股股息/每股股价</span></span><br><span class="line"><span class="comment">#0.0055</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'currentPrice'</span>]) <span class="comment">#当前股价</span></span><br><span class="line"><span class="comment">#156.545</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'targetMedianPrice'</span>]) <span class="comment">#预期中位股价</span></span><br><span class="line"><span class="comment">#199.5</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'targetMeanPrice'</span>]) <span class="comment">#预期平均股价</span></span><br><span class="line"><span class="comment">#193.53</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'targetHighPrice'</span>]) <span class="comment">#预期最高股价</span></span><br><span class="line"><span class="comment">#215</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'recommendationKey'</span>]) <span class="comment">#推荐购买</span></span><br><span class="line"><span class="comment">#buy</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'totalCashPerShare'</span>]) <span class="comment">#每股现金流</span></span><br><span class="line"><span class="comment">#3.916</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'revenuePerShare'</span>]) <span class="comment">#每股收入</span></span><br><span class="line"><span class="comment">#22.838</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'bookValue'</span>]) <span class="comment">#每股净资产</span></span><br><span class="line"><span class="comment">#4.402</span></span><br></pre></td></tr></table></figure><p>如下四个指标反映企业的盈利能力，企业与企业比较，或企业与行业平均比较，或企业与历史同期比较</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'grossMargins'</span>]) <span class="comment">#毛利率</span></span><br><span class="line"><span class="comment">#0.43019</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'profitMargins'</span>]) <span class="comment">#净利率</span></span><br><span class="line"><span class="comment">#0.26579002</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'returnOnAssets'</span>]) <span class="comment">#总资产收益率(ROA)</span></span><br><span class="line"><span class="comment">#0.19875</span></span><br><span class="line"><span class="built_in">print</span>(aapl.info[<span class="string">'returnOnEquity'</span>]) <span class="comment">#净资产收益率(ROE)</span></span><br><span class="line"><span class="comment">#1.45567</span></span><br></pre></td></tr></table></figure><p>其他信息可通过info查看，以APPL为例，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(aapl.info)</span><br><span class="line">&#123;<span class="string">'zip'</span>: <span class="string">'95014'</span>, </span><br><span class="line"><span class="string">'sector'</span>: <span class="string">'Technology'</span>, </span><br><span class="line"><span class="string">'fullTimeEmployees'</span>: 100000, </span><br><span class="line"><span class="string">'longBusinessSummary'</span>: <span class="string">'Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide. It also sells various related services. In addition, the company offers iPhone, a line of smartphones; Mac, a line of personal computers; iPad, a line of multi-purpose tablets; AirPods Max, an over-ear wireless headphone; and wearables, home, and accessories comprising AirPods, Apple TV, Apple Watch, Beats products, HomePod, and iPod touch. Further, it provides AppleCare support services; cloud services store services; and operates various platforms, including the App Store that allow customers to discover and download applications and digital content, such as books, music, video, games, and podcasts. Additionally, the company offers various services, such as Apple Arcade, a game subscription service; Apple Music, which offers users a curated listening experience with on-demand radio stations; Apple News+, a subscription news and magazine service; Apple TV+, which offers exclusive original content; Apple Card, a co-branded credit card; and Apple Pay, a cashless payment service, as well as licenses its intellectual property. The company serves consumers, and small and mid-sized businesses; and the education, enterprise, and government markets. It distributes third-party applications for its products through the App Store. The company also sells its products through its retail and online stores, and direct sales force; and third-party cellular network carriers, wholesalers, retailers, and resellers. Apple Inc. was incorporated in 1977 and is headquartered in Cupertino, California.'</span>, </span><br><span class="line"><span class="string">'city'</span>: <span class="string">'Cupertino'</span>, </span><br><span class="line"><span class="string">'phone'</span>: <span class="string">'408 996 1010'</span>, </span><br><span class="line"><span class="string">'state'</span>: <span class="string">'CA'</span>, </span><br><span class="line"><span class="string">'country'</span>: <span class="string">'United States'</span>, </span><br><span class="line"><span class="string">'companyOfficers'</span>: [], </span><br><span class="line"><span class="string">'website'</span>: <span class="string">'https://www.apple.com'</span>, </span><br><span class="line"><span class="string">'maxAge'</span>: 1, </span><br><span class="line"><span class="string">'address1'</span>: <span class="string">'One Apple Park Way'</span>, </span><br><span class="line"><span class="string">'industry'</span>: <span class="string">'Consumer Electronics'</span>, </span><br><span class="line"><span class="string">'ebitdaMargins'</span>: 0.33890998, </span><br><span class="line"><span class="string">'profitMargins'</span>: 0.26579002, </span><br><span class="line"><span class="string">'grossMargins'</span>: 0.43019, </span><br><span class="line"><span class="string">'operatingCashflow'</span>: 112241000448, </span><br><span class="line"><span class="string">'revenueGrowth'</span>: 0.112, </span><br><span class="line"><span class="string">'operatingMargins'</span>: 0.309,</span><br><span class="line"><span class="string">'ebitda'</span>: 128217997312, </span><br><span class="line"><span class="string">'targetLowPrice'</span>: 160, </span><br><span class="line"><span class="string">'recommendationKey'</span>: <span class="string">'buy'</span>, </span><br><span class="line"><span class="string">'grossProfits'</span>: 152836000000, </span><br><span class="line"><span class="string">'freeCashflow'</span>: 80153247744, </span><br><span class="line"><span class="string">'targetMedianPrice'</span>: 199.5, </span><br><span class="line"><span class="string">'currentPrice'</span>: 155.525, </span><br><span class="line"><span class="string">'earningsGrowth'</span>: 0.25, </span><br><span class="line"><span class="string">'currentRatio'</span>: 1.038, </span><br><span class="line"><span class="string">'returnOnAssets'</span>: 0.19875,</span><br><span class="line"><span class="string">'numberOfAnalystOpinions'</span>: 44,</span><br><span class="line"><span class="string">'targetMeanPrice'</span>: 193.53,</span><br><span class="line"><span class="string">'debtToEquity'</span>: 170.714, </span><br><span class="line"><span class="string">'returnOnEquity'</span>: 1.45567, </span><br><span class="line"><span class="string">'targetHighPrice'</span>: 215, </span><br><span class="line"><span class="string">'totalCash'</span>: 63913000960, </span><br><span class="line"><span class="string">'totalDebt'</span>: 122797998080, </span><br><span class="line"><span class="string">'totalRevenue'</span>: 378323009536, </span><br><span class="line"><span class="string">'totalCashPerShare'</span>: 3.916, </span><br><span class="line"><span class="string">'financialCurrency'</span>: <span class="string">'USD'</span>, </span><br><span class="line"><span class="string">'revenuePerShare'</span>: 22.838,</span><br><span class="line"><span class="string">'quickRatio'</span>: 0.875, </span><br><span class="line"><span class="string">'recommendationMean'</span>: 1.8, </span><br><span class="line"><span class="string">'exchange'</span>: <span class="string">'NMS'</span>, </span><br><span class="line"><span class="string">'shortName'</span>: <span class="string">'Apple Inc.'</span>, </span><br><span class="line"><span class="string">'longName'</span>: <span class="string">'Apple Inc.'</span>, </span><br><span class="line"><span class="string">'exchangeTimezoneName'</span>: <span class="string">'America/New_York'</span>, </span><br><span class="line"><span class="string">'exchangeTimezoneShortName'</span>: <span class="string">'EST'</span>, </span><br><span class="line"><span class="string">'isEsgPopulated'</span>: False, </span><br><span class="line"><span class="string">'gmtOffSetMilliseconds'</span>: <span class="string">'-18000000'</span>,</span><br><span class="line"><span class="string">'quoteType'</span>: <span class="string">'EQUITY'</span>, </span><br><span class="line"><span class="string">'symbol'</span>: <span class="string">'AAPL'</span>, </span><br><span class="line"><span class="string">'messageBoardId'</span>: <span class="string">'finmb_24937'</span>, </span><br><span class="line"><span class="string">'market'</span>: <span class="string">'us_market'</span>, </span><br><span class="line"><span class="string">'annualHoldingsTurnover'</span>: None,</span><br><span class="line"><span class="string">'enterpriseToRevenue'</span>: 7.027, </span><br><span class="line"><span class="string">'beta3Year'</span>: None, </span><br><span class="line"><span class="string">'enterpriseToEbitda'</span>: 20.735,</span><br><span class="line"><span class="string">'52WeekChange'</span>: 0.30975795,</span><br><span class="line"><span class="string">'morningStarRiskRating'</span>: None, </span><br><span class="line"><span class="string">'forwardEps'</span>: 6.56, </span><br><span class="line"><span class="string">'revenueQuarterlyGrowth'</span>: None, </span><br><span class="line"><span class="string">'sharesOutstanding'</span>: 16319399936, </span><br><span class="line"><span class="string">'fundInceptionDate'</span>: None, </span><br><span class="line"><span class="string">'annualReportExpenseRatio'</span>: None,</span><br><span class="line"><span class="string">'totalAssets'</span>: None, </span><br><span class="line"><span class="string">'bookValue'</span>: 4.402,</span><br><span class="line"><span class="string">'sharesShort'</span>: 108944701, </span><br><span class="line"><span class="string">'sharesPercentSharesOut'</span>: 0.0067000003, </span><br><span class="line"><span class="string">'fundFamily'</span>: None, </span><br><span class="line"><span class="string">'lastFiscalYearEnd'</span>: 1632528000, </span><br><span class="line"><span class="string">'heldPercentInstitutions'</span>: 0.59576, </span><br><span class="line"><span class="string">'netIncomeToCommon'</span>: 100554997760, </span><br><span class="line"><span class="string">'trailingEps'</span>: 6.015, </span><br><span class="line"><span class="string">'lastDividendValue'</span>: 0.22,</span><br><span class="line"><span class="string">'SandP52WeekChange'</span>: 0.080180764, </span><br><span class="line"><span class="string">'priceToBook'</span>: 35.330532, </span><br><span class="line"><span class="string">'heldPercentInsiders'</span>: 0.0007, </span><br><span class="line"><span class="string">'nextFiscalYearEnd'</span>: 1695600000, </span><br><span class="line"><span class="string">'yield'</span>: None, </span><br><span class="line"><span class="string">'mostRecentQuarter'</span>: 1640390400, </span><br><span class="line"><span class="string">'shortRatio'</span>: 1.08,</span><br><span class="line"><span class="string">'sharesShortPreviousMonthDate'</span>: 1642118400, </span><br><span class="line"><span class="string">'floatShares'</span>: 16302795170, </span><br><span class="line"><span class="string">'beta'</span>: 1.185531, </span><br><span class="line"><span class="string">'enterpriseValue'</span>: 2658571911168, </span><br><span class="line"><span class="string">'priceHint'</span>: 2, </span><br><span class="line"><span class="string">'threeYearAverageReturn'</span>: None, </span><br><span class="line"><span class="string">'lastSplitDate'</span>: 1598832000, </span><br><span class="line"><span class="string">'lastSplitFactor'</span>: <span class="string">'4:1'</span>, </span><br><span class="line"><span class="string">'legalType'</span>: None, </span><br><span class="line"><span class="string">'lastDividendDate'</span>: 1643932800, </span><br><span class="line"><span class="string">'morningStarOverallRating'</span>: None, </span><br><span class="line"><span class="string">'earningsQuarterlyGrowth'</span>: 0.204, </span><br><span class="line"><span class="string">'priceToSalesTrailing12Months'</span>: 6.708319, </span><br><span class="line"><span class="string">'dateShortInterest'</span>: 1644883200, </span><br><span class="line"><span class="string">'pegRatio'</span>: 1.73, </span><br><span class="line"><span class="string">'ytdReturn'</span>: None, </span><br><span class="line"><span class="string">'forwardPE'</span>: 23.706554, </span><br><span class="line"><span class="string">'lastCapGain'</span>: None, </span><br><span class="line"><span class="string">'shortPercentOfFloat'</span>: 0.0067000003, </span><br><span class="line"><span class="string">'sharesShortPriorMonth'</span>: 90492581, </span><br><span class="line"><span class="string">'impliedSharesOutstanding'</span>: 0, </span><br><span class="line"><span class="string">'category'</span>: None, </span><br><span class="line"><span class="string">'fiveYearAverageReturn'</span>: None, </span><br><span class="line"><span class="string">'previousClose'</span>: 158.52, </span><br><span class="line"><span class="string">'regularMarketOpen'</span>: 158.93, </span><br><span class="line"><span class="string">'twoHundredDayAverage'</span>: 153.4692, </span><br><span class="line"><span class="string">'trailingAnnualDividendYield'</span>: 0.0054567247, </span><br><span class="line"><span class="string">'payoutRatio'</span>: 0.1434, </span><br><span class="line"><span class="string">'volume24Hr'</span>: None, </span><br><span class="line"><span class="string">'regularMarketDayHigh'</span>: 159.2799, </span><br><span class="line"><span class="string">'navPrice'</span>: None, </span><br><span class="line"><span class="string">'averageDailyVolume10Day'</span>: 93466040, </span><br><span class="line"><span class="string">'regularMarketPreviousClose'</span>: 158.52, </span><br><span class="line"><span class="string">'fiftyDayAverage'</span>: 169.1304, </span><br><span class="line"><span class="string">'trailingAnnualDividendRate'</span>: 0.865, </span><br><span class="line"><span class="string">'open'</span>: 158.93, </span><br><span class="line"><span class="string">'toCurrency'</span>: None, </span><br><span class="line"><span class="string">'averageVolume10days'</span>: 93466040, </span><br><span class="line"><span class="string">'expireDate'</span>: None, </span><br><span class="line"><span class="string">'algorithm'</span>: None, </span><br><span class="line"><span class="string">'dividendRate'</span>: 0.88, </span><br><span class="line"><span class="string">'exDividendDate'</span>: 1643932800, </span><br><span class="line"><span class="string">'circulatingSupply'</span>: None, </span><br><span class="line"><span class="string">'startDate'</span>: None, </span><br><span class="line"><span class="string">'regularMarketDayLow'</span>: 154.7475, </span><br><span class="line"><span class="string">'currency'</span>: <span class="string">'USD'</span>, </span><br><span class="line"><span class="string">'trailingPE'</span>: 25.85453, </span><br><span class="line"><span class="string">'regularMarketVolume'</span>: 51458660, </span><br><span class="line"><span class="string">'lastMarket'</span>: None, </span><br><span class="line"><span class="string">'maxSupply'</span>: None,</span><br><span class="line"><span class="string">'openInterest'</span>: None, </span><br><span class="line"><span class="string">'marketCap'</span>: 2537911484416, </span><br><span class="line"><span class="string">'volumeAllCurrencies'</span>: None, </span><br><span class="line"><span class="string">'strikePrice'</span>: None, </span><br><span class="line"><span class="string">'averageVolume'</span>: 97572501, </span><br><span class="line"><span class="string">'dayLow'</span>: 154.7475, </span><br><span class="line"><span class="string">'ask'</span>: 154.86, </span><br><span class="line"><span class="string">'askSize'</span>: 3000, </span><br><span class="line"><span class="string">'volume'</span>: 51458660, </span><br><span class="line"><span class="string">'fiftyTwoWeekHigh'</span>: 182.94, </span><br><span class="line"><span class="string">'fromCurrency'</span>: None, </span><br><span class="line"><span class="string">'fiveYearAvgDividendYield'</span>: 1.13, </span><br><span class="line"><span class="string">'fiftyTwoWeekLow'</span>: 118.86, </span><br><span class="line"><span class="string">'bid'</span>: 154.94, </span><br><span class="line"><span class="string">'tradeable'</span>: False, </span><br><span class="line"><span class="string">'dividendYield'</span>: 0.0055, </span><br><span class="line"><span class="string">'bidSize'</span>: 1100, </span><br><span class="line"><span class="string">'dayHigh'</span>: 159.2799, </span><br><span class="line"><span class="string">'regularMarketPrice'</span>: 155.515, </span><br><span class="line"><span class="string">'preMarketPrice'</span>: 158.95, </span><br><span class="line"><span class="string">'logo_url'</span>: <span class="string">'https://logo.clearbit.com/apple.com'</span>, </span><br><span class="line"><span class="string">'trailingPegRatio'</span>: 3.2017&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>PYTHON笔记十：解决在WSL子系统中使用matplotlib绘图的显示问题</title>
    <link href="http://uteric.github.io/python-10-matplotlib-display/"/>
    <id>http://uteric.github.io/python-10-matplotlib-display/</id>
    <published>2022-02-16T22:54:28.000Z</published>
    <updated>2022-02-16T22:54:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>在WSL子系统中使用matplotlib绘图时，图形界面无法弹出，需要调用第三方显示界面，如VcXsrv，安装好后首先需要配置使其可以通过防火墙，并查看WSL的版本，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;wsl -l -v</span><br><span class="line">  NAME            STATE           VERSION</span><br><span class="line">* Ubuntu-18.04    Running         2</span><br></pre></td></tr></table></figure><p>若是WSL2，则可以对~/.bashrc进行如下配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> DISPLAY=`grep -oP <span class="string">"(?&lt;=nameserver ).+"</span> /etc/resolv.conf`:0.0</span><br></pre></td></tr></table></figure><p>执行如下代码使其生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>重启命令行即可生效。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在WSL子系统中使用matplotlib绘图时，图形界面无法弹出，需要调用第三方显示界面，如VcXsrv，安装好后首先需要配置使其可以通过防火墙，并查看WSL的版本，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td 
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="PYTHON" scheme="http://uteric.github.io/tags/PYTHON/"/>
    
  </entry>
  
  <entry>
    <title>PYTHON笔记九：显示程序运行进度</title>
    <link href="http://uteric.github.io/python-9-track/"/>
    <id>http://uteric.github.io/python-9-track/</id>
    <published>2022-02-13T01:16:09.000Z</published>
    <updated>2022-02-13T01:16:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>PYTHON代码在运行过程中，可以通过第三方程序rich实时跟踪执行进度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from rich.progress import track</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> track(range(1,100), description=<span class="string">"Processing..."</span>):</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line">    time.sleep(0.5)</span><br></pre></td></tr></table></figure><p>显示效果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Processing... ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 0:00:00</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;PYTHON代码在运行过程中，可以通过第三方程序rich实时跟踪执行进度。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;b
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="PYTHON" scheme="http://uteric.github.io/tags/PYTHON/"/>
    
  </entry>
  
  <entry>
    <title>PYTHON笔记八：读取SQLITE文件</title>
    <link href="http://uteric.github.io/python-8-read-sqlite/"/>
    <id>http://uteric.github.io/python-8-read-sqlite/</id>
    <published>2022-02-09T21:44:08.000Z</published>
    <updated>2022-02-09T21:44:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍如何使用PYTHON读取上文生成的SQLITE文件，代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import sqlite3</span><br><span class="line"></span><br><span class="line">conn = sqlite3.connect(<span class="string">'test.sqlite'</span>)</span><br><span class="line">cur = conn.cursor()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Connected to SQLite file"</span>)</span><br><span class="line"></span><br><span class="line">cursor = cur.execute(<span class="string">'SELECT email FROM EmailList'</span>)</span><br><span class="line"></span><br><span class="line">maillst = list()</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> cursor:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Email:"</span>,row[0])</span><br><span class="line">    <span class="keyword">if</span> row[0] <span class="keyword">in</span> maillst: <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">else</span>: maillst.append(row[0])</span><br><span class="line"></span><br><span class="line">conn.close()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(maillst)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文介绍如何使用PYTHON读取上文生成的SQLITE文件，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="PYTHON" scheme="http://uteric.github.io/tags/PYTHON/"/>
    
  </entry>
  
  <entry>
    <title>PYTHON笔记七：通过PYTHON爬取邮箱地址并写入SQL文件</title>
    <link href="http://uteric.github.io/python-7-get-email/"/>
    <id>http://uteric.github.io/python-7-get-email/</id>
    <published>2022-02-09T21:25:06.000Z</published>
    <updated>2022-02-09T21:25:06.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">headers = &#123;<span class="string">"user-agent"</span>:<span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36"</span>&#125;</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">url = <span class="string">"https://pubmed.ncbi.nlm.nih.gov/"</span></span><br><span class="line"></span><br><span class="line">page = 1</span><br><span class="line">pagelist = list()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> page_id <span class="keyword">in</span> range(1):</span><br><span class="line">    page = page + 1</span><br><span class="line">    pagelist.append(<span class="string">"&amp;page="</span>+str(page))</span><br><span class="line"><span class="comment">#print(pagelist)</span></span><br><span class="line"></span><br><span class="line">urllist = list()</span><br><span class="line">urllist.append(url)</span><br><span class="line"><span class="keyword">for</span> eachpage <span class="keyword">in</span> pagelist:</span><br><span class="line">    urllist.append(url+eachpage)</span><br><span class="line"><span class="comment">#    print(url+eachpage)</span></span><br><span class="line"><span class="comment">#print(urllist)</span></span><br><span class="line"><span class="built_in">print</span>(len(urllist),<span class="string">"pages were retrieved, ok!"</span>)</span><br><span class="line"></span><br><span class="line">lstA = list()</span><br><span class="line"><span class="keyword">for</span> eachurl <span class="keyword">in</span> urllist:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Url:"</span>,eachurl)</span><br><span class="line">    resp = requests.get(eachurl,headers=headers)</span><br><span class="line"><span class="comment">#    print(resp.status_code)</span></span><br><span class="line">    resp.encoding = <span class="string">"utf-8"</span></span><br><span class="line">    soup = BeautifulSoup(resp.text,<span class="string">"html.parser"</span>)</span><br><span class="line">    tags = soup(<span class="string">"button"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> tag <span class="keyword">in</span> tags:</span><br><span class="line">        <span class="keyword">if</span> tag.get(<span class="string">"data-permalink-url"</span>) and not tag.get(<span class="string">"data-permalink-url"</span>) <span class="keyword">in</span> lstA:</span><br><span class="line">            lstA.append(tag.get(<span class="string">"data-permalink-url"</span>))</span><br><span class="line"><span class="comment">#print(lstA)</span></span><br><span class="line"><span class="comment">#print(len(lstA))</span></span><br><span class="line">lstB = list()</span><br><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> lstA:</span><br><span class="line">    url = link</span><br><span class="line">    resp = requests.get(url,headers=headers)</span><br><span class="line"><span class="comment">#    print(resp.status_code)</span></span><br><span class="line">    resp.encoding = <span class="string">"utf-8"</span></span><br><span class="line">    <span class="comment">#print(resp.text)</span></span><br><span class="line">    soup = BeautifulSoup(resp.text,<span class="string">"html.parser"</span>)</span><br><span class="line">    tags = soup(<span class="string">"li"</span>)</span><br><span class="line">    <span class="keyword">for</span> tag <span class="keyword">in</span> tags:</span><br><span class="line">        <span class="keyword">if</span> tag.get(<span class="string">"data-affiliation-id"</span>):</span><br><span class="line">            lstB.append(tag.contents[1])</span><br><span class="line"><span class="comment">#print(lstB)</span></span><br><span class="line"><span class="comment">#print(len(lstB))</span></span><br><span class="line">maillist = list()</span><br><span class="line"><span class="keyword">for</span> text <span class="keyword">in</span> lstB:</span><br><span class="line">    <span class="keyword">if</span> re.search(<span class="string">"@"</span>,text):</span><br><span class="line">        emails = re.findall(<span class="string">"\S+@\S+\.[a-zA-Z0-9]+"</span>,text)</span><br><span class="line">        <span class="keyword">for</span> email <span class="keyword">in</span> emails:</span><br><span class="line">            <span class="keyword">if</span> email <span class="keyword">in</span> maillist:<span class="built_in">continue</span></span><br><span class="line">            <span class="keyword">else</span>:maillist.append(email)</span><br><span class="line"><span class="built_in">print</span>(maillist)</span><br><span class="line"><span class="built_in">print</span>(len(maillist),<span class="string">"email address were retrived, done"</span>)</span><br><span class="line"></span><br><span class="line">import sqlite3</span><br><span class="line"></span><br><span class="line">conn = sqlite3.connect(<span class="string">'test.sqlite'</span>)</span><br><span class="line">cur = conn.cursor()</span><br><span class="line"></span><br><span class="line">cur.execute(<span class="string">'DROP TABLE IF EXISTS EmailList'</span>)</span><br><span class="line"></span><br><span class="line">cur.execute(<span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">CREATE TABLE EmailList (</span></span><br><span class="line"><span class="string">    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,</span></span><br><span class="line"><span class="string">    email TEXT UNIQUE,</span></span><br><span class="line"><span class="string">    firstname TEXT,</span></span><br><span class="line"><span class="string">    lastname TEXT,</span></span><br><span class="line"><span class="string">    organization TEXT,</span></span><br><span class="line"><span class="string">    sent INTEGER</span></span><br><span class="line"><span class="string">)'</span><span class="string">''</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> email <span class="keyword">in</span> maillist:</span><br><span class="line">    cur.execute(<span class="string">''</span><span class="string">'INSERT OR IGNORE INTO EmailList (email)</span></span><br><span class="line"><span class="string">        VALUES ( ? )'</span><span class="string">''</span>, ( email, ) )</span><br><span class="line"><span class="comment">#    cur.execute('SELECT id FROM EmailList WHERE email = ? ', (email, ))</span></span><br><span class="line"><span class="comment">#    email_id = cur.fetchone()[0]</span></span><br><span class="line">    conn.commit()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="PYTHON" scheme="http://uteric.github.io/tags/PYTHON/"/>
    
  </entry>
  
  <entry>
    <title>PYTHON笔记六：通过PYTHON获取多个PUBMED搜索页面的邮箱地址</title>
    <link href="http://uteric.github.io/python-6-get-email/"/>
    <id>http://uteric.github.io/python-6-get-email/</id>
    <published>2022-02-09T16:47:55.000Z</published>
    <updated>2022-02-09T16:47:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录如何构建多个搜索页面的URL，并使用FOR IN循环来获取每篇文章中的邮箱地址，代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">headers = &#123;<span class="string">"user-agent"</span>:<span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36"</span>&#125;</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">url = <span class="string">"XXX"</span> <span class="comment">#本文中使用的地址是PUBMED</span></span><br><span class="line"></span><br><span class="line">page = 1</span><br><span class="line">pagelist = list()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> page_id <span class="keyword">in</span> range(1):</span><br><span class="line">    page = page + 1</span><br><span class="line">    pagelist.append(<span class="string">"&amp;page="</span>+str(page))</span><br><span class="line"><span class="comment">#print(pagelist)</span></span><br><span class="line"></span><br><span class="line">urllist = list()</span><br><span class="line">urllist.append(url)</span><br><span class="line"><span class="keyword">for</span> eachpage <span class="keyword">in</span> pagelist:</span><br><span class="line">    urllist.append(url+eachpage)</span><br><span class="line"><span class="comment">#    print(url+eachpage)</span></span><br><span class="line"><span class="comment">#print(urllist)</span></span><br><span class="line"><span class="built_in">print</span>(len(urllist),<span class="string">"pages were retrieved, ok!"</span>)</span><br><span class="line"></span><br><span class="line">lstA = list()</span><br><span class="line"><span class="keyword">for</span> eachurl <span class="keyword">in</span> urllist:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Url:"</span>,eachurl)</span><br><span class="line">    resp = requests.get(eachurl,headers=headers)</span><br><span class="line"><span class="comment">#    print(resp.status_code)</span></span><br><span class="line">    resp.encoding = <span class="string">"utf-8"</span></span><br><span class="line">    soup = BeautifulSoup(resp.text,<span class="string">"html.parser"</span>)</span><br><span class="line">    tags = soup(<span class="string">"button"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> tag <span class="keyword">in</span> tags:</span><br><span class="line">        <span class="keyword">if</span> tag.get(<span class="string">"data-permalink-url"</span>) and not tag.get(<span class="string">"data-permalink-url"</span>) <span class="keyword">in</span> lstA:</span><br><span class="line">            lstA.append(tag.get(<span class="string">"data-permalink-url"</span>))</span><br><span class="line"><span class="comment">#print(lstA)</span></span><br><span class="line"><span class="comment">#print(len(lstA))</span></span><br><span class="line">lstB = list()</span><br><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> lstA:</span><br><span class="line">    url = link</span><br><span class="line">    resp = requests.get(url,headers=headers)</span><br><span class="line"><span class="comment">#    print(resp.status_code)</span></span><br><span class="line">    resp.encoding = <span class="string">"utf-8"</span></span><br><span class="line">    <span class="comment">#print(resp.text)</span></span><br><span class="line">    soup = BeautifulSoup(resp.text,<span class="string">"html.parser"</span>)</span><br><span class="line">    tags = soup(<span class="string">"li"</span>)</span><br><span class="line">    <span class="keyword">for</span> tag <span class="keyword">in</span> tags:</span><br><span class="line">        <span class="keyword">if</span> tag.get(<span class="string">"data-affiliation-id"</span>):</span><br><span class="line">            lstB.append(tag.contents[1])</span><br><span class="line"><span class="comment">#print(lstB)</span></span><br><span class="line"><span class="comment">#print(len(lstB))</span></span><br><span class="line">maillist = list()</span><br><span class="line"><span class="keyword">for</span> text <span class="keyword">in</span> lstB:</span><br><span class="line">    <span class="keyword">if</span> re.search(<span class="string">"@"</span>,text):</span><br><span class="line">        emails = re.findall(<span class="string">"\S+@\S+\.[a-zA-Z0-9]+"</span>,text)</span><br><span class="line">        <span class="keyword">for</span> email <span class="keyword">in</span> emails:</span><br><span class="line">            <span class="keyword">if</span> email <span class="keyword">in</span> maillist:<span class="built_in">continue</span></span><br><span class="line">            <span class="keyword">else</span>:maillist.append(email)</span><br><span class="line"><span class="comment">#print(maillist)</span></span><br><span class="line"><span class="built_in">print</span>(len(maillist),<span class="string">"email address were retrived, done"</span>)</span><br></pre></td></tr></table></figure><p>代码运行结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">17 email address were retrived, <span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文记录如何构建多个搜索页面的URL，并使用FOR IN循环来获取每篇文章中的邮箱地址，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="PYTHON" scheme="http://uteric.github.io/tags/PYTHON/"/>
    
  </entry>
  
  <entry>
    <title>PYTHON笔记五：通过PYTHON从PUBMED搜索列表中获取邮件地址</title>
    <link href="http://uteric.github.io/python-5-get-email/"/>
    <id>http://uteric.github.io/python-5-get-email/</id>
    <published>2022-02-08T20:56:10.000Z</published>
    <updated>2022-02-08T20:56:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍通过PYTHON从PUBMED搜索列表中获取邮件地址的方法，可以获取一整页文章列表中的邮件地址，下一篇文章介绍获取多页列表中邮件地址的方法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"https://pubmed.ncbi.nlm.nih.gov/?term=aav&amp;filter=pubt.review&amp;filter=datesearch.y_10"</span></span><br><span class="line">import requests</span><br><span class="line">headers = &#123;<span class="string">"user-agent"</span>:<span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36"</span>&#125;</span><br><span class="line">resp = requests.get(url,headers=headers)</span><br><span class="line"><span class="comment">#print(resp.status_code)</span></span><br><span class="line">resp.encoding = <span class="string">"utf-8"</span></span><br><span class="line"><span class="comment">#print(resp.text)</span></span><br><span class="line"></span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(resp.text,<span class="string">"html.parser"</span>)</span><br><span class="line">tags = soup(<span class="string">"button"</span>)</span><br><span class="line"></span><br><span class="line">lstA = list()</span><br><span class="line"><span class="keyword">for</span> tag <span class="keyword">in</span> tags:</span><br><span class="line">    <span class="keyword">if</span> tag.get(<span class="string">"data-permalink-url"</span>) and not tag.get(<span class="string">"data-permalink-url"</span>) <span class="keyword">in</span> lstA:</span><br><span class="line">        lstA.append(tag.get(<span class="string">"data-permalink-url"</span>))</span><br><span class="line"><span class="comment">#print(lst)</span></span><br><span class="line"><span class="comment">#print(len(lst))</span></span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">lstB = list()</span><br><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> lstA:</span><br><span class="line">    url = link</span><br><span class="line">    resp = requests.get(url,headers=headers)</span><br><span class="line"><span class="comment">#    print(resp.status_code)</span></span><br><span class="line">    resp.encoding = <span class="string">"utf-8"</span></span><br><span class="line">    <span class="comment">#print(resp.text)</span></span><br><span class="line">    soup = BeautifulSoup(resp.text,<span class="string">"html.parser"</span>)</span><br><span class="line">    tags = soup(<span class="string">"li"</span>)</span><br><span class="line">    <span class="keyword">for</span> tag <span class="keyword">in</span> tags:</span><br><span class="line">        <span class="keyword">if</span> tag.get(<span class="string">"data-affiliation-id"</span>):</span><br><span class="line">            lstB.append(tag.contents[1])</span><br><span class="line"><span class="comment">#print(lstB)</span></span><br><span class="line"></span><br><span class="line">maillist = list()</span><br><span class="line"><span class="keyword">for</span> text <span class="keyword">in</span> lstB:</span><br><span class="line">    <span class="keyword">if</span> re.search(<span class="string">"@"</span>,text):</span><br><span class="line">        emails = re.findall(<span class="string">"\S+@\S+"</span>,text)</span><br><span class="line"><span class="comment">#        print(emails)</span></span><br><span class="line">        <span class="keyword">if</span> emails <span class="keyword">in</span> maillist:<span class="built_in">continue</span></span><br><span class="line">        <span class="keyword">else</span>:maillist.append(emails)</span><br><span class="line"><span class="built_in">print</span>(len(maillist),<span class="string">"email address were retrived, done"</span>)</span><br></pre></td></tr></table></figure><p>运行代码，结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7 email address were retrived, <span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文介绍通过PYTHON从PUBMED搜索列表中获取邮件地址的方法，可以获取一整页文章列表中的邮件地址，下一篇文章介绍获取多页列表中邮件地址的方法。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="PYTHON" scheme="http://uteric.github.io/tags/PYTHON/"/>
    
  </entry>
  
  <entry>
    <title>PYTHON笔记四：通过PYTHON爬取PUBMED文章中的邮箱地址</title>
    <link href="http://uteric.github.io/python-4-get-email/"/>
    <id>http://uteric.github.io/python-4-get-email/</id>
    <published>2022-02-08T20:20:58.000Z</published>
    <updated>2022-02-08T20:20:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍如何通过PYTHON爬取PUBMED文章网页中的邮箱地址，方便后续与通讯作者取得联系。</p><p>爬取地址：<a href="https://pubmed.ncbi.nlm.nih.gov/" target="_blank" rel="noopener">https://pubmed.ncbi.nlm.nih.gov/</a></p><p>代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"https://pubmed.ncbi.nlm.nih.gov/31972133/"</span></span><br><span class="line">import requests</span><br><span class="line">headers = &#123;<span class="string">"user-agent"</span>:<span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36"</span>&#125;</span><br><span class="line">resp = requests.get(url,headers=headers)</span><br><span class="line"><span class="comment">#print(resp.status_code)</span></span><br><span class="line">resp.encoding = <span class="string">"utf-8"</span></span><br><span class="line"><span class="comment">#print(resp.text)</span></span><br><span class="line"></span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(resp.text,<span class="string">"html.parser"</span>)</span><br><span class="line">tags = soup(<span class="string">"li"</span>)</span><br><span class="line"><span class="comment">#import os</span></span><br><span class="line"><span class="comment">#lst = list()</span></span><br><span class="line"></span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">lst = list()</span><br><span class="line"><span class="keyword">for</span> tag <span class="keyword">in</span> tags:</span><br><span class="line">    <span class="keyword">if</span> tag.get(<span class="string">"data-affiliation-id"</span>):</span><br><span class="line">        lst.append(tag.contents[1])</span><br><span class="line"><span class="comment">#print(lst)</span></span><br><span class="line"></span><br><span class="line">maillist = list()</span><br><span class="line"><span class="keyword">for</span> text <span class="keyword">in</span> lst:</span><br><span class="line">    <span class="keyword">if</span> re.search(<span class="string">"@"</span>,text):</span><br><span class="line">        emails = re.findall(<span class="string">"\S+@\S+"</span>,text)</span><br><span class="line"><span class="comment">#        print(emails)</span></span><br><span class="line">        <span class="keyword">if</span> emails <span class="keyword">in</span> maillist:<span class="built_in">continue</span></span><br><span class="line">        <span class="keyword">else</span>:maillist.append(emails)</span><br><span class="line"><span class="built_in">print</span>(maillist)</span><br><span class="line"><span class="built_in">print</span>(len(maillist),<span class="string">"email address were retrived, done"</span>)</span><br></pre></td></tr></table></figure><p>代码运行后，结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="string">'xxx.xxx@sxxx.com.'</span>]]</span><br><span class="line">1 email address were retrived, <span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文介绍如何通过PYTHON爬取PUBMED文章网页中的邮箱地址，方便后续与通讯作者取得联系。&lt;/p&gt;
&lt;p&gt;爬取地址：&lt;a href=&quot;https://pubmed.ncbi.nlm.nih.gov/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;htt
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="PYTHON" scheme="http://uteric.github.io/tags/PYTHON/"/>
    
  </entry>
  
  <entry>
    <title>python-reg</title>
    <link href="http://uteric.github.io/python-reg/"/>
    <id>http://uteric.github.io/python-reg/</id>
    <published>2022-02-08T19:02:48.000Z</published>
    <updated>2022-02-08T19:02:48.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PYTHON笔记二：通过PYTHON批量下载图片</title>
    <link href="http://uteric.github.io/Python/python-2-download-img/"/>
    <id>http://uteric.github.io/Python/python-2-download-img/</id>
    <published>2022-02-08T01:00:11.000Z</published>
    <updated>2022-02-08T01:00:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文的代码是通过PYTHON来对当前页的图片地址进行解析，获取地址列表后，分别获取每一页的特定图片链接，并进行批量下载。</p><p>爬取页面：<a href="https://wall.alphacoders.com/" target="_blank" rel="noopener">https://wall.alphacoders.com/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"https://wall.alphacoders.com/popular.php?lang=Chinese"</span></span><br><span class="line">import requests</span><br><span class="line">headers = &#123;<span class="string">"user-agent"</span>:<span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36"</span>&#125;</span><br><span class="line">resp = requests.get(url,headers=headers)</span><br><span class="line"><span class="built_in">print</span>(resp.status_code)</span><br><span class="line">resp.encoding = <span class="string">"utf-8"</span></span><br><span class="line"><span class="comment">#print(resp.text)</span></span><br><span class="line"></span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(resp.text,<span class="string">"html.parser"</span>)</span><br><span class="line">tags = soup(<span class="string">"a"</span>)</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">lst = list()</span><br><span class="line"><span class="keyword">for</span> tag <span class="keyword">in</span> tags:</span><br><span class="line">    <span class="keyword">if</span> tag.get(<span class="string">"rel"</span>) and tag.get(<span class="string">"href"</span>) and tag.get(<span class="string">"title"</span>):</span><br><span class="line">        url = <span class="string">"https://wall.alphacoders.com"</span> + tag.get(<span class="string">"href"</span>)</span><br><span class="line">        lst.append(url)</span><br><span class="line"><span class="comment">#print(lst)</span></span><br><span class="line"></span><br><span class="line">count = 0</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> lst:</span><br><span class="line">    resp = requests.get(url,headers=headers)</span><br><span class="line"><span class="comment">#    print(resp.status_code)</span></span><br><span class="line">    resp.encoding = <span class="string">"utf-8"</span></span><br><span class="line">    soup = BeautifulSoup(resp.text,<span class="string">"html.parser"</span>)</span><br><span class="line">    tags = soup(<span class="string">"img"</span>)</span><br><span class="line">    count = count + 1</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> tag <span class="keyword">in</span> tags:</span><br><span class="line">        <span class="keyword">if</span> tag.get(<span class="string">"src"</span>) and tag.get(<span class="string">"title"</span>):</span><br><span class="line">            img_src = tag.get(<span class="string">"src"</span>)</span><br><span class="line">            img_class = tag.get(<span class="string">"class"</span>)</span><br><span class="line">            filename = os.path.basename(img_src)</span><br><span class="line">            with open(f<span class="string">"picture/&#123;filename&#125;"</span>,<span class="string">"wb"</span>) as fout:</span><br><span class="line">                fout.write(requests.get(img_src).content)</span><br><span class="line">            <span class="built_in">print</span>(count,img_src,filename,img_class)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(count,<span class="string">"pictures are downloaded"</span>)</span><br></pre></td></tr></table></figure><p>运行代码后，结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">200 <span class="comment"># CODE200可以正常爬取</span></span><br><span class="line">1 https://images3.alphacoders.com/121/thumb-1920-1210173.jpg thumb-1920-1210173.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">2 https://images2.alphacoders.com/120/thumb-1920-1209425.png thumb-1920-1209425.png [<span class="string">'main-content'</span>]</span><br><span class="line">3 https://images6.alphacoders.com/121/thumb-1920-1210764.png thumb-1920-1210764.png [<span class="string">'main-content'</span>]</span><br><span class="line">4 https://images2.alphacoders.com/120/thumb-1920-1209249.jpg thumb-1920-1209249.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">5 https://images4.alphacoders.com/120/thumb-1920-1209427.jpg thumb-1920-1209427.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">6 https://images5.alphacoders.com/120/thumb-1920-1209251.jpg thumb-1920-1209251.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">7 https://images.alphacoders.com/120/thumb-1920-1209368.jpg thumb-1920-1209368.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">8 https://images.alphacoders.com/120/thumb-1920-1209632.jpg thumb-1920-1209632.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">9 https://images8.alphacoders.com/121/thumb-1920-1210064.jpg thumb-1920-1210064.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">10 https://images5.alphacoders.com/120/thumb-1920-1209734.jpg thumb-1920-1209734.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">11 https://images4.alphacoders.com/120/thumb-1920-1209815.jpg thumb-1920-1209815.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">12 https://images5.alphacoders.com/120/thumb-1920-1209796.jpg thumb-1920-1209796.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">13 https://images3.alphacoders.com/121/thumb-1920-1210062.jpg thumb-1920-1210062.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">14 https://images2.alphacoders.com/120/thumb-1920-1209938.jpg thumb-1920-1209938.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">15 https://images8.alphacoders.com/121/thumb-1920-1210309.jpg thumb-1920-1210309.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">16 https://images6.alphacoders.com/121/thumb-1920-1210276.jpg thumb-1920-1210276.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">17 https://images4.alphacoders.com/120/thumb-1920-1209318.png thumb-1920-1209318.png [<span class="string">'main-content'</span>]</span><br><span class="line">18 https://images6.alphacoders.com/120/thumb-1920-1209428.jpg thumb-1920-1209428.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">19 https://images7.alphacoders.com/120/thumb-1920-1209250.jpg thumb-1920-1209250.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">20 https://images6.alphacoders.com/120/thumb-1920-1209629.jpg thumb-1920-1209629.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">21 https://images2.alphacoders.com/120/thumb-1920-1209392.png thumb-1920-1209392.png [<span class="string">'main-content'</span>]</span><br><span class="line">22 https://images7.alphacoders.com/120/thumb-1920-1209633.jpg thumb-1920-1209633.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">23 https://images7.alphacoders.com/120/thumb-1920-1209319.png thumb-1920-1209319.png [<span class="string">'main-content'</span>]</span><br><span class="line">24 https://images8.alphacoders.com/120/thumb-1920-1209315.png thumb-1920-1209315.png [<span class="string">'main-content'</span>]</span><br><span class="line">25 https://images8.alphacoders.com/120/thumb-1920-1209791.jpg thumb-1920-1209791.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">26 https://images3.alphacoders.com/120/thumb-1920-1209426.jpg thumb-1920-1209426.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">27 https://images8.alphacoders.com/120/thumb-1920-1209859.png thumb-1920-1209859.png [<span class="string">'main-content'</span>]</span><br><span class="line">28 https://images3.alphacoders.com/121/thumb-1920-1210339.jpg thumb-1920-1210339.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">29 https://images5.alphacoders.com/121/thumb-1920-1210580.png thumb-1920-1210580.png [<span class="string">'main-content'</span>]</span><br><span class="line">30 https://images4.alphacoders.com/121/thumb-1920-1210291.jpg thumb-1920-1210291.jpg [<span class="string">'main-content'</span>]</span><br><span class="line">30 pictures are downloaded <span class="comment">#共下载30个文件</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文的代码是通过PYTHON来对当前页的图片地址进行解析，获取地址列表后，分别获取每一页的特定图片链接，并进行批量下载。&lt;/p&gt;
&lt;p&gt;爬取页面：&lt;a href=&quot;https://wall.alphacoders.com/&quot; target=&quot;_blank&quot; rel=&quot;noo
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="PYTHON" scheme="http://uteric.github.io/tags/PYTHON/"/>
    
  </entry>
  
  <entry>
    <title>PYTHON笔记一：通过PYTHON从网页批量下载图片</title>
    <link href="http://uteric.github.io/Python/python-1-download-img/"/>
    <id>http://uteric.github.io/Python/python-1-download-img/</id>
    <published>2022-02-08T00:14:49.000Z</published>
    <updated>2022-02-08T00:14:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍通过PYTHON从网页批量下载图片的代码，示例网站：wall.alphacoders.com</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"https://wall.alphacoders.com/"</span></span><br><span class="line">import requests</span><br><span class="line">headers = &#123;<span class="string">"user-agent"</span>:<span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36"</span>&#125; <span class="comment">#伪装成浏览器</span></span><br><span class="line">resp = requests.get(url,headers=headers)</span><br><span class="line"><span class="built_in">print</span>(resp.status_code) <span class="comment">#CODE若为200，则可以正常爬取数据</span></span><br><span class="line">resp.encoding = <span class="string">"utf-8"</span> <span class="comment">#根据网页本身的编码进行更改</span></span><br><span class="line"><span class="comment">#print(resp.text)</span></span><br><span class="line"></span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(resp.text,<span class="string">"html.parser"</span>)</span><br><span class="line">tags = soup(<span class="string">"img"</span>) <span class="comment">#爬取"img"标签</span></span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> tag <span class="keyword">in</span> tags:</span><br><span class="line">    <span class="keyword">if</span> tag.get(<span class="string">"src"</span>) and tag.get(<span class="string">'width'</span>) == <span class="string">"600"</span>: <span class="comment">#"src"属性存在，且"width"属性值为600</span></span><br><span class="line">        img_src = tag.get(<span class="string">"src"</span>)</span><br><span class="line">        img_width = tag.get(<span class="string">"width"</span>)</span><br><span class="line">        filename = os.path.basename(img_src)</span><br><span class="line">        with open(f<span class="string">"picture/&#123;filename&#125;"</span>,<span class="string">"wb"</span>) as fout:</span><br><span class="line">            fout.write(requests.get(img_src).content)</span><br><span class="line">        <span class="built_in">print</span>(img_src,filename,img_width)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"download is done, ok"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文介绍通过PYTHON从网页批量下载图片的代码，示例网站：wall.alphacoders.com&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;lin
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="PYTHON" scheme="http://uteric.github.io/tags/PYTHON/"/>
    
  </entry>
  
  <entry>
    <title>PYTHON笔记三：如何通过PYTHON发邮件</title>
    <link href="http://uteric.github.io/Python/python-3-send-email/"/>
    <id>http://uteric.github.io/Python/python-3-send-email/</id>
    <published>2022-02-07T20:16:24.000Z</published>
    <updated>2022-02-07T20:16:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍如何通过PYTHON来发邮件，简单代码，稍加修改即可群发邮件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">import smtplib</span><br><span class="line">from email.mime.text import MIMEText</span><br><span class="line">from email.header import Header</span><br><span class="line"></span><br><span class="line">def my_send_email(title,content_html,from_email,to_email): <span class="comment">#标题，内容，发件箱，收件箱</span></span><br><span class="line">    message = MIMEText(content_html,<span class="string">"html"</span>,<span class="string">"utf-8"</span>) <span class="comment">#内容</span></span><br><span class="line">    message[<span class="string">"subject"</span>] = Header(title,<span class="string">"utf-8"</span>) <span class="comment">#标题</span></span><br><span class="line">    message[<span class="string">"From"</span>],message[<span class="string">"To"</span>] = from_email, to_email <span class="comment">#发件箱与收件箱</span></span><br><span class="line"></span><br><span class="line">    smtpObj = smtplib.SMTP_SSL(<span class="string">"smtp.qq.com"</span>,465) <span class="comment">#QQ邮箱为例，SMTP地址为“smtp.qq.com”，端口为465；若使用企业邮箱，则SMTP地址为“smtp.exmail.qq.com”</span></span><br><span class="line">    smtpObj.login(from_email,<span class="string">"your password"</span>) <span class="comment">#邮箱密码</span></span><br><span class="line">    smtpObj.sendmail(from_email,[to_email],message.as_string())</span><br><span class="line">    smtpObj.quit()</span><br><span class="line"></span><br><span class="line"><span class="comment">#以下内容请根据实际需要进行更改</span></span><br><span class="line"></span><br><span class="line">mytitle = <span class="string">"长歌行"</span></span><br><span class="line">content = <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">    &lt;h2&gt;长歌行&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;meta&gt;长歌行&lt;/meta&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;青青园中葵，朝露待日晞。&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;阳春布德泽，万物生光辉。&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;常恐秋节至，焜黄华叶衰。&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;百川东到海，何时复西归。&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;少壮不努力，老大徒伤悲。&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt; &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt; &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;h2&gt;七步诗&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;meta&gt;七步诗&lt;/meta&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;萁在釜下燃，豆在釜中泣。&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;本自同根生，相煎何太急。&lt;/p&gt;</span></span><br><span class="line"><span class="string">"</span><span class="string">""</span></span><br><span class="line">f_email = <span class="string">"sender@mail.com"</span></span><br><span class="line">t_email = <span class="string">"receiver@mail.com"</span></span><br><span class="line"></span><br><span class="line">my_send_email(mytitle,content,f_email,t_email)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Email was sent, ok"</span>) <span class="comment">#成功发送，打印信息</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文介绍如何通过PYTHON来发邮件，简单代码，稍加修改即可群发邮件。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="PYTHON" scheme="http://uteric.github.io/tags/PYTHON/"/>
    
  </entry>
  
  <entry>
    <title>WSL子系统基本信息查看与操作</title>
    <link href="http://uteric.github.io/Linux/wsl-info/"/>
    <id>http://uteric.github.io/Linux/wsl-info/</id>
    <published>2022-02-07T01:25:53.000Z</published>
    <updated>2022-02-07T01:25:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、查看版本信息与参数"><a href="#一、查看版本信息与参数" class="headerlink" title="一、查看版本信息与参数"></a>一、查看版本信息与参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">&gt; wsl --version</span><br><span class="line">Invalid <span class="built_in">command</span> line option: --version</span><br><span class="line">Copyright (c) Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">Usage: wsl.exe [Argument] [Options...] [CommandLine]</span><br><span class="line">Arguments <span class="keyword">for</span> running Linux binaries:</span><br><span class="line"></span><br><span class="line">    If no <span class="built_in">command</span> line is provided, wsl.exe launches the default shell.</span><br><span class="line"></span><br><span class="line">    --<span class="built_in">exec</span>, -e &lt;CommandLine&gt;</span><br><span class="line">        Execute the specified <span class="built_in">command</span> without using the default Linux shell.</span><br><span class="line"></span><br><span class="line">    --</span><br><span class="line">        Pass the remaining <span class="built_in">command</span> line as is.</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">    --<span class="built_in">cd</span> &lt;Directory&gt;</span><br><span class="line">        Sets the specified directory as the current working directory.</span><br><span class="line">        If ~ is used the Linux users home path will be used. If the path begins</span><br><span class="line">        with a / character, it will be interpreted as an absolute Linux path.</span><br><span class="line">        Otherwise, the value must be an absolute Windows path.</span><br><span class="line"></span><br><span class="line">    --distribution, -d &lt;Distro&gt;</span><br><span class="line">        Run the specified distribution.</span><br><span class="line"></span><br><span class="line">    --user, -u &lt;UserName&gt;</span><br><span class="line">        Run as the specified user.</span><br><span class="line"></span><br><span class="line">Arguments <span class="keyword">for</span> managing Windows Subsystem <span class="keyword">for</span> Linux:</span><br><span class="line"></span><br><span class="line">    --<span class="built_in">help</span></span><br><span class="line">        Display usage information.</span><br><span class="line"></span><br><span class="line">    --install [Options]</span><br><span class="line">        Install additional Windows Subsystem <span class="keyword">for</span> Linux distributions.</span><br><span class="line">        For a list of valid distributions, use <span class="string">'wsl --list --online'</span>.</span><br><span class="line"></span><br><span class="line">        Options:</span><br><span class="line">            --distribution, -d [Argument]</span><br><span class="line">                Downloads and installs a distribution by name.</span><br><span class="line"></span><br><span class="line">                Arguments:</span><br><span class="line">                    A valid distribution name (not <span class="keyword">case</span> sensitive).</span><br><span class="line"></span><br><span class="line">                Examples:</span><br><span class="line">                    wsl --install -d Ubuntu</span><br><span class="line">                    wsl --install --distribution Debian</span><br><span class="line"></span><br><span class="line">    --<span class="built_in">set</span>-default-version &lt;Version&gt;</span><br><span class="line">        Changes the default install version <span class="keyword">for</span> new distributions.</span><br><span class="line"></span><br><span class="line">    --shutdown</span><br><span class="line">        Immediately terminates all running distributions and the WSL 2</span><br><span class="line">        lightweight utility virtual machine.</span><br><span class="line"></span><br><span class="line">    --status</span><br><span class="line">        Show the status of Windows Subsystem <span class="keyword">for</span> Linux.</span><br><span class="line"></span><br><span class="line">    --update [Options]</span><br><span class="line">        If no options are specified, the WSL 2 kernel will be updated</span><br><span class="line">        to the latest version.</span><br><span class="line"></span><br><span class="line">        Options:</span><br><span class="line">            --rollback</span><br><span class="line">                Revert to the previous version of the WSL 2 kernel.</span><br><span class="line"></span><br><span class="line">Arguments <span class="keyword">for</span> managing distributions <span class="keyword">in</span> Windows Subsystem <span class="keyword">for</span> Linux:</span><br><span class="line"></span><br><span class="line">    --<span class="built_in">export</span> &lt;Distro&gt; &lt;FileName&gt;</span><br><span class="line">        Exports the distribution to a tar file.</span><br><span class="line">        The filename can be - <span class="keyword">for</span> standard output.</span><br><span class="line"></span><br><span class="line">    --import &lt;Distro&gt; &lt;InstallLocation&gt; &lt;FileName&gt; [Options]</span><br><span class="line">        Imports the specified tar file as a new distribution.</span><br><span class="line">        The filename can be - <span class="keyword">for</span> standard input.</span><br><span class="line"></span><br><span class="line">        Options:</span><br><span class="line">            --version &lt;Version&gt;</span><br><span class="line">                Specifies the version to use <span class="keyword">for</span> the new distribution.</span><br><span class="line"></span><br><span class="line">    --list, -l [Options]</span><br><span class="line">        Lists distributions.</span><br><span class="line"></span><br><span class="line">        Options:</span><br><span class="line">            --all</span><br><span class="line">                List all distributions, including distributions that are</span><br><span class="line">                currently being installed or uninstalled.</span><br><span class="line"></span><br><span class="line">            --running</span><br><span class="line">                List only distributions that are currently running.</span><br><span class="line"></span><br><span class="line">            --quiet, -q</span><br><span class="line">                Only show distribution names.</span><br><span class="line"></span><br><span class="line">            --verbose, -v</span><br><span class="line">                Show detailed information about all distributions.</span><br><span class="line"></span><br><span class="line">            --online, -o</span><br><span class="line">                Displays a list of available distributions <span class="keyword">for</span> install with <span class="string">'wsl --install'</span>.</span><br><span class="line"></span><br><span class="line">    --<span class="built_in">set</span>-default, -s &lt;Distro&gt;</span><br><span class="line">        Sets the distribution as the default.</span><br><span class="line"></span><br><span class="line">    --<span class="built_in">set</span>-version &lt;Distro&gt; &lt;Version&gt;</span><br><span class="line">        Changes the version of the specified distribution.</span><br><span class="line"></span><br><span class="line">    --terminate, -t &lt;Distro&gt;</span><br><span class="line">        Terminates the specified distribution.</span><br><span class="line"></span><br><span class="line">    --unregister &lt;Distro&gt;</span><br><span class="line">        Unregisters the distribution and deletes the root filesystem.</span><br></pre></td></tr></table></figure><h2 id="二、查看已安装的WSL"><a href="#二、查看已安装的WSL" class="headerlink" title="二、查看已安装的WSL"></a>二、查看已安装的WSL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; wsl -l</span><br><span class="line">Windows Subsystem <span class="keyword">for</span> Linux Distributions:</span><br><span class="line">Ubuntu-18.04 (Default)</span><br></pre></td></tr></table></figure><h2 id="三、查看运行中的WSL"><a href="#三、查看运行中的WSL" class="headerlink" title="三、查看运行中的WSL"></a>三、查看运行中的WSL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; wsl -l --running</span><br><span class="line">Windows Subsystem <span class="keyword">for</span> Linux Distributions:</span><br><span class="line">Ubuntu-18.04 (Default)</span><br></pre></td></tr></table></figure><h2 id="四、停止运行WSL"><a href="#四、停止运行WSL" class="headerlink" title="四、停止运行WSL"></a>四、停止运行WSL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; wsl --terminate</span><br></pre></td></tr></table></figure><h2 id="五、删除WSL"><a href="#五、删除WSL" class="headerlink" title="五、删除WSL"></a>五、删除WSL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; wsl --unregister Ubuntu-18.04</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、查看版本信息与参数&quot;&gt;&lt;a href=&quot;#一、查看版本信息与参数&quot; class=&quot;headerlink&quot; title=&quot;一、查看版本信息与参数&quot;&gt;&lt;/a&gt;一、查看版本信息与参数&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="WSL" scheme="http://uteric.github.io/tags/WSL/"/>
    
  </entry>
  
  <entry>
    <title>WSL中LINUX子系统配置中文环境</title>
    <link href="http://uteric.github.io/Linux/linux-chinese-install/"/>
    <id>http://uteric.github.io/Linux/linux-chinese-install/</id>
    <published>2022-02-07T01:04:02.000Z</published>
    <updated>2022-02-07T01:04:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、安装中文基础包"><a href="#一、安装中文基础包" class="headerlink" title="一、安装中文基础包"></a>一、安装中文基础包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install language-pack-zh-hans</span><br></pre></td></tr></table></figure><h2 id="二、开启中文locale支持"><a href="#二、开启中文locale支持" class="headerlink" title="二、开启中文locale支持"></a>二、开启中文locale支持</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/locale.gen</span><br><span class="line"><span class="comment"># 去掉zh_CN.UTF-8 UTF-8前面的#使其生效</span></span><br><span class="line">sudo locale-gen</span><br></pre></td></tr></table></figure><h2 id="三、修改默认locale为中文"><a href="#三、修改默认locale为中文" class="headerlink" title="三、修改默认locale为中文"></a>三、修改默认locale为中文</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/default/locale</span><br><span class="line"><span class="comment">#修改：LANG=zh_CN.utf8</span></span><br></pre></td></tr></table></figure><p>重启LINUX命令行即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、安装中文基础包&quot;&gt;&lt;a href=&quot;#一、安装中文基础包&quot; class=&quot;headerlink&quot; title=&quot;一、安装中文基础包&quot;&gt;&lt;/a&gt;一、安装中文基础包&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="LINUX" scheme="http://uteric.github.io/tags/LINUX/"/>
    
  </entry>
  
  <entry>
    <title>在环境中进行RNASEQ分析</title>
    <link href="http://uteric.github.io/RNASEQ/condaEnv/"/>
    <id>http://uteric.github.io/RNASEQ/condaEnv/</id>
    <published>2021-06-27T01:55:14.000Z</published>
    <updated>2021-06-27T01:55:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>比如：在进行RNASEQ分析时，需要使用fastp进行质控，这个程序安装在rnaseq这个环境当中，提交SBATCH任务之前需要激活这个环境，否则会找不到fastp这个命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; conda info --envs <span class="comment">#查看环境列表</span></span><br><span class="line"></span><br><span class="line">&gt; <span class="built_in">source</span> activate rnaseq <span class="comment">#激活环境</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;比如：在进行RNASEQ分析时，需要使用fastp进行质控，这个程序安装在rnaseq这个环境当中，提交SBATCH任务之前需要激活这个环境，否则会找不到fastp这个命令。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="RNASEQ" scheme="http://uteric.github.io/tags/RNASEQ/"/>
    
  </entry>
  
  <entry>
    <title>批量任务提交命令SLURM</title>
    <link href="http://uteric.github.io/Linux/slurm/"/>
    <id>http://uteric.github.io/Linux/slurm/</id>
    <published>2021-03-11T17:17:08.000Z</published>
    <updated>2021-03-11T17:17:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>SLURM，代表Simple Linux Utility for Resource Management，它的主要任务是在集群中为每一个提交的任务进行资源分配，当任务多于资源时，创建队列并对所有任务进行统一的资源调配。</p><p>基本命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看nodes与partitions的信息：</span></span><br><span class="line">$ sinfo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交任务</span></span><br><span class="line">$ sbatch ***.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看任务状态</span></span><br><span class="line">$ squeue -j job_name</span><br><span class="line">$ squeue -u user_name</span><br><span class="line">$ squeue -p partition_name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看详细信息</span></span><br><span class="line">$ scontrol show job job_name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 任务报告</span></span><br><span class="line">$ sacct -j job_name</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;SLURM，代表Simple Linux Utility for Resource Management，它的主要任务是在集群中为每一个提交的任务进行资源分配，当任务多于资源时，创建队列并对所有任务进行统一的资源调配。&lt;/p&gt;
&lt;p&gt;基本命令：&lt;/p&gt;
&lt;figure cl
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="SLURM" scheme="http://uteric.github.io/tags/SLURM/"/>
    
  </entry>
  
  <entry>
    <title>LINUX硬盘容量查看命令duf</title>
    <link href="http://uteric.github.io/Linux/duf/"/>
    <id>http://uteric.github.io/Linux/duf/</id>
    <published>2021-02-18T20:19:29.000Z</published>
    <updated>2021-02-18T20:19:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>在LINUX中，查看硬盘使用情况有多个命令，最常用的是df，但阅读起来并不友好，而duf则是一个高颜值的易于阅读的命令。</p><p>首先，根据系统的型号在duf的官网上下载安装包，切换到下载目录，执行安装，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; sudo gdebi duf_0.6.0_linux_amd64.deb</span><br></pre></td></tr></table></figure><p>安装完成后，如要查看硬盘使用情况，输入duf，如下：</p><p><img src="/images/LINUX/duf.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在LINUX中，查看硬盘使用情况有多个命令，最常用的是df，但阅读起来并不友好，而duf则是一个高颜值的易于阅读的命令。&lt;/p&gt;
&lt;p&gt;首先，根据系统的型号在duf的官网上下载安装包，切换到下载目录，执行安装，&lt;/p&gt;
&lt;figure class=&quot;highlight ba
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="duf" scheme="http://uteric.github.io/tags/duf/"/>
    
  </entry>
  
  <entry>
    <title>LINUX中统计文件或目录总数</title>
    <link href="http://uteric.github.io/Linux/fileNumber/"/>
    <id>http://uteric.github.io/Linux/fileNumber/</id>
    <published>2020-12-11T21:21:05.000Z</published>
    <updated>2020-12-11T21:21:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>在LINUX中，如需快速统计当前目录下文件或目录的个数，可以结合如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计文件个数</span></span><br><span class="line">$ ls -l | grep <span class="string">"^-"</span> | wc -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计目录个数</span></span><br><span class="line">$ ls -l | grep <span class="string">"^d"</span> | wc -l</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在LINUX中，如需快速统计当前目录下文件或目录的个数，可以结合如下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;b
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="LINUX" scheme="http://uteric.github.io/tags/LINUX/"/>
    
  </entry>
  
  <entry>
    <title>在R中操作特定的行</title>
    <link href="http://uteric.github.io/R/deleteRows/"/>
    <id>http://uteric.github.io/R/deleteRows/</id>
    <published>2020-12-08T19:23:49.000Z</published>
    <updated>2020-12-08T19:23:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>在R中，如需删除特定的行或对其赋值，可以使用which()查找行号，再根据行号进行操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 现在，我们的数据是基因组中基因的位置，如下：</span></span><br><span class="line">&gt; head(hg19)</span><br><span class="line">     V1       V2       V3      V4</span><br><span class="line">1  chr1 66999275 67216822   SGIP1</span><br><span class="line">5  chr1  8378144  8404227 SLC45A1</span><br><span class="line">6  chr1 16767166 16786585  NECAP2</span><br><span class="line">9  chr1 25071937 25170812   CLIC4</span><br><span class="line">10 chr1 33546753 33589093   AZIN2</span><br><span class="line">24 chr1 48998525 50489626   AGBL4</span><br><span class="line"></span><br><span class="line">&gt; dim(hg19)</span><br><span class="line">28165     4 <span class="comment"># 共28165行</span></span><br><span class="line"><span class="comment"># 若我们对基因位置进行扩展，由于有些基因坐标太靠近染色体起始位置，会出现负数，这会导致后面的操作出错</span></span><br><span class="line">&gt; hg19<span class="variable">$V2</span> &lt;- hg19<span class="variable">$V2</span> - 5000</span><br><span class="line">&gt; hg19<span class="variable">$V3</span> &lt;- hg19<span class="variable">$V3</span> + 5000</span><br><span class="line">&gt; head(hg19)</span><br><span class="line">     V1       V2       V3      V4</span><br><span class="line">1  chr1 66994275 67221822   SGIP1</span><br><span class="line">5  chr1  8373144  8409227 SLC45A1</span><br><span class="line">6  chr1 16762166 16791585  NECAP2</span><br><span class="line">9  chr1 25066937 25175812   CLIC4</span><br><span class="line">10 chr1 33541753 33594093   AZIN2</span><br><span class="line">24 chr1 48993525 50494626   AGBL4</span><br><span class="line"><span class="comment"># 可以通过which()查找行号</span></span><br><span class="line">&gt; <span class="built_in">which</span>(hg19<span class="variable">$V2</span> &lt; 0)</span><br><span class="line"><span class="comment"># 22802 28048 28049</span></span><br><span class="line"><span class="comment"># 查看一下</span></span><br><span class="line">&gt; hg19[c(22802,28048,28049),]</span><br><span class="line">         V1    V2    V3    V4</span><br><span class="line">57944 chr17 -4934 36441 DOC2B</span><br><span class="line">70402 chrMT -1694  9262   ND1</span><br><span class="line">70403 chrMT  -531 10511   ND2</span><br><span class="line"><span class="comment"># 再将对应的行删除或者进行赋值</span></span><br><span class="line">&gt; hg19[c(22802,28048,28049),]<span class="variable">$V2</span> &lt;- 0</span><br><span class="line">&gt; hg19[c(22802,28048,28049),]</span><br><span class="line">         V1 V2    V3    V4</span><br><span class="line">57944 chr17  0 36441 DOC2B</span><br><span class="line">70402 chrMT  0  9262   ND1</span><br><span class="line">70403 chrMT  0 10511   ND2</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在R中，如需删除特定的行或对其赋值，可以使用which()查找行号，再根据行号进行操作。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
</feed>
