<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>诸子百家</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://uteric.github.io/"/>
  <updated>2020-06-05T23:33:46.000Z</updated>
  <id>http://uteric.github.io/</id>
  
  <author>
    <name>括囊无誉</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>seqinfo()基本操作</title>
    <link href="http://uteric.github.io/CHIPSEQ/seqinfo/"/>
    <id>http://uteric.github.io/CHIPSEQ/seqinfo/</id>
    <published>2020-06-05T23:33:46.000Z</published>
    <updated>2020-06-05T23:33:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>seqinfo()是GenomeInfoDb程序的一个函数，用于获取基因组序列的基本信息，这个函数在运行时需要调用fetchExtendedChromInfoFromUCSC()，因此，需要保持网络连接。基本用法是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Seqinfo(genome=<span class="string">""</span>)</span><br></pre></td></tr></table></figure><p>以获取hg38的基因组信息为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- Seqinfo(genome=<span class="string">"hg38"</span>)</span><br><span class="line">&gt; x</span><br><span class="line">Seqinfo object with 455 sequences (1 circular) from hg38 genome:</span><br><span class="line">  seqnames         seqlengths isCircular genome</span><br><span class="line">  chr1              248956422      FALSE   hg38</span><br><span class="line">  chr2              242193529      FALSE   hg38</span><br><span class="line">  chr3              198295559      FALSE   hg38</span><br><span class="line">  chr4              190214555      FALSE   hg38</span><br><span class="line">  chr5              181538259      FALSE   hg38</span><br><span class="line">  ...                     ...        ...    ...</span><br><span class="line">  chrUn_KI270753v1      62944      FALSE   hg38</span><br><span class="line">  chrUn_KI270754v1      40191      FALSE   hg38</span><br><span class="line">  chrUn_KI270755v1      36723      FALSE   hg38</span><br><span class="line">  chrUn_KI270756v1      79590      FALSE   hg38</span><br><span class="line">  chrUn_KI270757v1      71251      FALSE   hg38</span><br><span class="line"></span><br><span class="line">&gt; summary(x)</span><br><span class="line">[1] <span class="string">"455 sequences (1 circular) from hg38 genome"</span></span><br><span class="line"></span><br><span class="line">&gt; length(x)</span><br><span class="line">[1] 455</span><br></pre></td></tr></table></figure><p>另外，还有如下Accessors可以调用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">seqnames(x)</span><br><span class="line">names(x)</span><br><span class="line">seqlevels(x)</span><br><span class="line">seqlengths(x)</span><br><span class="line">isCircular(x)</span><br><span class="line">genome(x)</span><br></pre></td></tr></table></figure><p>比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; head(seqnames(x))</span><br><span class="line">[1] <span class="string">"chr1"</span> <span class="string">"chr2"</span> <span class="string">"chr3"</span> <span class="string">"chr4"</span> <span class="string">"chr5"</span> <span class="string">"chr6"</span></span><br><span class="line">&gt; head(names(x))</span><br><span class="line">[1] <span class="string">"chr1"</span> <span class="string">"chr2"</span> <span class="string">"chr3"</span> <span class="string">"chr4"</span> <span class="string">"chr5"</span> <span class="string">"chr6"</span></span><br><span class="line">&gt; head(seqlevels(x))</span><br><span class="line">[1] <span class="string">"chr1"</span> <span class="string">"chr2"</span> <span class="string">"chr3"</span> <span class="string">"chr4"</span> <span class="string">"chr5"</span> <span class="string">"chr6"</span></span><br><span class="line">&gt; head(seqlengths(x))</span><br><span class="line">     chr1      chr2      chr3      chr4      chr5      chr6 </span><br><span class="line">248956422 242193529 198295559 190214555 181538259 170805979 </span><br><span class="line">&gt; head(isCircular(x))</span><br><span class="line"> chr1  chr2  chr3  chr4  chr5  chr6 </span><br><span class="line">FALSE FALSE FALSE FALSE FALSE FALSE </span><br><span class="line">&gt; head(genome(x))</span><br><span class="line">  chr1   chr2   chr3   chr4   chr5   chr6 </span><br><span class="line"><span class="string">"hg38"</span> <span class="string">"hg38"</span> <span class="string">"hg38"</span> <span class="string">"hg38"</span> <span class="string">"hg38"</span> <span class="string">"hg38"</span></span><br></pre></td></tr></table></figure><p>也可以直接抽取其中的序列，比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; x[c(<span class="string">"chrY"</span>, <span class="string">"chr3"</span>, <span class="string">"chr1"</span>)]</span><br><span class="line">Seqinfo object with 3 sequences from hg38 genome:</span><br><span class="line">  seqnames seqlengths isCircular genome</span><br><span class="line">  chrY       57227415      FALSE   hg38</span><br><span class="line">  chr3      198295559      FALSE   hg38</span><br><span class="line">  chr1      248956422      FALSE   hg38</span><br></pre></td></tr></table></figure><p>或者，甚至可以自己定义：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; y &lt;- Seqinfo(seqnames=c(<span class="string">"chr1"</span>, <span class="string">"chr2"</span>, <span class="string">"chr3"</span>, <span class="string">"chrM"</span>),</span><br><span class="line">             seqlengths=c(100, 200, NA, 15),</span><br><span class="line">             isCircular=c(NA, FALSE, FALSE, TRUE),</span><br><span class="line">             genome=<span class="string">"toy"</span>)</span><br><span class="line">&gt; y</span><br><span class="line">Seqinfo object with 4 sequences (1 circular) from toy genome:</span><br><span class="line">  seqnames seqlengths isCircular genome</span><br><span class="line">  chr1            100         NA    toy</span><br><span class="line">  chr2            200      FALSE    toy</span><br><span class="line">  chr3             NA      FALSE    toy</span><br><span class="line">  chrM             15       TRUE    toy</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;seqinfo()是GenomeInfoDb程序的一个函数，用于获取基因组序列的基本信息，这个函数在运行时需要调用fetchExtendedChromInfoFromUCSC()，因此，需要保持网络连接。基本用法是&lt;/p&gt;
&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="生物信息" scheme="http://uteric.github.io/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="seqinfo" scheme="http://uteric.github.io/tags/seqinfo/"/>
    
  </entry>
  
  <entry>
    <title>在R中使用GenomeInfoDb获取染色体信息</title>
    <link href="http://uteric.github.io/CHIPSEQ/chrominfo/"/>
    <id>http://uteric.github.io/CHIPSEQ/chrominfo/</id>
    <published>2020-06-05T22:29:39.000Z</published>
    <updated>2020-06-05T22:29:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>在生物信息分析中，经常需要用到染色体的信息，可以使用GenomeInfoDb来获取，如下：</p><p>一、获取human的染色体信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line">library(GenomeInfoDb)</span><br><span class="line"></span><br><span class="line">&gt; hg_chrs = fetchExtendedChromInfoFromUCSC(<span class="string">'hg38'</span>)</span><br><span class="line">&gt; hg_chrs</span><br><span class="line">           UCSC_seqlevel UCSC_seqlength circular          NCBI_seqlevel       SequenceRole GenBankAccn</span><br><span class="line">1                   chr1      248956422    FALSE                      1 assembled-molecule  CM000663.2</span><br><span class="line">2                   chr2      242193529    FALSE                      2 assembled-molecule  CM000664.2</span><br><span class="line">3                   chr3      198295559    FALSE                      3 assembled-molecule  CM000665.2</span><br><span class="line">4                   chr4      190214555    FALSE                      4 assembled-molecule  CM000666.2</span><br><span class="line">5                   chr5      181538259    FALSE                      5 assembled-molecule  CM000667.2</span><br><span class="line">6                   chr6      170805979    FALSE                      6 assembled-molecule  CM000668.2</span><br><span class="line">7                   chr7      159345973    FALSE                      7 assembled-molecule  CM000669.2</span><br><span class="line">8                   chr8      145138636    FALSE                      8 assembled-molecule  CM000670.2</span><br><span class="line">9                   chr9      138394717    FALSE                      9 assembled-molecule  CM000671.2</span><br><span class="line">10                 chr10      133797422    FALSE                     10 assembled-molecule  CM000672.2</span><br><span class="line">11                 chr11      135086622    FALSE                     11 assembled-molecule  CM000673.2</span><br><span class="line">12                 chr12      133275309    FALSE                     12 assembled-molecule  CM000674.2</span><br><span class="line">13                 chr13      114364328    FALSE                     13 assembled-molecule  CM000675.2</span><br><span class="line">14                 chr14      107043718    FALSE                     14 assembled-molecule  CM000676.2</span><br><span class="line">15                 chr15      101991189    FALSE                     15 assembled-molecule  CM000677.2</span><br><span class="line">16                 chr16       90338345    FALSE                     16 assembled-molecule  CM000678.2</span><br><span class="line">17                 chr17       83257441    FALSE                     17 assembled-molecule  CM000679.2</span><br><span class="line">18                 chr18       80373285    FALSE                     18 assembled-molecule  CM000680.2</span><br><span class="line">19                 chr19       58617616    FALSE                     19 assembled-molecule  CM000681.2</span><br><span class="line">20                 chr20       64444167    FALSE                     20 assembled-molecule  CM000682.2</span><br><span class="line">21                 chr21       46709983    FALSE                     21 assembled-molecule  CM000683.2</span><br><span class="line">22                 chr22       50818468    FALSE                     22 assembled-molecule  CM000684.2</span><br><span class="line">23                  chrX      156040895    FALSE                      X assembled-molecule  CM000685.2</span><br><span class="line">24                  chrY       57227415    FALSE                      Y assembled-molecule  CM000686.2</span><br><span class="line">25                  chrM          16569     TRUE                     MT assembled-molecule    J01415.2</span><br><span class="line">26   chr1_GL383518v1_alt         182439    FALSE         HSCHR1_1_CTG31       alt-scaffold  GL383518.1</span><br><span class="line">27   chr1_GL383519v1_alt         110268    FALSE         HSCHR1_2_CTG31       alt-scaffold  GL383519.1</span><br><span class="line">28   chr1_GL383520v2_alt         366580    FALSE         HSCHR1_3_CTG31       alt-scaffold  GL383520.2</span><br><span class="line">29   chr1_KI270759v1_alt         425601    FALSE       HSCHR1_1_CTG32_1       alt-scaffold  KI270759.1</span><br><span class="line">30   chr1_KI270760v1_alt         109528    FALSE         HSCHR1_1_CTG11       alt-scaffold  KI270760.1</span><br><span class="line">31   chr1_KI270761v1_alt         165834    FALSE       HSCHR1_2_CTG32_1       alt-scaffold  KI270761.1</span><br><span class="line">32   chr1_KI270762v1_alt         354444    FALSE          HSCHR1_1_CTG3       alt-scaffold  KI270762.1</span><br><span class="line">33   chr1_KI270763v1_alt         911658    FALSE       HSCHR1_3_CTG32_1       alt-scaffold  KI270763.1</span><br><span class="line">34   chr1_KI270764v1_alt          50258    FALSE       HSCHR1_4_CTG32_1       alt-scaffold  KI270764.1</span><br><span class="line">35   chr1_KI270765v1_alt         185285    FALSE         HSCHR1_4_CTG31       alt-scaffold  KI270765.1</span><br><span class="line">36   chr1_KI270766v1_alt         256271    FALSE          HSCHR1_2_CTG3       alt-scaffold  KI270766.1</span><br><span class="line">37   chr1_KI270892v1_alt         162212    FALSE  HSCHR1_ALT2_1_CTG32_1       alt-scaffold  KI270892.1</span><br><span class="line">38   chr2_GL383521v1_alt         143390    FALSE          HSCHR2_1_CTG5       alt-scaffold  GL383521.1</span><br><span class="line">39   chr2_GL383522v1_alt         123821    FALSE        HSCHR2_1_CTG7_2       alt-scaffold  GL383522.1</span><br><span class="line">40   chr2_GL582966v2_alt          96131    FALSE        HSCHR2_2_CTG7_2       alt-scaffold  GL582966.2</span><br><span class="line">41   chr2_KI270767v1_alt         161578    FALSE         HSCHR2_1_CTG15       alt-scaffold  KI270767.1</span><br><span class="line">42   chr2_KI270768v1_alt         110099    FALSE        HSCHR2_3_CTG7_2       alt-scaffold  KI270768.1</span><br><span class="line">43   chr2_KI270769v1_alt         120616    FALSE          HSCHR2_1_CTG1       alt-scaffold  KI270769.1</span><br><span class="line">44   chr2_KI270770v1_alt         136240    FALSE          HSCHR2_2_CTG1       alt-scaffold  KI270770.1</span><br><span class="line">45   chr2_KI270771v1_alt         110395    FALSE        HSCHR2_4_CTG7_2       alt-scaffold  KI270771.1</span><br><span class="line">46   chr2_KI270772v1_alt         133041    FALSE          HSCHR2_1_CTG7       alt-scaffold  KI270772.1</span><br><span class="line">47   chr2_KI270773v1_alt          70887    FALSE          HSCHR2_3_CTG1       alt-scaffold  KI270773.1</span><br><span class="line">48   chr2_KI270774v1_alt         223625    FALSE          HSCHR2_4_CTG1       alt-scaffold  KI270774.1</span><br><span class="line">49   chr2_KI270775v1_alt         138019    FALSE        HSCHR2_5_CTG7_2       alt-scaffold  KI270775.1</span><br><span class="line">50   chr2_KI270776v1_alt         174166    FALSE         HSCHR2_3_CTG15       alt-scaffold  KI270776.1</span><br><span class="line">51   chr2_KI270893v1_alt         161218    FALSE         HSCHR2_2_CTG15       alt-scaffold  KI270893.1</span><br><span class="line">52   chr2_KI270894v1_alt         214158    FALSE          HSCHR2_2_CTG7       alt-scaffold  KI270894.1</span><br><span class="line">53   chr3_GL383526v1_alt         180671    FALSE        HSCHR3_1_CTG2_1       alt-scaffold  GL383526.1</span><br><span class="line">54   chr3_JH636055v2_alt         173151    FALSE          HSCHR3_1_CTG1       alt-scaffold  JH636055.2</span><br><span class="line">55   chr3_KI270777v1_alt         173649    FALSE        HSCHR3_2_CTG2_1       alt-scaffold  KI270777.1</span><br><span class="line">56   chr3_KI270778v1_alt         248252    FALSE        HSCHR3_3_CTG2_1       alt-scaffold  KI270778.1</span><br><span class="line">57   chr3_KI270779v1_alt         205312    FALSE          HSCHR3_1_CTG3       alt-scaffold  KI270779.1</span><br><span class="line">58   chr3_KI270780v1_alt         224108    FALSE        HSCHR3_4_CTG2_1       alt-scaffold  KI270780.1</span><br><span class="line">59   chr3_KI270781v1_alt         113034    FALSE        HSCHR3_5_CTG2_1       alt-scaffold  KI270781.1</span><br><span class="line">60   chr3_KI270782v1_alt         162429    FALSE          HSCHR3_2_CTG3       alt-scaffold  KI270782.1</span><br><span class="line">61   chr3_KI270783v1_alt         109187    FALSE          HSCHR3_3_CTG1       alt-scaffold  KI270783.1</span><br><span class="line">62   chr3_KI270784v1_alt         184404    FALSE          HSCHR3_9_CTG3       alt-scaffold  KI270784.1</span><br><span class="line">63   chr3_KI270895v1_alt         162896    FALSE          HSCHR3_3_CTG3       alt-scaffold  KI270895.1</span><br><span class="line">64   chr3_KI270924v1_alt         166540    FALSE          HSCHR3_4_CTG3       alt-scaffold  KI270924.1</span><br><span class="line">65   chr3_KI270934v1_alt         163458    FALSE          HSCHR3_5_CTG3       alt-scaffold  KI270934.1</span><br><span class="line">66   chr3_KI270935v1_alt         197351    FALSE          HSCHR3_6_CTG3       alt-scaffold  KI270935.1</span><br><span class="line">67   chr3_KI270936v1_alt         164170    FALSE          HSCHR3_7_CTG3       alt-scaffold  KI270936.1</span><br><span class="line">68   chr3_KI270937v1_alt         165607    FALSE          HSCHR3_8_CTG3       alt-scaffold  KI270937.1</span><br><span class="line">69   chr4_GL000257v2_alt         586476    FALSE          HSCHR4_1_CTG9       alt-scaffold  GL000257.2</span><br><span class="line">70   chr4_GL383527v1_alt         164536    FALSE         HSCHR4_1_CTG12       alt-scaffold  GL383527.1</span><br><span class="line">71   chr4_GL383528v1_alt         376187    FALSE          HSCHR4_1_CTG6       alt-scaffold  GL383528.1</span><br><span class="line">72   chr4_KI270785v1_alt         119912    FALSE         HSCHR4_2_CTG12       alt-scaffold  KI270785.1</span><br><span class="line">73   chr4_KI270786v1_alt         244096    FALSE         HSCHR4_3_CTG12       alt-scaffold  KI270786.1</span><br><span class="line">74   chr4_KI270787v1_alt         111943    FALSE        HSCHR4_1_CTG8_1       alt-scaffold  KI270787.1</span><br><span class="line">75   chr4_KI270788v1_alt         158965    FALSE         HSCHR4_4_CTG12       alt-scaffold  KI270788.1</span><br><span class="line">76   chr4_KI270789v1_alt         205944    FALSE         HSCHR4_5_CTG12       alt-scaffold  KI270789.1</span><br><span class="line">77   chr4_KI270790v1_alt         220246    FALSE          HSCHR4_1_CTG4       alt-scaffold  KI270790.1</span><br><span class="line">78   chr4_KI270896v1_alt         378547    FALSE         HSCHR4_6_CTG12       alt-scaffold  KI270896.1</span><br><span class="line">79   chr4_KI270925v1_alt         555799    FALSE         HSCHR4_7_CTG12       alt-scaffold  KI270925.1</span><br><span class="line">80   chr5_GL339449v2_alt        1612928    FALSE        HSCHR5_2_CTG1_1       alt-scaffold  GL339449.2</span><br><span class="line">81   chr5_GL383530v1_alt         101241    FALSE        HSCHR5_3_CTG1_1       alt-scaffold  GL383530.1</span><br><span class="line">82   chr5_GL383531v1_alt         173459    FALSE          HSCHR5_1_CTG5       alt-scaffold  GL383531.1</span><br><span class="line">83   chr5_GL383532v1_alt          82728    FALSE          HSCHR5_1_CTG1       alt-scaffold  GL383532.1</span><br><span class="line">84   chr5_GL949742v1_alt         226852    FALSE          HSCHR5_2_CTG1       alt-scaffold  GL949742.1</span><br><span class="line">85   chr5_KI270791v1_alt         195710    FALSE          HSCHR5_3_CTG1       alt-scaffold  KI270791.1</span><br><span class="line">86   chr5_KI270792v1_alt         179043    FALSE          HSCHR5_4_CTG1       alt-scaffold  KI270792.1</span><br><span class="line">87   chr5_KI270793v1_alt         126136    FALSE          HSCHR5_5_CTG1       alt-scaffold  KI270793.1</span><br><span class="line">88   chr5_KI270794v1_alt         164558    FALSE          HSCHR5_6_CTG1       alt-scaffold  KI270794.1</span><br><span class="line">89   chr5_KI270795v1_alt         131892    FALSE          HSCHR5_2_CTG5       alt-scaffold  KI270795.1</span><br><span class="line">90   chr5_KI270796v1_alt         172708    FALSE        HSCHR5_4_CTG1_1       alt-scaffold  KI270796.1</span><br><span class="line">91   chr5_KI270897v1_alt        1144418    FALSE        HSCHR5_1_CTG1_1       alt-scaffold  KI270897.1</span><br><span class="line">92   chr5_KI270898v1_alt         130957    FALSE          HSCHR5_3_CTG5       alt-scaffold  KI270898.1</span><br><span class="line">93   chr6_GL000250v2_alt        4672374    FALSE    HSCHR6_MHC_APD_CTG1       alt-scaffold  GL000250.2</span><br><span class="line">94   chr6_GL000251v2_alt        4795265    FALSE    HSCHR6_MHC_COX_CTG1       alt-scaffold  GL000251.2</span><br><span class="line">95   chr6_GL000252v2_alt        4604811    FALSE    HSCHR6_MHC_DBB_CTG1       alt-scaffold  GL000252.2</span><br><span class="line">96   chr6_GL000253v2_alt        4677643    FALSE   HSCHR6_MHC_MANN_CTG1       alt-scaffold  GL000253.2</span><br><span class="line">97   chr6_GL000254v2_alt        4827813    FALSE    HSCHR6_MHC_MCF_CTG1       alt-scaffold  GL000254.2</span><br><span class="line">98   chr6_GL000255v2_alt        4606388    FALSE    HSCHR6_MHC_QBL_CTG1       alt-scaffold  GL000255.2</span><br><span class="line">99   chr6_GL000256v2_alt        4929269    FALSE   HSCHR6_MHC_SSTO_CTG1       alt-scaffold  GL000256.2</span><br><span class="line">100  chr6_GL383533v1_alt         124736    FALSE          HSCHR6_1_CTG2       alt-scaffold  GL383533.1</span><br><span class="line">101  chr6_KB021644v2_alt         185823    FALSE          HSCHR6_1_CTG3       alt-scaffold  KB021644.2</span><br><span class="line">102  chr6_KI270758v1_alt          76752    FALSE          HSCHR6_8_CTG1       alt-scaffold  KI270758.1</span><br><span class="line">103  chr6_KI270797v1_alt         197536    FALSE          HSCHR6_1_CTG4       alt-scaffold  KI270797.1</span><br><span class="line">104  chr6_KI270798v1_alt         271782    FALSE          HSCHR6_1_CTG5       alt-scaffold  KI270798.1</span><br><span class="line">105  chr6_KI270799v1_alt         152148    FALSE          HSCHR6_1_CTG6       alt-scaffold  KI270799.1</span><br><span class="line">106  chr6_KI270800v1_alt         175808    FALSE          HSCHR6_1_CTG7       alt-scaffold  KI270800.1</span><br><span class="line">107  chr6_KI270801v1_alt         870480    FALSE          HSCHR6_1_CTG8       alt-scaffold  KI270801.1</span><br><span class="line">108  chr6_KI270802v1_alt          75005    FALSE          HSCHR6_1_CTG9       alt-scaffold  KI270802.1</span><br><span class="line">109  chr7_GL383534v2_alt         119183    FALSE          HSCHR7_1_CTG6       alt-scaffold  GL383534.2</span><br><span class="line">110  chr7_KI270803v1_alt        1111570    FALSE          HSCHR7_2_CTG6       alt-scaffold  KI270803.1</span><br><span class="line">111  chr7_KI270804v1_alt         157952    FALSE          HSCHR7_1_CTG1       alt-scaffold  KI270804.1</span><br><span class="line">112  chr7_KI270805v1_alt         209988    FALSE          HSCHR7_1_CTG7       alt-scaffold  KI270805.1</span><br><span class="line">113  chr7_KI270806v1_alt         158166    FALSE        HSCHR7_1_CTG4_4       alt-scaffold  KI270806.1</span><br><span class="line">114  chr7_KI270807v1_alt         126434    FALSE          HSCHR7_2_CTG7       alt-scaffold  KI270807.1</span><br><span class="line">115  chr7_KI270808v1_alt         271455    FALSE          HSCHR7_3_CTG6       alt-scaffold  KI270808.1</span><br><span class="line">116  chr7_KI270809v1_alt         209586    FALSE        HSCHR7_2_CTG4_4       alt-scaffold  KI270809.1</span><br><span class="line">117  chr7_KI270899v1_alt         190869    FALSE          HSCHR7_2_CTG1       alt-scaffold  KI270899.1</span><br><span class="line">118  chr8_KI270810v1_alt         374415    FALSE          HSCHR8_1_CTG7       alt-scaffold  KI270810.1</span><br><span class="line">119  chr8_KI270811v1_alt         292436    FALSE          HSCHR8_1_CTG1       alt-scaffold  KI270811.1</span><br><span class="line">120  chr8_KI270812v1_alt         282736    FALSE          HSCHR8_2_CTG1       alt-scaffold  KI270812.1</span><br><span class="line">121  chr8_KI270813v1_alt         300230    FALSE          HSCHR8_3_CTG1       alt-scaffold  KI270813.1</span><br><span class="line">122  chr8_KI270814v1_alt         141812    FALSE          HSCHR8_1_CTG6       alt-scaffold  KI270814.1</span><br><span class="line">123  chr8_KI270815v1_alt         132244    FALSE          HSCHR8_2_CTG7       alt-scaffold  KI270815.1</span><br><span class="line">124  chr8_KI270816v1_alt         305841    FALSE          HSCHR8_3_CTG7       alt-scaffold  KI270816.1</span><br><span class="line">125  chr8_KI270817v1_alt         158983    FALSE          HSCHR8_4_CTG7       alt-scaffold  KI270817.1</span><br><span class="line">126  chr8_KI270818v1_alt         145606    FALSE          HSCHR8_4_CTG1       alt-scaffold  KI270818.1</span><br><span class="line">127  chr8_KI270819v1_alt         133535    FALSE          HSCHR8_5_CTG7       alt-scaffold  KI270819.1</span><br><span class="line">128  chr8_KI270820v1_alt          36640    FALSE          HSCHR8_6_CTG7       alt-scaffold  KI270820.1</span><br><span class="line">129  chr8_KI270821v1_alt         985506    FALSE          HSCHR8_8_CTG1       alt-scaffold  KI270821.1</span><br><span class="line">130  chr8_KI270822v1_alt         624492    FALSE          HSCHR8_9_CTG1       alt-scaffold  KI270822.1</span><br><span class="line">131  chr8_KI270900v1_alt         318687    FALSE          HSCHR8_5_CTG1       alt-scaffold  KI270900.1</span><br><span class="line">132  chr8_KI270901v1_alt         136959    FALSE          HSCHR8_6_CTG1       alt-scaffold  KI270901.1</span><br><span class="line">133  chr8_KI270926v1_alt         229282    FALSE          HSCHR8_7_CTG1       alt-scaffold  KI270926.1</span><br><span class="line">134  chr9_GL383539v1_alt         162988    FALSE          HSCHR9_1_CTG1       alt-scaffold  GL383539.1</span><br><span class="line">135  chr9_GL383540v1_alt          71551    FALSE          HSCHR9_1_CTG2       alt-scaffold  GL383540.1</span><br><span class="line">136  chr9_GL383541v1_alt         171286    FALSE          HSCHR9_1_CTG3       alt-scaffold  GL383541.1</span><br><span class="line">137  chr9_GL383542v1_alt          60032    FALSE          HSCHR9_1_CTG4       alt-scaffold  GL383542.1</span><br><span class="line">138  chr9_KI270823v1_alt         439082    FALSE          HSCHR9_1_CTG5       alt-scaffold  KI270823.1</span><br><span class="line">139 chr10_GL383545v1_alt         179254    FALSE         HSCHR10_1_CTG1       alt-scaffold  GL383545.1</span><br><span class="line">140 chr10_GL383546v1_alt         309802    FALSE         HSCHR10_1_CTG2       alt-scaffold  GL383546.1</span><br><span class="line">141 chr10_KI270824v1_alt         181496    FALSE         HSCHR10_1_CTG3       alt-scaffold  KI270824.1</span><br><span class="line">142 chr10_KI270825v1_alt         188315    FALSE         HSCHR10_1_CTG4       alt-scaffold  KI270825.1</span><br><span class="line">143 chr11_GL383547v1_alt         154407    FALSE       HSCHR11_1_CTG1_1       alt-scaffold  GL383547.1</span><br><span class="line">144 chr11_JH159136v1_alt         200998    FALSE HG142_HG150_NOVEL_TEST       alt-scaffold  JH159136.1</span><br><span class="line">145 chr11_JH159137v1_alt         191409    FALSE       HG151_NOVEL_TEST       alt-scaffold  JH159137.1</span><br><span class="line">146 chr11_KI270826v1_alt         186169    FALSE         HSCHR11_1_CTG2       alt-scaffold  KI270826.1</span><br><span class="line">147 chr11_KI270827v1_alt          67707    FALSE         HSCHR11_1_CTG3       alt-scaffold  KI270827.1</span><br><span class="line">148 chr11_KI270829v1_alt         204059    FALSE         HSCHR11_1_CTG5       alt-scaffold  KI270829.1</span><br><span class="line">149 chr11_KI270830v1_alt         177092    FALSE         HSCHR11_1_CTG6       alt-scaffold  KI270830.1</span><br><span class="line">150 chr11_KI270831v1_alt         296895    FALSE         HSCHR11_1_CTG7       alt-scaffold  KI270831.1</span><br><span class="line">151 chr11_KI270832v1_alt         210133    FALSE         HSCHR11_1_CTG8       alt-scaffold  KI270832.1</span><br><span class="line">152 chr11_KI270902v1_alt         106711    FALSE         HSCHR11_2_CTG1       alt-scaffold  KI270902.1</span><br><span class="line">153 chr11_KI270903v1_alt         214625    FALSE       HSCHR11_2_CTG1_1       alt-scaffold  KI270903.1</span><br><span class="line">154 chr11_KI270927v1_alt         218612    FALSE         HSCHR11_3_CTG1       alt-scaffold  KI270927.1</span><br><span class="line">155 chr12_GL383549v1_alt         120804    FALSE         HSCHR12_1_CTG2       alt-scaffold  GL383549.1</span><br><span class="line">156 chr12_GL383550v2_alt         169178    FALSE       HSCHR12_1_CTG2_1       alt-scaffold  GL383550.2</span><br><span class="line">157 chr12_GL383551v1_alt         184319    FALSE       HSCHR12_4_CTG2_1       alt-scaffold  GL383551.1</span><br><span class="line">158 chr12_GL383552v1_alt         138655    FALSE       HSCHR12_2_CTG2_1       alt-scaffold  GL383552.1</span><br><span class="line">159 chr12_GL383553v2_alt         152874    FALSE       HSCHR12_3_CTG2_1       alt-scaffold  GL383553.2</span><br><span class="line">160 chr12_GL877875v1_alt         167313    FALSE         HSCHR12_1_CTG1       alt-scaffold  GL877875.1</span><br><span class="line">161 chr12_GL877876v1_alt         408271    FALSE         HSCHR12_2_CTG2       alt-scaffold  GL877876.1</span><br><span class="line">162 chr12_KI270833v1_alt          76061    FALSE       HSCHR12_5_CTG2_1       alt-scaffold  KI270833.1</span><br><span class="line">163 chr12_KI270834v1_alt         119498    FALSE       HSCHR12_6_CTG2_1       alt-scaffold  KI270834.1</span><br><span class="line">164 chr12_KI270835v1_alt         238139    FALSE         HSCHR12_4_CTG2       alt-scaffold  KI270835.1</span><br><span class="line">165 chr12_KI270836v1_alt          56134    FALSE       HSCHR12_7_CTG2_1       alt-scaffold  KI270836.1</span><br><span class="line">166 chr12_KI270837v1_alt          40090    FALSE         HSCHR12_5_CTG2       alt-scaffold  KI270837.1</span><br><span class="line"> [ reached <span class="string">'max'</span> / getOption(<span class="string">"max.print"</span>) -- omitted 289 rows ]</span><br><span class="line"></span><br><span class="line">&gt; class(hg_chrs)</span><br><span class="line">[1] <span class="string">"data.frame"</span></span><br><span class="line"></span><br><span class="line">&gt; chr &lt;- subset(hg_chrs[1:24,]) <span class="comment"># 一般而言，我们只需要chr1-chr22 &amp; chrX &amp; chrY即可</span></span><br><span class="line">&gt; chr</span><br><span class="line">   UCSC_seqlevel UCSC_seqlength circular NCBI_seqlevel       SequenceRole GenBankAccn</span><br><span class="line">1           chr1      248956422    FALSE             1 assembled-molecule  CM000663.2</span><br><span class="line">2           chr2      242193529    FALSE             2 assembled-molecule  CM000664.2</span><br><span class="line">3           chr3      198295559    FALSE             3 assembled-molecule  CM000665.2</span><br><span class="line">4           chr4      190214555    FALSE             4 assembled-molecule  CM000666.2</span><br><span class="line">5           chr5      181538259    FALSE             5 assembled-molecule  CM000667.2</span><br><span class="line">6           chr6      170805979    FALSE             6 assembled-molecule  CM000668.2</span><br><span class="line">7           chr7      159345973    FALSE             7 assembled-molecule  CM000669.2</span><br><span class="line">8           chr8      145138636    FALSE             8 assembled-molecule  CM000670.2</span><br><span class="line">9           chr9      138394717    FALSE             9 assembled-molecule  CM000671.2</span><br><span class="line">10         chr10      133797422    FALSE            10 assembled-molecule  CM000672.2</span><br><span class="line">11         chr11      135086622    FALSE            11 assembled-molecule  CM000673.2</span><br><span class="line">12         chr12      133275309    FALSE            12 assembled-molecule  CM000674.2</span><br><span class="line">13         chr13      114364328    FALSE            13 assembled-molecule  CM000675.2</span><br><span class="line">14         chr14      107043718    FALSE            14 assembled-molecule  CM000676.2</span><br><span class="line">15         chr15      101991189    FALSE            15 assembled-molecule  CM000677.2</span><br><span class="line">16         chr16       90338345    FALSE            16 assembled-molecule  CM000678.2</span><br><span class="line">17         chr17       83257441    FALSE            17 assembled-molecule  CM000679.2</span><br><span class="line">18         chr18       80373285    FALSE            18 assembled-molecule  CM000680.2</span><br><span class="line">19         chr19       58617616    FALSE            19 assembled-molecule  CM000681.2</span><br><span class="line">20         chr20       64444167    FALSE            20 assembled-molecule  CM000682.2</span><br><span class="line">21         chr21       46709983    FALSE            21 assembled-molecule  CM000683.2</span><br><span class="line">22         chr22       50818468    FALSE            22 assembled-molecule  CM000684.2</span><br><span class="line">23          chrX      156040895    FALSE             X assembled-molecule  CM000685.2</span><br><span class="line">24          chrY       57227415    FALSE             Y assembled-molecule  CM000686.2</span><br></pre></td></tr></table></figure><p>二、获取mouse的染色体信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&gt; mm_chrs = fetchExtendedChromInfoFromUCSC(<span class="string">'mm10'</span>)</span><br><span class="line">&gt; mm_chrs</span><br><span class="line">          UCSC_seqlevel UCSC_seqlength circular      NCBI_seqlevel         SequenceRole GenBankAccn</span><br><span class="line">1                  chr1      195471971    FALSE                  1   assembled-molecule  CM000994.2</span><br><span class="line">2                  chr2      182113224    FALSE                  2   assembled-molecule  CM000995.2</span><br><span class="line">3                  chr3      160039680    FALSE                  3   assembled-molecule  CM000996.2</span><br><span class="line">4                  chr4      156508116    FALSE                  4   assembled-molecule  CM000997.2</span><br><span class="line">5                  chr5      151834684    FALSE                  5   assembled-molecule  CM000998.2</span><br><span class="line">6                  chr6      149736546    FALSE                  6   assembled-molecule  CM000999.2</span><br><span class="line">7                  chr7      145441459    FALSE                  7   assembled-molecule  CM001000.2</span><br><span class="line">8                  chr8      129401213    FALSE                  8   assembled-molecule  CM001001.2</span><br><span class="line">9                  chr9      124595110    FALSE                  9   assembled-molecule  CM001002.2</span><br><span class="line">10                chr10      130694993    FALSE                 10   assembled-molecule  CM001003.2</span><br><span class="line">11                chr11      122082543    FALSE                 11   assembled-molecule  CM001004.2</span><br><span class="line">12                chr12      120129022    FALSE                 12   assembled-molecule  CM001005.2</span><br><span class="line">13                chr13      120421639    FALSE                 13   assembled-molecule  CM001006.2</span><br><span class="line">14                chr14      124902244    FALSE                 14   assembled-molecule  CM001007.2</span><br><span class="line">15                chr15      104043685    FALSE                 15   assembled-molecule  CM001008.2</span><br><span class="line">16                chr16       98207768    FALSE                 16   assembled-molecule  CM001009.2</span><br><span class="line">17                chr17       94987271    FALSE                 17   assembled-molecule  CM001010.2</span><br><span class="line">18                chr18       90702639    FALSE                 18   assembled-molecule  CM001011.2</span><br><span class="line">19                chr19       61431566    FALSE                 19   assembled-molecule  CM001012.2</span><br><span class="line">20                 chrX      171031299    FALSE                  X   assembled-molecule  CM001013.2</span><br><span class="line">21                 chrY       91744698    FALSE                  Y   assembled-molecule  CM001014.2</span><br><span class="line">22                 chrM          16299     TRUE                 MT   assembled-molecule  AY172335.1</span><br><span class="line">23 chr1_GL456210_random         169725    FALSE MMCHR1_RANDOM_CTG1 unlocalized-scaffold  GL456210.1</span><br><span class="line">24 chr1_GL456211_random         241735    FALSE MMCHR1_RANDOM_CTG2 unlocalized-scaffold  GL456211.1</span><br><span class="line">25 chr1_GL456212_random         153618    FALSE MMCHR1_RANDOM_CTG3 unlocalized-scaffold  GL456212.1</span><br><span class="line">26 chr1_GL456213_random          39340    FALSE MMCHR1_RANDOM_CTG4 unlocalized-scaffold  GL456213.1</span><br><span class="line">27 chr1_GL456221_random         206961    FALSE MMCHR1_RANDOM_CTG5 unlocalized-scaffold  GL456221.1</span><br><span class="line">28 chr4_GL456216_random          66673    FALSE      MMCHR4UN_CTG1 unlocalized-scaffold  GL456216.1</span><br><span class="line">29 chr4_GL456350_random         227966    FALSE      MMCHR4UN_CTG3 unlocalized-scaffold  GL456350.1</span><br><span class="line">30 chr4_JH584292_random          14945    FALSE      MMCHR4UN_CTG2 unlocalized-scaffold  JH584292.1</span><br><span class="line">31 chr4_JH584293_random         207968    FALSE      MMCHR4UN_CTG4 unlocalized-scaffold  JH584293.1</span><br><span class="line">32 chr4_JH584294_random         191905    FALSE      MMCHR4UN_CTG5 unlocalized-scaffold  JH584294.1</span><br><span class="line">33 chr4_JH584295_random           1976    FALSE      MMCHR4UN_CTG6 unlocalized-scaffold  JH584295.1</span><br><span class="line">34 chr5_GL456354_random         195993    FALSE MMCHR5_RANDOM_CTG4 unlocalized-scaffold  GL456354.1</span><br><span class="line">35 chr5_JH584296_random         199368    FALSE MMCHR5_RANDOM_CTG1 unlocalized-scaffold  JH584296.1</span><br><span class="line">36 chr5_JH584297_random         205776    FALSE MMCHR5_RANDOM_CTG2 unlocalized-scaffold  JH584297.1</span><br><span class="line">37 chr5_JH584298_random         184189    FALSE MMCHR5_RANDOM_CTG3 unlocalized-scaffold  JH584298.1</span><br><span class="line">38 chr5_JH584299_random         953012    FALSE MMCHR5_RANDOM_CTG5 unlocalized-scaffold  JH584299.1</span><br><span class="line">39 chr7_GL456219_random         175968    FALSE MMCHR7_RANDOM_CTG1 unlocalized-scaffold  GL456219.1</span><br><span class="line">40 chrX_GL456233_random         336933    FALSE MMCHRX_RANDOM_CTG2 unlocalized-scaffold  GL456233.1</span><br><span class="line">41 chrY_JH584300_random         182347    FALSE       MMCHRY_CTGU1 unlocalized-scaffold  JH584300.1</span><br><span class="line">42 chrY_JH584301_random         259875    FALSE       MMCHRY_CTGU2 unlocalized-scaffold  JH584301.1</span><br><span class="line">43 chrY_JH584302_random         155838    FALSE       MMCHRY_CTGU3 unlocalized-scaffold  JH584302.1</span><br><span class="line">44 chrY_JH584303_random         158099    FALSE       MMCHRY_CTGU4 unlocalized-scaffold  JH584303.1</span><br><span class="line">45       chrUn_GL456239          40056    FALSE       MSCHRUN_CTG1    unplaced-scaffold  GL456239.1</span><br><span class="line">46       chrUn_GL456359          22974    FALSE      MSCHRUN_CTG13    unplaced-scaffold  GL456359.1</span><br><span class="line">47       chrUn_GL456360          31704    FALSE      MSCHRUN_CTG14    unplaced-scaffold  GL456360.1</span><br><span class="line">48       chrUn_GL456366          47073    FALSE      MSCHRUN_CTG21    unplaced-scaffold  GL456366.1</span><br><span class="line">49       chrUn_GL456367          42057    FALSE       MSCHRUN_CTG2    unplaced-scaffold  GL456367.1</span><br><span class="line">50       chrUn_GL456368          20208    FALSE      MSCHRUN_CTG22    unplaced-scaffold  GL456368.1</span><br><span class="line">51       chrUn_GL456370          26764    FALSE      MSCHRUN_CTG19    unplaced-scaffold  GL456370.1</span><br><span class="line">52       chrUn_GL456372          28664    FALSE      MSCHRUN_CTG16    unplaced-scaffold  GL456372.1</span><br><span class="line">53       chrUn_GL456378          31602    FALSE       MSCHRUN_CTG3    unplaced-scaffold  GL456378.1</span><br><span class="line">54       chrUn_GL456379          72385    FALSE      MSCHRUN_CTG20    unplaced-scaffold  GL456379.1</span><br><span class="line">55       chrUn_GL456381          25871    FALSE       MSCHRUN_CTG4    unplaced-scaffold  GL456381.1</span><br><span class="line">56       chrUn_GL456382          23158    FALSE       MSCHRUN_CTG5    unplaced-scaffold  GL456382.1</span><br><span class="line">57       chrUn_GL456383          38659    FALSE       MSCHRUN_CTG6    unplaced-scaffold  GL456383.1</span><br><span class="line">58       chrUn_GL456385          35240    FALSE       MSCHRUN_CTG7    unplaced-scaffold  GL456385.1</span><br><span class="line">59       chrUn_GL456387          24685    FALSE      MSCHRUN_CTG17    unplaced-scaffold  GL456387.1</span><br><span class="line">60       chrUn_GL456389          28772    FALSE      MSCHRUN_CTG18    unplaced-scaffold  GL456389.1</span><br><span class="line">61       chrUn_GL456390          24668    FALSE       MSCHRUN_CTG9    unplaced-scaffold  GL456390.1</span><br><span class="line">62       chrUn_GL456392          23629    FALSE      MSCHRUN_CTG10    unplaced-scaffold  GL456392.1</span><br><span class="line">63       chrUn_GL456393          55711    FALSE      MSCHRUN_CTG11    unplaced-scaffold  GL456393.1</span><br><span class="line">64       chrUn_GL456394          24323    FALSE      MSCHRUN_CTG12    unplaced-scaffold  GL456394.1</span><br><span class="line">65       chrUn_GL456396          21240    FALSE      MSCHRUN_CTG15    unplaced-scaffold  GL456396.1</span><br><span class="line">66       chrUn_JH584304         114452    FALSE      MSCHRUN_CTG23    unplaced-scaffold  JH584304.1</span><br><span class="line"></span><br><span class="line">&gt; mmchr &lt;- subset(hg_chrs[1:21,])</span><br><span class="line">&gt; mmchr</span><br><span class="line">   UCSC_seqlevel UCSC_seqlength circular NCBI_seqlevel       SequenceRole GenBankAccn</span><br><span class="line">1           chr1      248956422    FALSE             1 assembled-molecule  CM000663.2</span><br><span class="line">2           chr2      242193529    FALSE             2 assembled-molecule  CM000664.2</span><br><span class="line">3           chr3      198295559    FALSE             3 assembled-molecule  CM000665.2</span><br><span class="line">4           chr4      190214555    FALSE             4 assembled-molecule  CM000666.2</span><br><span class="line">5           chr5      181538259    FALSE             5 assembled-molecule  CM000667.2</span><br><span class="line">6           chr6      170805979    FALSE             6 assembled-molecule  CM000668.2</span><br><span class="line">7           chr7      159345973    FALSE             7 assembled-molecule  CM000669.2</span><br><span class="line">8           chr8      145138636    FALSE             8 assembled-molecule  CM000670.2</span><br><span class="line">9           chr9      138394717    FALSE             9 assembled-molecule  CM000671.2</span><br><span class="line">10         chr10      133797422    FALSE            10 assembled-molecule  CM000672.2</span><br><span class="line">11         chr11      135086622    FALSE            11 assembled-molecule  CM000673.2</span><br><span class="line">12         chr12      133275309    FALSE            12 assembled-molecule  CM000674.2</span><br><span class="line">13         chr13      114364328    FALSE            13 assembled-molecule  CM000675.2</span><br><span class="line">14         chr14      107043718    FALSE            14 assembled-molecule  CM000676.2</span><br><span class="line">15         chr15      101991189    FALSE            15 assembled-molecule  CM000677.2</span><br><span class="line">16         chr16       90338345    FALSE            16 assembled-molecule  CM000678.2</span><br><span class="line">17         chr17       83257441    FALSE            17 assembled-molecule  CM000679.2</span><br><span class="line">18         chr18       80373285    FALSE            18 assembled-molecule  CM000680.2</span><br><span class="line">19         chr19       58617616    FALSE            19 assembled-molecule  CM000681.2</span><br><span class="line">20         chr20       64444167    FALSE            20 assembled-molecule  CM000682.2</span><br><span class="line">21         chr21       46709983    FALSE            21 assembled-molecule  CM000683.2</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在生物信息分析中，经常需要用到染色体的信息，可以使用GenomeInfoDb来获取，如下：&lt;/p&gt;
&lt;p&gt;一、获取human的染色体信息&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
      <category term="生物信息" scheme="http://uteric.github.io/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="chromsome" scheme="http://uteric.github.io/tags/chromsome/"/>
    
  </entry>
  
  <entry>
    <title>在R中使用dnorm()作正态分布曲线</title>
    <link href="http://uteric.github.io/R/R_dnorm/"/>
    <id>http://uteric.github.io/R/R_dnorm/</id>
    <published>2020-06-04T15:05:59.000Z</published>
    <updated>2020-06-04T15:05:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>在R中，dnorm()是正态分布的概率密度函数，d代表density，norm代表正态分布，返回给定x在标准正态分布下的概率密度。</p><p>对于一个给定的正态分布，X ∼ N(μ,σ2)，μ代表均值，σ2代表方差，dnorm()可以计算给定x下的概率密度，即P(X&lt;=x|μ=a,σ=b)，比如，对于标准正态分布 X ∼ N(0,1)，要计算x=1时的概率密度，即dnorm(1)=P(X&lt;=1|μ=0,σ=1)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; dnorm(1) <span class="comment"># 默认为标准正态分布，故亦可以写作下面这种形式</span></span><br><span class="line">[1] 0.2419707</span><br><span class="line">&gt; dnorm(1,mean=0,sd=1)</span><br><span class="line">[1] 0.2419707</span><br></pre></td></tr></table></figure><p>根据dnorm()的性质，我们可以利用dnorm()来绘制正态分布曲线。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- rnorm(100)</span><br><span class="line">&gt; x</span><br><span class="line">  [1]  0.067624027  0.446922747 -0.779610273  1.019910795 -0.611558691 -0.042208614  1.057542821</span><br><span class="line">  [8]  0.168769225  0.292759062  0.069769967 -1.884478653  0.210965341  0.487999663  0.079415785</span><br><span class="line"> [15]  0.547819110  1.218320307 -0.829277733 -0.180677502 -0.722302587 -0.275027962  1.147344053</span><br><span class="line"> [22]  0.057776822  0.620030502 -0.006237543  0.150433226  1.259527763 -0.828779833 -1.581627780</span><br><span class="line"> [29] -0.291715425 -0.275497338 -0.531884989 -0.022351625 -0.213368332 -0.661274484  1.052272355</span><br><span class="line"> [36] -1.491285952 -0.490500385 -0.289660378 -1.223280167 -0.407513962 -0.951917561  0.880820238</span><br><span class="line"> [43]  0.193889773 -1.401977549 -0.571268441 -0.680519505 -0.593670209  1.149960529 -0.366887812</span><br><span class="line"> [50] -1.401057013  0.520541718 -1.871404951 -1.529649961  0.380110232 -0.646800728 -1.745816661</span><br><span class="line"> [57] -1.658797701 -0.809181810 -1.228480576 -0.228532084  1.529535839  0.064914455  0.243817469</span><br><span class="line"> [64]  0.623980927 -1.621383762 -1.790768314  0.816892971 -0.278317894 -0.090169109  0.350612752</span><br><span class="line"> [71]  2.134799802 -0.105936765 -0.606534781 -1.037662539 -0.956454603 -1.271927292 -0.787623941</span><br><span class="line"> [78] -0.001952851 -0.906800210  2.335462375 -0.778546226  0.520102904 -1.076871213  2.310164950</span><br><span class="line"> [85]  0.001740659 -0.808784690  0.750435109 -0.453002059  2.304120907  0.192156923  0.659194960</span><br><span class="line"> [92] -0.807322096 -0.976952123 -0.392610629 -1.173103468  2.769663266 -0.085446868  2.340928468</span><br><span class="line"> [99]  0.309876876 -1.262045807</span><br><span class="line">&gt; x &lt;- x[order(x)]</span><br><span class="line">&gt; x</span><br><span class="line">  [1] -1.884478653 -1.871404951 -1.790768314 -1.745816661 -1.658797701 -1.621383762 -1.581627780</span><br><span class="line">  [8] -1.529649961 -1.491285952 -1.401977549 -1.401057013 -1.271927292 -1.262045807 -1.228480576</span><br><span class="line"> [15] -1.223280167 -1.173103468 -1.076871213 -1.037662539 -0.976952123 -0.956454603 -0.951917561</span><br><span class="line"> [22] -0.906800210 -0.829277733 -0.828779833 -0.809181810 -0.808784690 -0.807322096 -0.787623941</span><br><span class="line"> [29] -0.779610273 -0.778546226 -0.722302587 -0.680519505 -0.661274484 -0.646800728 -0.611558691</span><br><span class="line"> [36] -0.606534781 -0.593670209 -0.571268441 -0.531884989 -0.490500385 -0.453002059 -0.407513962</span><br><span class="line"> [43] -0.392610629 -0.366887812 -0.291715425 -0.289660378 -0.278317894 -0.275497338 -0.275027962</span><br><span class="line"> [50] -0.228532084 -0.213368332 -0.180677502 -0.105936765 -0.090169109 -0.085446868 -0.042208614</span><br><span class="line"> [57] -0.022351625 -0.006237543 -0.001952851  0.001740659  0.057776822  0.064914455  0.067624027</span><br><span class="line"> [64]  0.069769967  0.079415785  0.150433226  0.168769225  0.192156923  0.193889773  0.210965341</span><br><span class="line"> [71]  0.243817469  0.292759062  0.309876876  0.350612752  0.380110232  0.446922747  0.487999663</span><br><span class="line"> [78]  0.520102904  0.520541718  0.547819110  0.620030502  0.623980927  0.659194960  0.750435109</span><br><span class="line"> [85]  0.816892971  0.880820238  1.019910795  1.052272355  1.057542821  1.147344053  1.149960529</span><br><span class="line"> [92]  1.218320307  1.259527763  1.529535839  2.134799802  2.304120907  2.310164950  2.335462375</span><br><span class="line"> [99]  2.340928468  2.769663266</span><br><span class="line">&gt; y &lt;- dnorm(x)</span><br><span class="line">&gt; y</span><br><span class="line">  [1] 0.06757154 0.06925106 0.08026962 0.08691050 0.10078725 0.10716547 0.11421053 0.12382908 0.13121666</span><br><span class="line"> [10] 0.14931322 0.14950598 0.17766810 0.17990644 0.18758545 0.18878514 0.20048328 0.22340604 0.23286176</span><br><span class="line"> [19] 0.24754664 0.25250071 0.25359620 0.26445562 0.28286393 0.28298071 0.28755931 0.28765171 0.28799187</span><br><span class="line"> [28] 0.29255158 0.29439449 0.29463863 0.30734049 0.31648104 0.32059376 0.32364303 0.33089951 0.33191354</span><br><span class="line"> [37] 0.33448585 0.33887894 0.34632094 0.35372559 0.36003862 0.36715457 0.36935018 0.37297575 0.38232376</span><br><span class="line"> [46] 0.38255222 0.38378647 0.38408633 0.38413596 0.38865936 0.38996373 0.39248353 0.39670996 0.39732378</span><br><span class="line"> [55] 0.39748856 0.39858707 0.39884264 0.39893452 0.39894152 0.39894168 0.39827697 0.39810262 0.39803114</span><br><span class="line"> [64] 0.39797247 0.39768622 0.39445366 0.39330100 0.39164452 0.39151355 0.39016259 0.38725882 0.38220718</span><br><span class="line"> [73] 0.38024086 0.37515981 0.37113833 0.36102484 0.35415863 0.34847386 0.34839431 0.34335464 0.32917774</span><br><span class="line"> [82] 0.32836988 0.32103423 0.30103915 0.28576211 0.27066844 0.23715353 0.22933371 0.22806219 0.20656550</span><br><span class="line"> [91] 0.20594562 0.18993171 0.18047850 0.12385070 0.04085919 0.02805958 0.02767102 0.02609189 0.02576054</span><br><span class="line">[100] 0.00861323</span><br><span class="line"></span><br><span class="line">plot(x,y,<span class="built_in">type</span>=<span class="string">"l"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/dnorm01.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在R中，dnorm()是正态分布的概率密度函数，d代表density，norm代表正态分布，返回给定x在标准正态分布下的概率密度。&lt;/p&gt;
&lt;p&gt;对于一个给定的正态分布，X ∼ N(μ,σ2)，μ代表均值，σ2代表方差，dnorm()可以计算给定x下的概率密度，即P(X&amp;l
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>在R中绘制正态分布曲线</title>
    <link href="http://uteric.github.io/R/R_rnorm/"/>
    <id>http://uteric.github.io/R/R_rnorm/</id>
    <published>2020-06-03T03:27:19.000Z</published>
    <updated>2020-06-03T03:27:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>在R中，绘制正态分布曲线方法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- rnorm(1000000,mean=0,sd=1)</span><br><span class="line">plot(density(x),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>,col=<span class="string">"blue"</span>,lwd=2,main=<span class="string">""</span>,bty=<span class="string">"n"</span>,yaxt=<span class="string">"n"</span>,xaxt=<span class="string">"n"</span>,ylim=c(0,0.42),xlim=c(-5,5))</span><br><span class="line">axis(2,at=c(0.0,0.1,0.2,0.3,0.4))</span><br><span class="line">axis(1,at=c(-4,-2,0,2,4))</span><br><span class="line">abline(v=0,lty=2)</span><br></pre></td></tr></table></figure><p><img src="/images/R/rnorm01.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在R中，绘制正态分布曲线方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>在R中使用runif()生成随机数</title>
    <link href="http://uteric.github.io/R/R_runif/"/>
    <id>http://uteric.github.io/R/R_runif/</id>
    <published>2020-06-02T17:31:44.000Z</published>
    <updated>2020-06-02T17:31:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>在R中，可以使用runif()来生成随机数，并且，可以通过使用set.seed()设置随机数种子来生成相同的随机数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt; runif(10)</span><br><span class="line"> [1] 0.88128755 0.05515884 0.49174723 0.58947710 0.26055370 0.42419775 0.91291115 0.53224161 0.59857483</span><br><span class="line">[10] 0.45912772</span><br><span class="line">&gt; runif(10)</span><br><span class="line"> [1] 0.11450970 0.43747334 0.42295942 0.97372512 0.08007066 0.42114884 0.65166254 0.63352907 0.46452289</span><br><span class="line">[10] 0.55470857</span><br><span class="line"></span><br><span class="line">&gt; set.seed(25)</span><br><span class="line">&gt; runif(10)</span><br><span class="line"> [1] 0.41611843 0.69476365 0.14880064 0.89738505 0.12439208 0.98511572 0.62609617 0.33753837 0.06679038</span><br><span class="line">[10] 0.28214161</span><br><span class="line"></span><br><span class="line">&gt; set.seed(25)</span><br><span class="line">&gt; runif(10)</span><br><span class="line"> [1] 0.41611843 0.69476365 0.14880064 0.89738505 0.12439208 0.98511572 0.62609617 0.33753837 0.06679038</span><br><span class="line">[10] 0.28214161</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在R中，可以使用runif()来生成随机数，并且，可以通过使用set.seed()设置随机数种子来生成相同的随机数。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>在R中计算四分位数</title>
    <link href="http://uteric.github.io/R/R_quantile/"/>
    <id>http://uteric.github.io/R/R_quantile/</id>
    <published>2020-06-02T16:41:48.000Z</published>
    <updated>2020-06-02T16:41:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>在统计中，方差或标准差是最常使用的衡量数据离散程度的指标，但是方差或标准差有其固有缺陷，当数据中存在离群值（outlier）时，即使outlier数量极少，也会使方差或标准差极度偏移，因此，我们需要一种统计工具来反映大部分数据分布在哪里，最常用的方法是计算75%与25%之间的差别，这称为四分位间距（interquartile range）。在R中，可以使用IQR()计算四分位间距，使用quantile()来计算向量的所有分位数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- rnorm(100,mean=5,sd=1.2)</span><br><span class="line">&gt; x</span><br><span class="line">  [1] 3.344860 4.314303 5.259742 6.642526 6.458214 5.030996 5.526538 3.866030 5.152883 5.135912 6.010579</span><br><span class="line"> [12] 5.199178 4.673258 5.563149 5.663807 2.268774 3.974171 7.570706 5.354230 3.441178 5.336142 5.397549</span><br><span class="line"> [23] 6.295206 5.978662 5.389794 5.133840 5.752089 4.971203 5.146819 4.765819 7.122367 5.416928 5.400580</span><br><span class="line"> [34] 2.070468 4.243874 6.995033 5.854267 6.015518 5.375023 5.161929 2.867692 4.602293 4.931720 3.562440</span><br><span class="line"> [45] 5.203235 5.592098 5.646586 7.694937 4.820110 6.684675 4.165650 5.176470 5.430320 5.406880 6.836335</span><br><span class="line"> [56] 5.699121 6.424420 3.639120 6.670612 3.697681 2.813417 3.199165 4.858059 6.516864 4.165146 5.899056</span><br><span class="line"> [67] 4.145372 5.538209 5.269511 6.678199 4.815026 4.617706 4.923228 4.281446 4.346960 6.630204 4.452420</span><br><span class="line"> [78] 4.746863 4.586939 4.630323 4.922966 5.327350 3.658732 5.610512 3.980912 6.549318 7.398793 6.176837</span><br><span class="line"> [89] 4.913479 4.437707 6.204448 4.120004 5.745570 4.143726 3.151242 4.422654 5.892240 5.678614 3.890303</span><br><span class="line">[100] 5.226019</span><br><span class="line"></span><br><span class="line">&gt; IQR(x)</span><br><span class="line">[1] 1.343469</span><br><span class="line"></span><br><span class="line">&gt; quantile(x)</span><br><span class="line">      0%      25%      50%      75%     100% </span><br><span class="line">2.070468 4.403730 5.187824 5.747200 7.694937</span><br><span class="line"></span><br><span class="line">&gt; boxplot(x,horizontal = T)</span><br></pre></td></tr></table></figure><p><img src="/images/R/quantile01.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在统计中，方差或标准差是最常使用的衡量数据离散程度的指标，但是方差或标准差有其固有缺陷，当数据中存在离群值（outlier）时，即使outlier数量极少，也会使方差或标准差极度偏移，因此，我们需要一种统计工具来反映大部分数据分布在哪里，最常用的方法是计算75%与25%之间
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>在R中使用wilcox.test做非正态分布检验</title>
    <link href="http://uteric.github.io/R/R_wilcoxtest/"/>
    <id>http://uteric.github.io/R/R_wilcoxtest/</id>
    <published>2020-06-01T03:03:00.000Z</published>
    <updated>2020-06-01T03:03:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>对于符合正态分布的两个样本进行显著性检验时，可以使用t.test()；若是不确定两个样本是否符合正态分布假设时，可以执行Mann-Whitney-Wilcoxon Test，函数为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wilcox.test(x,y,paired = TRUE, alternative = <span class="string">"two.sided"</span>)</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; wilcox.test(mtcars<span class="variable">$gear</span>,mtcars<span class="variable">$carb</span>,paired = TRUE, alternative = <span class="string">"two.sided"</span>)</span><br><span class="line"></span><br><span class="line">Wilcoxon signed rank <span class="built_in">test</span> with continuity correction</span><br><span class="line"></span><br><span class="line">data:  mtcars<span class="variable">$gear</span> and mtcars<span class="variable">$carb</span></span><br><span class="line">V = 267, p-value = 0.004493</span><br><span class="line">alternative hypothesis: <span class="literal">true</span> location <span class="built_in">shift</span> is not equal to 0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;对于符合正态分布的两个样本进行显著性检验时，可以使用t.test()；若是不确定两个样本是否符合正态分布假设时，可以执行Mann-Whitney-Wilcoxon Test，函数为&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>在R中计算标准差与方差</title>
    <link href="http://uteric.github.io/R/R_variance/"/>
    <id>http://uteric.github.io/R/R_variance/</id>
    <published>2020-05-31T21:41:13.000Z</published>
    <updated>2020-05-31T21:41:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>标准差（standard deviation）和方差（variance），都是表示数据点的离散程度，它们的值越接近0表示离散程度越小，值越大表示离散程度越大。</p><p>对方差进行开平方运算，得到的就是标准差。标准差的优势在于，其单位与数据本身单位一致，所以更加直观。</p><p>在R中，计算方差的函数为var()，计算标准差的函数为sd()，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; x=rnorm(10,mean=3,sd=0.5)</span><br><span class="line">&gt; x</span><br><span class="line"> [1] 3.459304 3.176322 3.417269 3.477847 3.458249 2.290683 3.087733 2.796081 3.147183 3.164584</span><br><span class="line">&gt; var(x)</span><br><span class="line">[1] 0.1375574</span><br><span class="line">&gt; sd(x)</span><br><span class="line">[1] 0.3708872</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;标准差（standard deviation）和方差（variance），都是表示数据点的离散程度，它们的值越接近0表示离散程度越小，值越大表示离散程度越大。&lt;/p&gt;
&lt;p&gt;对方差进行开平方运算，得到的就是标准差。标准差的优势在于，其单位与数据本身单位一致，所以更加直观。&lt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>在R中使用查看数据范围</title>
    <link href="http://uteric.github.io/R/R_range/"/>
    <id>http://uteric.github.io/R/R_range/</id>
    <published>2020-05-31T21:14:52.000Z</published>
    <updated>2020-05-31T21:14:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>方法一：range()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- c(23,12,3,45,25,31,17)</span><br><span class="line">&gt; range(x)</span><br><span class="line">[1]  3 45</span><br><span class="line"></span><br><span class="line">&gt; x &lt;- c(23,12,3,45,25,31,17,NA) <span class="comment"># 若数据中含有NA，则会报错</span></span><br><span class="line">&gt; range(x)</span><br><span class="line">[1] NA NA</span><br></pre></td></tr></table></figure><p>方法二：min()与max()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; min(x)</span><br><span class="line">[1] 3</span><br><span class="line">&gt; max(x)</span><br><span class="line">[1] 45</span><br><span class="line"></span><br><span class="line">&gt; x &lt;- c(23,12,3,45,25,31,17,NA) <span class="comment"># 若数据中含有NA，则会报错</span></span><br><span class="line">&gt; min(x)</span><br><span class="line">[1] NA</span><br><span class="line">&gt; max(x)</span><br><span class="line">[1] NA</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;方法一：range()&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>使用na.omit()删除缺失值</title>
    <link href="http://uteric.github.io/R/R_naomit/"/>
    <id>http://uteric.github.io/R/R_naomit/</id>
    <published>2020-05-31T20:21:40.000Z</published>
    <updated>2020-05-31T20:21:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>在R中，如果数据中存在缺失值（NA），在进行数值计算或统计时会报错，因此，需要将NA去掉，可以使用na.omit()，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- c(23,12,3,45,25,31,17,NA)</span><br><span class="line">&gt; mean(x)</span><br><span class="line">[1] NA</span><br><span class="line"></span><br><span class="line">&gt; x &lt;- na.omit(x)</span><br><span class="line">&gt; x</span><br><span class="line">[1] 23 12  3 45 25 31 17</span><br><span class="line">attr(,<span class="string">"na.action"</span>)</span><br><span class="line">[1] 8</span><br><span class="line">attr(,<span class="string">"class"</span>)</span><br><span class="line">[1] <span class="string">"omit"</span></span><br><span class="line"></span><br><span class="line">&gt; x &lt;- as.vector(x)</span><br><span class="line">&gt; x</span><br><span class="line">[1] 23 12  3 45 25 31 17</span><br><span class="line"></span><br><span class="line">&gt; mean(x)</span><br><span class="line">[1] 22.28571</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在R中，如果数据中存在缺失值（NA），在进行数值计算或统计时会报错，因此，需要将NA去掉，可以使用na.omit()，例如：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>在R中求平均数与中位数</title>
    <link href="http://uteric.github.io/R/R_mean/"/>
    <id>http://uteric.github.io/R/R_mean/</id>
    <published>2020-05-31T20:04:01.000Z</published>
    <updated>2020-05-31T20:04:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>mean()用于求平均数，语法：mean(x, na.rm = FALSE)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- c(12,3,45,23,25,31,17)</span><br><span class="line">&gt; mean(x)</span><br><span class="line">[1] 22.28571</span><br><span class="line"></span><br><span class="line">&gt; x &lt;- c(12,3,45,23,25,31,17,NA) <span class="comment"># 这个向量中含NA，计算平均数会产生NA;</span></span><br><span class="line">&gt; mean(x)</span><br><span class="line">[1] NA</span><br><span class="line">&gt; mean(x,na.rm=TRUE) <span class="comment"># na.rm=TRUE，去除缺失值（missing values）</span></span><br><span class="line">[1] 22.28571</span><br></pre></td></tr></table></figure><p>median()用于求中位数，语法：median(x, na.rm = FALSE)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- c(23,12,3,45,25,31,17,NA)</span><br><span class="line">&gt; median(x,na.rm=TRUE)</span><br><span class="line">[1] 23</span><br></pre></td></tr></table></figure><p>注意，在这两个例子当中，中位数与平均数接近，这是个特例，一般情况下，这两个数据可能差别极大。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;mean()用于求平均数，语法：mean(x, na.rm = FALSE)&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="中位数" scheme="http://uteric.github.io/tags/%E4%B8%AD%E4%BD%8D%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>利用透明度绘制高密度图</title>
    <link href="http://uteric.github.io/R/R_highdensity/"/>
    <id>http://uteric.github.io/R/R_highdensity/</id>
    <published>2020-05-31T04:17:14.000Z</published>
    <updated>2020-05-31T04:17:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>在对大样本绘制密度图时，重叠的点往往无法有效展示，此时，可以通过设置透明度来强调重叠的点。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">par(pin=c(3,3))</span><br><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,col=rgb(8,81,156,80,maxColorValue=255),pch=20,cex=0.8,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xaxt=<span class="string">"n"</span>,yaxt=<span class="string">"n"</span>,xlim=c(-1,1),ylim=c(-1,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">axis(1,at=c(-1,0,1))</span><br><span class="line">axis(2,at=c(-1,0,1))</span><br><span class="line">abline(h=0,col=<span class="string">"black"</span>)</span><br><span class="line">abline(v=0,col=<span class="string">"black"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/density01.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在对大样本绘制密度图时，重叠的点往往无法有效展示，此时，可以通过设置透明度来强调重叠的点。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="density" scheme="http://uteric.github.io/tags/density/"/>
    
  </entry>
  
  <entry>
    <title>使用layout定义图形排版</title>
    <link href="http://uteric.github.io/R/R_layout/"/>
    <id>http://uteric.github.io/R/R_layout/</id>
    <published>2020-05-30T22:54:57.000Z</published>
    <updated>2020-05-30T22:54:57.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layout(matrix(c(1,1,2,3),2,2,byrow=T))</span><br><span class="line">layout.show(3)</span><br></pre></td></tr></table></figure><p><img src="/images/R/layout01.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layout(matrix(c(1,0,2,2,3,4),3,2,byrow=T))</span><br><span class="line">layout.show(4)</span><br></pre></td></tr></table></figure><p><img src="/images/R/layout02.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="layout" scheme="http://uteric.github.io/tags/layout/"/>
    
  </entry>
  
  <entry>
    <title>使用mfrow和mfcol实现R的图形排版</title>
    <link href="http://uteric.github.io/R/R_mfrow/"/>
    <id>http://uteric.github.io/R/R_mfrow/</id>
    <published>2020-05-30T19:36:02.000Z</published>
    <updated>2020-05-30T19:36:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>在R绘图中，可以使用mfrow=c(nrows, ncols)或mfcol=c(nrows, ncols)配合par()来实现图形排版。mfrow=c(nrows, ncols)是按行排列，mfcol=c(nrows, ncols)是按列排列。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; attach(mtcars)</span><br><span class="line">&gt; par(mfrow=c(2,2))</span><br><span class="line">&gt; hist(wt)</span><br><span class="line">&gt; hist(cyl)</span><br><span class="line">&gt; hist(disp)</span><br><span class="line">&gt; hist(hp)</span><br></pre></td></tr></table></figure><p><img src="/images/R/mfrow01.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">par(mfcol=c(2,2))</span><br><span class="line">hist(wt)</span><br><span class="line">hist(cyl)</span><br><span class="line">hist(disp)</span><br><span class="line">hist(hp)</span><br></pre></td></tr></table></figure><p><img src="/images/R/mfrow02.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在R绘图中，可以使用mfrow=c(nrows, ncols)或mfcol=c(nrows, ncols)配合par()来实现图形排版。mfrow=c(nrows, ncols)是按行排列，mfcol=c(nrows, ncols)是按列排列。&lt;/p&gt;
&lt;figure cl
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="mfrow" scheme="http://uteric.github.io/tags/mfrow/"/>
    
  </entry>
  
  <entry>
    <title>R绘图使用pin控制图形大小</title>
    <link href="http://uteric.github.io/R/R_pinsize/"/>
    <id>http://uteric.github.io/R/R_pinsize/</id>
    <published>2020-05-30T19:23:34.000Z</published>
    <updated>2020-05-30T19:23:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用R绘图时，可以使用pin控制图形大小，语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">par(pin=c(3,3))</span><br><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/pin01.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">par(pin=c(5,3))</span><br><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/pin02.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">par(pin=c(2,3))</span><br><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/pin03.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用R绘图时，可以使用pin控制图形大小，语法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="pin" scheme="http://uteric.github.io/tags/pin/"/>
    
  </entry>
  
  <entry>
    <title>R中的点样式pch</title>
    <link href="http://uteric.github.io/R/R_pch/"/>
    <id>http://uteric.github.io/R/R_pch/</id>
    <published>2020-05-30T18:44:31.000Z</published>
    <updated>2020-05-30T18:44:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>R中使用pch来控制点的样式，可以使用help(pch)来查看其用法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">help</span>(pch)</span><br></pre></td></tr></table></figure><p><img src="/images/R/pch.png" alt></p><p>如上图，pch共25种，默认为1，其中，15:18是fill形状，但无border；19：25既有fill又有border；比如，pch=16和pch=19，区别在于，19有border，所以比16大。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;R中使用pch来控制点的样式，可以使用help(pch)来查看其用法&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="pch" scheme="http://uteric.github.io/tags/pch/"/>
    
  </entry>
  
  <entry>
    <title>R绘图使用abline添加直线</title>
    <link href="http://uteric.github.io/R/R_abline/"/>
    <id>http://uteric.github.io/R/R_abline/</id>
    <published>2020-05-30T17:49:22.000Z</published>
    <updated>2020-05-30T17:49:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>一、水平线</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">abline(h=0.5,col=<span class="string">"black"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/abline01.png" alt></p><p>二、垂直线</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">abline(v=0.5,col=<span class="string">"blue"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/abline02.png" alt></p><p>三、水平线与垂直线</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">abline(h=0.5,v=0.5,col=c(<span class="string">"black"</span>,<span class="string">"blue"</span>))</span><br></pre></td></tr></table></figure><p><img src="/images/R/abline03.png" alt></p><p>四、斜线</p><p>斜线是由两个参数定义的，参数a代表斜线与Y轴的交战，参数b代表斜率</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">abline(a=0.2，b=1)</span><br></pre></td></tr></table></figure><p><img src="/images/R/abline04.png" alt></p><p>另外，可以控制线的颜色，宽度和线型，参数为col，lwd，lty，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br><span class="line">abline(a=0.8，b=-1,col=<span class="string">"red"</span>,lwd=2,lty=2)</span><br></pre></td></tr></table></figure><p><img src="/images/R/abline05.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、水平线&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="abline" scheme="http://uteric.github.io/tags/abline/"/>
    
  </entry>
  
  <entry>
    <title>R设置坐标轴原点</title>
    <link href="http://uteric.github.io/R/plot_origin/"/>
    <id>http://uteric.github.io/R/plot_origin/</id>
    <published>2020-05-30T17:33:28.000Z</published>
    <updated>2020-05-30T17:33:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用R绘图时，默认的坐标轴交点并不是X和Y的最小值，我们可以通过xaxs=”i”和yaxs=”i”来进行设置。</p><p>使用默认设置，生成图形如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1))</span><br></pre></td></tr></table></figure><p><img src="/images/R/origin01.png" alt></p><p>设置之后，图形如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(data<span class="variable">$V1</span>,data<span class="variable">$V2</span>,pch=20,xlab=<span class="string">""</span>,ylab=<span class="string">""</span>,xlim=c(0,1),ylim=c(0,1),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/R/origin02.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用R绘图时，默认的坐标轴交点并不是X和Y的最小值，我们可以通过xaxs=”i”和yaxs=”i”来进行设置。&lt;/p&gt;
&lt;p&gt;使用默认设置，生成图形如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
      <category term="编程语言" scheme="http://uteric.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://uteric.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>从BAM文件中提取指定区域的READS数</title>
    <link href="http://uteric.github.io/CHIPSEQ/bamreads/"/>
    <id>http://uteric.github.io/CHIPSEQ/bamreads/</id>
    <published>2020-05-28T19:59:29.000Z</published>
    <updated>2020-05-28T19:59:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过序列比对得到BAM文件后，常常需要对READS数进行统计，以便进行下游分析与作图，可以说，这是对BAM数据可视化的关键步骤。</p><p>一、全局统计</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; samtools view -c targetc.bam</span><br><span class="line">6</span><br></pre></td></tr></table></figure><p>二、指定区域统计</p><p>对于指定区域进行统计，需要用到bedtools multicov，BAM文件可以是一个或多个，语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; bedtools multicov -bams targetc.bam -bed chr19d.bed </span><br><span class="line">chr19   3100000 3100100 1</span><br><span class="line">chr19   3100100 3100300 5</span><br><span class="line"></span><br><span class="line">&gt; multiBamCov -bams targetc.bam -bed chr19d.bed <span class="comment"># bedtools multicov与multiBamCov效果一致</span></span><br><span class="line">chr19   3100000 3100100 1</span><br><span class="line">chr19   3100100 3100300 5</span><br><span class="line"></span><br><span class="line">&gt; bedtools multicov -bams targetc.bam -bed chr19d.bed &gt; result.bed <span class="comment"># 可以输出到文件</span></span><br><span class="line">&gt; less result.bed</span><br><span class="line"></span><br><span class="line">chr19   3100000 3100100 1</span><br><span class="line">chr19   3100100 3100300 5</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过序列比对得到BAM文件后，常常需要对READS数进行统计，以便进行下游分析与作图，可以说，这是对BAM数据可视化的关键步骤。&lt;/p&gt;
&lt;p&gt;一、全局统计&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g
      
    
    </summary>
    
      <category term="生物信息" scheme="http://uteric.github.io/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="BAM" scheme="http://uteric.github.io/tags/BAM/"/>
    
  </entry>
  
  <entry>
    <title>BAM文件转BED文件</title>
    <link href="http://uteric.github.io/CHIPSEQ/bamtobed/"/>
    <id>http://uteric.github.io/CHIPSEQ/bamtobed/</id>
    <published>2020-05-28T17:37:47.000Z</published>
    <updated>2020-05-28T17:37:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>有多种方法可以实现从BAM文件到BED文件的转换，比较简单的一种，是使用bedtools bamtobed，语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bedtools bamtobed -i ***.bam &gt; ***.bed</span><br></pre></td></tr></table></figure><p>实例如下：</p><p>准备一个BAM文件，targetc.bam</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; samtools view targetc.bam | head</span><br><span class="line"></span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:1116:8464:18014      16      chr19   3100027 31      36M     *       0       0       AGGGCAATGGGCCACTGCCTCAGCCAGCTTTTTAGG     JJIJJJIJIJJJGGIJJJJJJJJHHHHHFFFFFCCC     AS:i:0  XS:i:-5 XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:36 YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:1205:1404:46284      0       chr19   3100235 23      36M     *       0       0       ACATATGTCTTGTGAGTGACTCTCTTTCCTTCCCTT     CCCFFFFFHHHHHIJJHG?&lt;CEFFEHHCEHHIHJIJ     AS:i:-10        XN:i:0  XM:i:2  XO:i:0  XG:i:0  NM:i:2  MD:Z:2G5G27     YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:2216:8268:81593      16      chr19   3100237 23      36M     *       0       0       ATATGTCTTGTGAGTGACTCTCTTTCCTTCCCTTTG     JJIJIIGJJIIIGIIHHIJJIHHFHDBHFFDDFC@@     AS:i:-11        XN:i:0  XM:i:2  XO:i:0  XG:i:0  NM:i:2  MD:Z:0G5G29     YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:1210:11323:25283     16      chr19   3100240 23      36M     *       0       0       TGTCTTGTGAGTGACTCTCTTTCCTTCCCTTTGCCC     IJJJJJJIJIJJJIJIGIJJJJJHHHHHFFFFFCCC     AS:i:-11        XN:i:0  XM:i:2  XO:i:0  XG:i:0  NM:i:2  MD:Z:3G29T2     YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:1:1206:10953:35815     16      chr19   3100246 40      36M     *       0       0       GTGAGTGACTCTCTTTCCTTCCCTTTGCCCTTCCAT     JJJIJIHHJJIJJJJJJJJJJJJHHHHHFFFFFCCC     AS:i:-5 XN:i:0  XM:i:1  XO:i:0  XG:i:0  NM:i:1  MD:Z:27T8       YT:Z:UU</span><br><span class="line">HWI-ST1113:280:H7KE6ADXX:2:2216:12650:100608    16      chr19   3100250 40      36M     *       0       0       GTGACTCTCTTTCCTTCCCTTTGCCCTTCCATCTTT     JJIHJIJJJJJJJJJJJJJJJJJHHHHHFFFFFCCC     AS:i:-5 XN:i:0  XM:i:1  XO:i:0  XG:i:0  NM:i:1  MD:Z:23T12      YT:Z:UU</span><br></pre></td></tr></table></figure><p>转换为bed文件，targetc.bed</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; bedtools bamtobed -i targetc.bam &gt; targetc.bed</span><br><span class="line">&gt; less targetc.bed</span><br><span class="line"></span><br><span class="line">chr19   3100026 3100062 HWI-ST1113:280:H7KE6ADXX:1:1116:8464:18014      31      -</span><br><span class="line">chr19   3100234 3100270 HWI-ST1113:280:H7KE6ADXX:1:1205:1404:46284      23      +</span><br><span class="line">chr19   3100236 3100272 HWI-ST1113:280:H7KE6ADXX:1:2216:8268:81593      23      -</span><br><span class="line">chr19   3100239 3100275 HWI-ST1113:280:H7KE6ADXX:2:1210:11323:25283     23      -</span><br><span class="line">chr19   3100245 3100281 HWI-ST1113:280:H7KE6ADXX:1:1206:10953:35815     40      -</span><br><span class="line">chr19   3100249 3100285 HWI-ST1113:280:H7KE6ADXX:2:2216:12650:100608    40      -</span><br></pre></td></tr></table></figure><p>两两比较，就会发现BAM文件与BED文件的区别，BED文件有6列：</p><p>第一列：染色体位置<br>第二列：start<br>第三列：end<br>第四列：对应BAM文件的QNAME，包含测序平台，read name等信息<br>第五列：对应BAM文件的MAPQ，即比对质量<br>第六列：正负链</p><p><img src="/images/CHIP/bam01.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有多种方法可以实现从BAM文件到BED文件的转换，比较简单的一种，是使用bedtools bamtobed，语法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c
      
    
    </summary>
    
      <category term="生物信息" scheme="http://uteric.github.io/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="BED" scheme="http://uteric.github.io/tags/BED/"/>
    
  </entry>
  
</feed>
